/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     BAT32G157.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.0
 * @date     18. January 2022
 * @note     Generated by SVDConv V3.3.24 on Tuesday, 18.01.2022 14:55:00
 *           from File 'BAT32G157.svd',
 *           last modified on Monday, 21.06.2021 07:24:26
 */




// -----------------------------  Register Item Address: CGC_CMC  ---------------------------------
// SVD Line: 93

unsigned char CGC_CMC __AT (0x40020400);



// --------------------------------  Field Item: CGC_CMC_AMPH  ------------------------------------
// SVD Line: 104

//  <item> SFDITEM_FIELD__CGC_CMC_AMPH
//    <name> AMPH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020400) Control of X1 clock oscillation frequency </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.0..0> AMPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CGC_CMC_AMPHS  -----------------------------------
// SVD Line: 112

//  <item> SFDITEM_FIELD__CGC_CMC_AMPHS
//    <name> AMPHS </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40020400) Control of XT1 clock oscillation frequency </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_CMC >> 1) & 0x3), ((CGC_CMC = (CGC_CMC & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_OSCSELS  ----------------------------------
// SVD Line: 120

//  <item> SFDITEM_FIELD__CGC_CMC_OSCSELS
//    <name> OSCSELS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020400) Sub OSC Select </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.4..4> OSCSELS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_EXCLKS  -----------------------------------
// SVD Line: 128

//  <item> SFDITEM_FIELD__CGC_CMC_EXCLKS
//    <name> EXCLKS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020400) External Clock input mode </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.5..5> EXCLKS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_OSCSEL  -----------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__CGC_CMC_OSCSEL
//    <name> OSCSEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020400) Main OSC Select </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.6..6> OSCSEL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CGC_CMC_EXCLK  -----------------------------------
// SVD Line: 144

//  <item> SFDITEM_FIELD__CGC_CMC_EXCLK
//    <name> EXCLK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020400) External Clock input mode </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.7..7> EXCLK
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CMC  ------------------------------------
// SVD Line: 93

//  <rtree> SFDITEM_REG__CGC_CMC
//    <name> CMC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020400) Clock operaton Mode Control Register </i>
//    <loc> ( (unsigned char)((CGC_CMC >> 0) & 0xFF), ((CGC_CMC = (CGC_CMC & ~(0xF7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CMC_AMPH </item>
//    <item> SFDITEM_FIELD__CGC_CMC_AMPHS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_OSCSELS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_EXCLKS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_OSCSEL </item>
//    <item> SFDITEM_FIELD__CGC_CMC_EXCLK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_CSC  ---------------------------------
// SVD Line: 155

unsigned char CGC_CSC __AT (0x40020401);



// -------------------------------  Field Item: CGC_CSC_HIOSTOP  ----------------------------------
// SVD Line: 166

//  <item> SFDITEM_FIELD__CGC_CSC_HIOSTOP
//    <name> HIOSTOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020401) \nHigh-speed on-chip oscillator clock operation control\n0 : START = High-speed on-chip oscillator operating\n1 : STOP = High-speed on-chip oscillator stopped </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.0..0> HIOSTOP
//        <0=> 0: START = High-speed on-chip oscillator operating
//        <1=> 1: STOP = High-speed on-chip oscillator stopped
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_CSC_XTSTOP  -----------------------------------
// SVD Line: 186

//  <item> SFDITEM_FIELD__CGC_CSC_XTSTOP
//    <name> XTSTOP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020401) \nSubsystem clock operation control\n0 : START = XT1 oscillator operating or External clock from EXCLKS pin is valid\n1 : STOP = XT1 oscillator stop or External clock from EXCLKS pin is invalid </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.6..6> XTSTOP
//        <0=> 0: START = XT1 oscillator operating or External clock from EXCLKS pin is valid
//        <1=> 1: STOP = XT1 oscillator stop or External clock from EXCLKS pin is invalid
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: CGC_CSC_MSTOP  -----------------------------------
// SVD Line: 206

//  <item> SFDITEM_FIELD__CGC_CSC_MSTOP
//    <name> MSTOP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020401) \nHigh-speed system clock operation control\n0 : START = X1 oscillator operating or External clock from EXCLK pin is valid\n1 : STOP = X1 oscillator stop or External clock from EXCLK pin is invalid </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.7..7> MSTOP
//        <0=> 0: START = X1 oscillator operating or External clock from EXCLK pin is valid
//        <1=> 1: STOP = X1 oscillator stop or External clock from EXCLK pin is invalid
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CSC  ------------------------------------
// SVD Line: 155

//  <rtree> SFDITEM_REG__CGC_CSC
//    <name> CSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020401) Clock operation Status Register </i>
//    <loc> ( (unsigned char)((CGC_CSC >> 0) & 0xFF), ((CGC_CSC = (CGC_CSC & ~(0xC1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CSC_HIOSTOP </item>
//    <item> SFDITEM_FIELD__CGC_CSC_XTSTOP </item>
//    <item> SFDITEM_FIELD__CGC_CSC_MSTOP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_OSTC  --------------------------------
// SVD Line: 229

unsigned char CGC_OSTC __AT (0x40020402);



// ---------------------------------  Register Item: CGC_OSTC  ------------------------------------
// SVD Line: 229

//  <item> SFDITEM_REG__CGC_OSTC
//    <name> OSTC </name>
//    <i> [Bits 7..0] RO (@ 0x40020402) Oscillation stabilization time counter status </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_OSTC >> 0) & 0xFFFFFFFF), ((CGC_OSTC = (CGC_OSTC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_OSTS  --------------------------------
// SVD Line: 240

unsigned char CGC_OSTS __AT (0x40020403);



// ---------------------------------  Register Item: CGC_OSTS  ------------------------------------
// SVD Line: 240

//  <item> SFDITEM_REG__CGC_OSTS
//    <name> OSTS </name>
//    <i> [Bits 7..0] RW (@ 0x40020403) Oscillation stabilization time select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_OSTS >> 0) & 0xFFFFFFFF), ((CGC_OSTS = (CGC_OSTS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_CKC  ---------------------------------
// SVD Line: 251

unsigned char CGC_CKC __AT (0x40020404);



// --------------------------------  Field Item: CGC_CKC_MCM0  ------------------------------------
// SVD Line: 262

//  <item> SFDITEM_FIELD__CGC_CKC_MCM0
//    <name> MCM0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020404) \nMain system clock (fMAIN) operation control\n0 : fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)\n1 : fMX = Select the high-speed system clock (fMX) as the main system clock (fMAIN) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.4..4> MCM0
//        <0=> 0: fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)
//        <1=> 1: fMX = Select the high-speed system clock (fMX) as the main system clock (fMAIN)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_MCS  ------------------------------------
// SVD Line: 282

//  <item> SFDITEM_FIELD__CGC_CKC_MCS
//    <name> MCS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40020404) \nStatus of Main system clock (fMAIN)\n0 : fIH = High-speed on-chip oscillator clock (fIH)\n1 : fMX = High-speed system clock (fMX) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.5..5> MCS
//        <0=> 0: fIH = High-speed on-chip oscillator clock (fIH)
//        <1=> 1: fMX = High-speed system clock (fMX)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_CSS  ------------------------------------
// SVD Line: 302

//  <item> SFDITEM_FIELD__CGC_CKC_CSS
//    <name> CSS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020404) \nSelection of CPU/peripheral hardware clock (fCLK)\n0 : fMAIN = Main system clock (fMAIN)\n1 : fSUB = Subsystem clock (fSUB) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.6..6> CSS
//        <0=> 0: fMAIN = Main system clock (fMAIN)
//        <1=> 1: fSUB = Subsystem clock (fSUB)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_CLS  ------------------------------------
// SVD Line: 322

//  <item> SFDITEM_FIELD__CGC_CKC_CLS
//    <name> CLS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020404) \nStatus of CPU/peripheral hardware clock (fCLK)\n0 : fMAIN = Main system clock (fMAIN)\n1 : fSUB = Subsystem clock (fSUB) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.7..7> CLS
//        <0=> 0: fMAIN = Main system clock (fMAIN)
//        <1=> 1: fSUB = Subsystem clock (fSUB)
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CKC  ------------------------------------
// SVD Line: 251

//  <rtree> SFDITEM_REG__CGC_CKC
//    <name> CKC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020404) System clock control register </i>
//    <loc> ( (unsigned char)((CGC_CKC >> 0) & 0xFF), ((CGC_CKC = (CGC_CKC & ~(0x50UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x50) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CKC_MCM0 </item>
//    <item> SFDITEM_FIELD__CGC_CKC_MCS </item>
//    <item> SFDITEM_FIELD__CGC_CKC_CSS </item>
//    <item> SFDITEM_FIELD__CGC_CKC_CLS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PER0  --------------------------------
// SVD Line: 345

unsigned char CGC_PER0 __AT (0x40020420);



// -------------------------------  Field Item: CGC_PER0_TM40EN  ----------------------------------
// SVD Line: 356

//  <item> SFDITEM_FIELD__CGC_PER0_TM40EN
//    <name> TM40EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020420) \nControl of the TM4 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.0..0> TM40EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_TM81EN  ----------------------------------
// SVD Line: 375

//  <item> SFDITEM_FIELD__CGC_PER0_TM81EN
//    <name> TM81EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020420) \nControl of the TM8 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.1..1> TM81EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI0EN  ----------------------------------
// SVD Line: 394

//  <item> SFDITEM_FIELD__CGC_PER0_SCI0EN
//    <name> SCI0EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020420) \nControl of the SCI0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.2..2> SCI0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI1EN  ----------------------------------
// SVD Line: 413

//  <item> SFDITEM_FIELD__CGC_PER0_SCI1EN
//    <name> SCI1EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020420) \nControl of the SCI1 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.3..3> SCI1EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI2EN  ----------------------------------
// SVD Line: 432

//  <item> SFDITEM_FIELD__CGC_PER0_SCI2EN
//    <name> SCI2EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020420) \nControl of the SCI2 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.4..4> SCI2EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER0_IICA0EN  ----------------------------------
// SVD Line: 451

//  <item> SFDITEM_FIELD__CGC_PER0_IICA0EN
//    <name> IICA0EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020420) \nControl of the IICA0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.5..5> IICA0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER0_IICA1EN  ----------------------------------
// SVD Line: 470

//  <item> SFDITEM_FIELD__CGC_PER0_IICA1EN
//    <name> IICA1EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020420) \nControl of the IICA1 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.6..6> IICA1EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_RTCEN  -----------------------------------
// SVD Line: 489

//  <item> SFDITEM_FIELD__CGC_PER0_RTCEN
//    <name> RTCEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020420) \nControl of the RTC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.7..7> RTCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER0  ------------------------------------
// SVD Line: 345

//  <rtree> SFDITEM_REG__CGC_PER0
//    <name> PER0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020420) Peripheral enable register 0 </i>
//    <loc> ( (unsigned char)((CGC_PER0 >> 0) & 0xFF), ((CGC_PER0 = (CGC_PER0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER0_TM40EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_TM81EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI1EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI2EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_IICA0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_IICA1EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_RTCEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PER1  --------------------------------
// SVD Line: 510

unsigned char CGC_PER1 __AT (0x4002081A);



// -------------------------------  Field Item: CGC_PER1_ADCEN  -----------------------------------
// SVD Line: 522

//  <item> SFDITEM_FIELD__CGC_PER1_ADCEN
//    <name> ADCEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002081A) \nControl of the ADC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.0..0> ADCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_LCDBEN  ----------------------------------
// SVD Line: 541

//  <item> SFDITEM_FIELD__CGC_PER1_LCDBEN
//    <name> LCDBEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002081A) \nControl of the LCDB input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.1..1> LCDBEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_EPWMEN  ----------------------------------
// SVD Line: 560

//  <item> SFDITEM_FIELD__CGC_PER1_EPWMEN
//    <name> EPWMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002081A) \nControl of the EPWM input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.2..2> EPWMEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_DMAEN  -----------------------------------
// SVD Line: 579

//  <item> SFDITEM_FIELD__CGC_PER1_DMAEN
//    <name> DMAEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002081A) \nControl of the DMA input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.3..3> DMAEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER1_PGACMPEN  ---------------------------------
// SVD Line: 617

//  <item> SFDITEM_FIELD__CGC_PER1_PGACMPEN
//    <name> PGACMPEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002081A) \nControl of the PGACMP input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.5..5> PGACMPEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER1_SPIHS0EN  ---------------------------------
// SVD Line: 636

//  <item> SFDITEM_FIELD__CGC_PER1_SPIHS0EN
//    <name> SPIHS0EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4002081A) \nControl of the SPIHS0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.6..6> SPIHS0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER1_SPIHS1EN  ---------------------------------
// SVD Line: 655

//  <item> SFDITEM_FIELD__CGC_PER1_SPIHS1EN
//    <name> SPIHS1EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4002081A) \nControl of the SPIHS1 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.7..7> SPIHS1EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER1  ------------------------------------
// SVD Line: 510

//  <rtree> SFDITEM_REG__CGC_PER1
//    <name> PER1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4002081A) Peripheral enable register 1 </i>
//    <loc> ( (unsigned char)((CGC_PER1 >> 0) & 0xFF), ((CGC_PER1 = (CGC_PER1 & ~(0xEFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER1_ADCEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_LCDBEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_EPWMEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_DMAEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_PGACMPEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_SPIHS0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_SPIHS1EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PER2  --------------------------------
// SVD Line: 677

unsigned char CGC_PER2 __AT (0x4002081B);



// -------------------------------  Field Item: CGC_PER2_USBEN  -----------------------------------
// SVD Line: 689

//  <item> SFDITEM_FIELD__CGC_PER2_USBEN
//    <name> USBEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002081B) \nControl of the USB input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER2 ) </loc>
//      <o.0..0> USBEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER2_SSIEN  -----------------------------------
// SVD Line: 708

//  <item> SFDITEM_FIELD__CGC_PER2_SSIEN
//    <name> SSIEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002081B) \nControl of the SSI input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER2 ) </loc>
//      <o.1..1> SSIEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER2  ------------------------------------
// SVD Line: 677

//  <rtree> SFDITEM_REG__CGC_PER2
//    <name> PER2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4002081B) Peripheral enable register 2 </i>
//    <loc> ( (unsigned char)((CGC_PER2 >> 0) & 0xFF), ((CGC_PER2 = (CGC_PER2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER2_USBEN </item>
//    <item> SFDITEM_FIELD__CGC_PER2_SSIEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_OSMC  --------------------------------
// SVD Line: 729

unsigned char CGC_OSMC __AT (0x40020423);



// ------------------------------  Field Item: CGC_OSMC_WUTMMCK0  ---------------------------------
// SVD Line: 740

//  <item> SFDITEM_FIELD__CGC_OSMC_WUTMMCK0
//    <name> WUTMMCK0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020423) \nSelection of operation clock for real-time clock, 15-bit interval timer\n0 : fSUB = The subsystem clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.\n1 : fIL = The low-speed on-chip oscillator clock is selected as the operation clock for the real-time clock and the 15-bit interval timer. </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_OSMC ) </loc>
//      <o.4..4> WUTMMCK0
//        <0=> 0: fSUB = The subsystem clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.
//        <1=> 1: fIL = The low-speed on-chip oscillator clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_OSMC_RTCLPC  ----------------------------------
// SVD Line: 760

//  <item> SFDITEM_FIELD__CGC_OSMC_RTCLPC
//    <name> RTCLPC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020423) \nSetting in DEEPSLEEP mode or SLEEP mode while subsystem clock is selected as CPU clock\n0 : Enable = Enables supply of subsystem clock to peripheral function\n1 : Disable = Stops supply of subsystem clock to peripheral functions other than real-time clock and 15-bit interval timer. </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_OSMC ) </loc>
//      <o.7..7> RTCLPC
//        <0=> 0: Enable = Enables supply of subsystem clock to peripheral function
//        <1=> 1: Disable = Stops supply of subsystem clock to peripheral functions other than real-time clock and 15-bit interval timer.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_OSMC  ------------------------------------
// SVD Line: 729

//  <rtree> SFDITEM_REG__CGC_OSMC
//    <name> OSMC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020423) Subsystem clock supply mode control register </i>
//    <loc> ( (unsigned char)((CGC_OSMC >> 0) & 0xFF), ((CGC_OSMC = (CGC_OSMC & ~(0x90UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x90) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_OSMC_WUTMMCK0 </item>
//    <item> SFDITEM_FIELD__CGC_OSMC_RTCLPC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CGC_SUBCKSEL  ------------------------------
// SVD Line: 783

unsigned char CGC_SUBCKSEL __AT (0x40020407);



// ----------------------------  Field Item: CGC_SUBCKSEL_SELLOSC  --------------------------------
// SVD Line: 792

//  <item> SFDITEM_FIELD__CGC_SUBCKSEL_SELLOSC
//    <name> SELLOSC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020407) \nSelect LOSC or SUBOSC\n0 : SUBOSC = Select SUBOSC as the SubSystem clock\n1 : LOSC = Select LOSC as the SubSystem clock </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_SUBCKSEL ) </loc>
//      <o.0..0> SELLOSC
//        <0=> 0: SUBOSC = Select SUBOSC as the SubSystem clock
//        <1=> 1: LOSC = Select LOSC as the SubSystem clock
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CGC_SUBCKSEL  ----------------------------------
// SVD Line: 783

//  <rtree> SFDITEM_REG__CGC_SUBCKSEL
//    <name> SUBCKSEL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020407) Subsystem Clock select register </i>
//    <loc> ( (unsigned char)((CGC_SUBCKSEL >> 0) & 0xFF), ((CGC_SUBCKSEL = (CGC_SUBCKSEL & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_SUBCKSEL_SELLOSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CGC_HOCODIV  -------------------------------
// SVD Line: 813

unsigned char CGC_HOCODIV __AT (0x40021C20);



// -------------------------------  Register Item: CGC_HOCODIV  -----------------------------------
// SVD Line: 813

//  <item> SFDITEM_REG__CGC_HOCODIV
//    <name> HOCODIV </name>
//    <i> [Bits 7..0] RW (@ 0x40021C20) High-speed on-chip oscillator frequency select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_HOCODIV >> 0) & 0xFFFFFFFF), ((CGC_HOCODIV = (CGC_HOCODIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CGC_HIOTRM  -------------------------------
// SVD Line: 824

unsigned char CGC_HIOTRM __AT (0x40021C00);



// --------------------------------  Register Item: CGC_HIOTRM  -----------------------------------
// SVD Line: 824

//  <item> SFDITEM_REG__CGC_HIOTRM
//    <name> HIOTRM </name>
//    <i> [Bits 7..0] RW (@ 0x40021C00) High-speed on-chip oscillator trimming register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_HIOTRM >> 0) & 0xFFFFFFFF), ((CGC_HIOTRM = (CGC_HIOTRM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_MCKC  --------------------------------
// SVD Line: 835

unsigned char CGC_MCKC __AT (0x40020C00);



// -------------------------------  Field Item: CGC_MCKC_CKSELR  ----------------------------------
// SVD Line: 846

//  <item> SFDITEM_FIELD__CGC_MCKC_CKSELR
//    <name> CKSELR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020C00) \nSelect f(IH) or f(PLL)\n0 : fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)\n1 : PLL = Select the PLL clock (fPLL) as the main system clock (fMAIN) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_MCKC ) </loc>
//      <o.0..0> CKSELR
//        <0=> 0: fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)
//        <1=> 1: PLL = Select the PLL clock (fPLL) as the main system clock (fMAIN)
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: CGC_MCKC_PDIV  -----------------------------------
// SVD Line: 866

//  <item> SFDITEM_FIELD__CGC_MCKC_PDIV
//    <name> PDIV </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40020C00) PLL frequency select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_MCKC >> 1) & 0x3), ((CGC_MCKC = (CGC_MCKC & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CGC_MCKC_CKSTR  -----------------------------------
// SVD Line: 874

//  <item> SFDITEM_FIELD__CGC_MCKC_CKSTR
//    <name> CKSTR </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020C00) \nStatus of Main system clock (fMAIN)\n0 : fIH = High-speed on-chip oscillator clock (fIH)\n1 : fPLL = PLL clock (fPLL) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_MCKC ) </loc>
//      <o.7..7> CKSTR
//        <0=> 0: fIH = High-speed on-chip oscillator clock (fIH)
//        <1=> 1: fPLL = PLL clock (fPLL)
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_MCKC  ------------------------------------
// SVD Line: 835

//  <rtree> SFDITEM_REG__CGC_MCKC
//    <name> MCKC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020C00) Main system clock control register </i>
//    <loc> ( (unsigned char)((CGC_MCKC >> 0) & 0xFF), ((CGC_MCKC = (CGC_MCKC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_MCKC_CKSELR </item>
//    <item> SFDITEM_FIELD__CGC_MCKC_PDIV </item>
//    <item> SFDITEM_FIELD__CGC_MCKC_CKSTR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CGC_PLLCR  --------------------------------
// SVD Line: 896

unsigned char CGC_PLLCR __AT (0x40020C02);



// -------------------------------  Field Item: CGC_PLLCR_PLLON  ----------------------------------
// SVD Line: 907

//  <item> SFDITEM_FIELD__CGC_PLLCR_PLLON
//    <name> PLLON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020C02) \nPLL operation control\n0 : PLL STOP = PLL is stopped\n1 : PLL ON = PLL is operating </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PLLCR ) </loc>
//      <o.0..0> PLLON
//        <0=> 0: PLL STOP = PLL is stopped
//        <1=> 1: PLL ON = PLL is operating
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PLLCR_PLLM  -----------------------------------
// SVD Line: 927

//  <item> SFDITEM_FIELD__CGC_PLLCR_PLLM
//    <name> PLLM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020C02) \nPLL frequency multiplication factor select\n0 : X12 = PLL multiplication factor is 12\n1 : X16 = PLL multiplication factor is 16 </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PLLCR ) </loc>
//      <o.1..1> PLLM
//        <0=> 0: X12 = PLL multiplication factor is 12
//        <1=> 1: X16 = PLL multiplication factor is 16
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PLLCR_PLLD  -----------------------------------
// SVD Line: 947

//  <item> SFDITEM_FIELD__CGC_PLLCR_PLLD
//    <name> PLLD </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40020C02) PLL frequency division ratio select </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_PLLCR >> 2) & 0x3), ((CGC_PLLCR = (CGC_PLLCR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CGC_PLLCR_PLLSRSEL  ---------------------------------
// SVD Line: 955

//  <item> SFDITEM_FIELD__CGC_PLLCR_PLLSRSEL
//    <name> PLLSRSEL </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020C02) \nPLL input clock source select\n0 : fIH = Select the high-speed on-chip oscillator clock (fIH) as PLL input source\n1 : fMX = Select external main system clock f(MX) as PLL input source </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PLLCR ) </loc>
//      <o.7..7> PLLSRSEL
//        <0=> 0: fIH = Select the high-speed on-chip oscillator clock (fIH) as PLL input source
//        <1=> 1: fMX = Select external main system clock f(MX) as PLL input source
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PLLCR  -----------------------------------
// SVD Line: 896

//  <rtree> SFDITEM_REG__CGC_PLLCR
//    <name> PLLCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020C02) System PLL clock control register </i>
//    <loc> ( (unsigned char)((CGC_PLLCR >> 0) & 0xFF), ((CGC_PLLCR = (CGC_PLLCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PLLCR_PLLON </item>
//    <item> SFDITEM_FIELD__CGC_PLLCR_PLLM </item>
//    <item> SFDITEM_FIELD__CGC_PLLCR_PLLD </item>
//    <item> SFDITEM_FIELD__CGC_PLLCR_PLLSRSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CGC_UPLLCR  -------------------------------
// SVD Line: 977

unsigned char CGC_UPLLCR __AT (0x40020C03);



// ------------------------------  Field Item: CGC_UPLLCR_UPLLON  ---------------------------------
// SVD Line: 988

//  <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLON
//    <name> UPLLON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020C03) \nUSB-dedicated PLL operation control\n0 : UPLL STOP = UPLL is stopped\n1 : UPLL ON = UPLL is operating </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_UPLLCR ) </loc>
//      <o.0..0> UPLLON
//        <0=> 0: UPLL STOP = UPLL is stopped
//        <1=> 1: UPLL ON = UPLL is operating
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_UPLLCR_UPLLM  ----------------------------------
// SVD Line: 1008

//  <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLM
//    <name> UPLLM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020C03) \nUSB-dedicated PLL frequency multiplication factor select\n0 : X12 = UPLL multiplication factor is 12\n1 : X16 = UPLL multiplication factor is 16 </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_UPLLCR ) </loc>
//      <o.1..1> UPLLM
//        <0=> 0: X12 = UPLL multiplication factor is 12
//        <1=> 1: X16 = UPLL multiplication factor is 16
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_UPLLCR_UPLLD  ----------------------------------
// SVD Line: 1028

//  <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLD
//    <name> UPLLD </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40020C03) USB-dedicated PLL frequency division ratio select </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_UPLLCR >> 2) & 0x3), ((CGC_UPLLCR = (CGC_UPLLCR & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CGC_UPLLCR_UPLLSRSEL  --------------------------------
// SVD Line: 1036

//  <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLSRSEL
//    <name> UPLLSRSEL </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020C03) \nUSB-dedicated PLL input clock source select\n0 : fIH = Select the high-speed on-chip oscillator clock (fIH) as UPLL input source\n1 : fMX = Select external main system clock f(MX) as UPLL input source </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_UPLLCR ) </loc>
//      <o.7..7> UPLLSRSEL
//        <0=> 0: fIH = Select the high-speed on-chip oscillator clock (fIH) as UPLL input source
//        <1=> 1: fMX = Select external main system clock f(MX) as UPLL input source
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: CGC_UPLLCR  -----------------------------------
// SVD Line: 977

//  <rtree> SFDITEM_REG__CGC_UPLLCR
//    <name> UPLLCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020C03) USB-dedicated system PLL clock control register </i>
//    <loc> ( (unsigned char)((CGC_UPLLCR >> 0) & 0xFF), ((CGC_UPLLCR = (CGC_UPLLCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLON </item>
//    <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLM </item>
//    <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLD </item>
//    <item> SFDITEM_FIELD__CGC_UPLLCR_UPLLSRSEL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CGC  --------------------------------------
// SVD Line: 76

//  <view> CGC
//    <name> CGC </name>
//    <item> SFDITEM_REG__CGC_CMC </item>
//    <item> SFDITEM_REG__CGC_CSC </item>
//    <item> SFDITEM_REG__CGC_OSTC </item>
//    <item> SFDITEM_REG__CGC_OSTS </item>
//    <item> SFDITEM_REG__CGC_CKC </item>
//    <item> SFDITEM_REG__CGC_PER0 </item>
//    <item> SFDITEM_REG__CGC_PER1 </item>
//    <item> SFDITEM_REG__CGC_PER2 </item>
//    <item> SFDITEM_REG__CGC_OSMC </item>
//    <item> SFDITEM_REG__CGC_SUBCKSEL </item>
//    <item> SFDITEM_REG__CGC_HOCODIV </item>
//    <item> SFDITEM_REG__CGC_HIOTRM </item>
//    <item> SFDITEM_REG__CGC_MCKC </item>
//    <item> SFDITEM_REG__CGC_PLLCR </item>
//    <item> SFDITEM_REG__CGC_UPLLCR </item>
//  </view>
//  


// -----------------------------  Register Item Address: RST_RESF  --------------------------------
// SVD Line: 1077

unsigned char RST_RESF __AT (0x40020440);



// -------------------------------  Field Item: RST_RESF_LVIRF  -----------------------------------
// SVD Line: 1086

//  <item> SFDITEM_FIELD__RST_RESF_LVIRF
//    <name> LVIRF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020440) \nInternal reset request by voltage detector\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.0..0> LVIRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_IAWRF  -----------------------------------
// SVD Line: 1105

//  <item> SFDITEM_FIELD__RST_RESF_IAWRF
//    <name> IAWRF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020440) \nInternal reset request by illegal-memory access\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.1..1> IAWRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_RPERF  -----------------------------------
// SVD Line: 1124

//  <item> SFDITEM_FIELD__RST_RESF_RPERF
//    <name> RPERF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40020440) \nInternal reset request by RAM parity\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.2..2> RPERF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_WDTRF  -----------------------------------
// SVD Line: 1143

//  <item> SFDITEM_FIELD__RST_RESF_WDTRF
//    <name> WDTRF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40020440) \nInternal reset request by watchdog timer(WDT)\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.4..4> WDTRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_SYSRF  -----------------------------------
// SVD Line: 1162

//  <item> SFDITEM_FIELD__RST_RESF_SYSRF
//    <name> SYSRF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020440) \nInternal reset request by system reset request(AIRCR.SYSRESETREQ)\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.7..7> SYSRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: RST_RESF  ------------------------------------
// SVD Line: 1077

//  <rtree> SFDITEM_REG__RST_RESF
//    <name> RESF </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40020440) Reset flag register </i>
//    <loc> ( (unsigned char)((RST_RESF >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__RST_RESF_LVIRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_IAWRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_RPERF </item>
//    <item> SFDITEM_FIELD__RST_RESF_WDTRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_SYSRF </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RST  --------------------------------------
// SVD Line: 1060

//  <view> RST
//    <name> RST </name>
//    <item> SFDITEM_REG__RST_RESF </item>
//  </view>
//  


// -----------------------------  Register Item Address: LVD_LVIM  --------------------------------
// SVD Line: 1209

unsigned char LVD_LVIM __AT (0x40020441);



// --------------------------------  Field Item: LVD_LVIM_LVIF  -----------------------------------
// SVD Line: 1220

//  <item> SFDITEM_FIELD__LVD_LVIM_LVIF
//    <name> LVIF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020441) \nVoltage detection flag\n0 : GE = Supply voltage (VDD) greater or equal to detection voltage (VLVD), or when LVD is off\n1 : LT = Supply voltage (VDD) less than detection voltage (VLVD) </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.0..0> LVIF
//        <0=> 0: GE = Supply voltage (VDD) greater or equal to detection voltage (VLVD), or when LVD is off
//        <1=> 1: LT = Supply voltage (VDD) less than detection voltage (VLVD)
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: LVD_LVIM_LVIOMSK  ----------------------------------
// SVD Line: 1240

//  <item> SFDITEM_FIELD__LVD_LVIM_LVIOMSK
//    <name> LVIOMSK </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020441) \nMask status flag of LVD output\n0 : Invalid = Mask of LVD output is invalid\n1 : Valid = Mask of LVD output is valid </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.1..1> LVIOMSK
//        <0=> 0: Invalid = Mask of LVD output is invalid
//        <1=> 1: Valid = Mask of LVD output is valid
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: LVD_LVIM_LVISEN  ----------------------------------
// SVD Line: 1260

//  <item> SFDITEM_FIELD__LVD_LVIM_LVISEN
//    <name> LVISEN </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020441) \nEnable rewritting LVIS register\n0 : Disable = Disabling of rewriting the LVIS register\n1 : Enable = Enabling of rewriting the LVIS register </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.7..7> LVISEN
//        <0=> 0: Disable = Disabling of rewriting the LVIS register
//        <1=> 1: Enable = Enabling of rewriting the LVIS register
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: LVD_LVIM  ------------------------------------
// SVD Line: 1209

//  <rtree> SFDITEM_REG__LVD_LVIM
//    <name> LVIM </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020441) Voltage detection register </i>
//    <loc> ( (unsigned char)((LVD_LVIM >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVIF </item>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVIOMSK </item>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVISEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LVD_LVIS  --------------------------------
// SVD Line: 1282

unsigned char LVD_LVIS __AT (0x40020442);



// -------------------------------  Field Item: LVD_LVIS_LVILV  -----------------------------------
// SVD Line: 1293

//  <item> SFDITEM_FIELD__LVD_LVIS_LVILV
//    <name> LVILV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020442) \nLVD detection level\n0 : High = High-voltage detection level (VLVDH)\n1 : Low = Low-voltage detection level (VLVDL or VLVD) </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIS ) </loc>
//      <o.0..0> LVILV
//        <0=> 0: High = High-voltage detection level (VLVDH)
//        <1=> 1: Low = Low-voltage detection level (VLVDL or VLVD)
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: LVD_LVIS_LVIMD  -----------------------------------
// SVD Line: 1313

//  <item> SFDITEM_FIELD__LVD_LVIS_LVIMD
//    <name> LVIMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020442) \nOperation mode of voltage detection\n0 : IRQ = interrupt mode\n1 : Reset = reset mode </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIS ) </loc>
//      <o.7..7> LVIMD
//        <0=> 0: IRQ = interrupt mode
//        <1=> 1: Reset = reset mode
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: LVD_LVIS  ------------------------------------
// SVD Line: 1282

//  <rtree> SFDITEM_REG__LVD_LVIS
//    <name> LVIS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020442) Voltage detection level register </i>
//    <loc> ( (unsigned char)((LVD_LVIS >> 0) & 0xFF), ((LVD_LVIS = (LVD_LVIS & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LVD_LVIS_LVILV </item>
//    <item> SFDITEM_FIELD__LVD_LVIS_LVIMD </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: LVD  --------------------------------------
// SVD Line: 1186

//  <view> LVD
//    <name> LVD </name>
//    <item> SFDITEM_REG__LVD_LVIM </item>
//    <item> SFDITEM_REG__LVD_LVIS </item>
//  </view>
//  


// -----------------------------  Register Item Address: PORT_PMA  --------------------------------
// SVD Line: 1354

unsigned short PORT_PMA __AT (0x40040010);



// ---------------------------------  Register Item: PORT_PMA  ------------------------------------
// SVD Line: 1354

//  <item> SFDITEM_REG__PORT_PMA
//    <name> PMA </name>
//    <i> [Bits 15..0] RW (@ 0x40040010) Port mode register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMA >> 0) & 0xFFFFFFFF), ((PORT_PMA = (PORT_PMA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PMB  --------------------------------
// SVD Line: 1363

unsigned short PORT_PMB __AT (0x40040012);



// ---------------------------------  Register Item: PORT_PMB  ------------------------------------
// SVD Line: 1363

//  <item> SFDITEM_REG__PORT_PMB
//    <name> PMB </name>
//    <i> [Bits 15..0] RW (@ 0x40040012) Port mode register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMB >> 0) & 0xFFFFFFFF), ((PORT_PMB = (PORT_PMB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PMC  --------------------------------
// SVD Line: 1372

unsigned short PORT_PMC __AT (0x40040014);



// ---------------------------------  Register Item: PORT_PMC  ------------------------------------
// SVD Line: 1372

//  <item> SFDITEM_REG__PORT_PMC
//    <name> PMC </name>
//    <i> [Bits 15..0] RW (@ 0x40040014) Port mode register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMC >> 0) & 0xFFFFFFFF), ((PORT_PMC = (PORT_PMC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PMD  --------------------------------
// SVD Line: 1381

unsigned short PORT_PMD __AT (0x40040016);



// ---------------------------------  Register Item: PORT_PMD  ------------------------------------
// SVD Line: 1381

//  <item> SFDITEM_REG__PORT_PMD
//    <name> PMD </name>
//    <i> [Bits 15..0] RW (@ 0x40040016) Port mode register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMD >> 0) & 0xFFFFFFFF), ((PORT_PMD = (PORT_PMD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PMH  --------------------------------
// SVD Line: 1390

unsigned short PORT_PMH __AT (0x4004001E);



// ---------------------------------  Register Item: PORT_PMH  ------------------------------------
// SVD Line: 1390

//  <item> SFDITEM_REG__PORT_PMH
//    <name> PMH </name>
//    <i> [Bits 15..0] RW (@ 0x4004001E) Port mode register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMH >> 0) & 0xFFFFFFFF), ((PORT_PMH = (PORT_PMH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PA  ---------------------------------
// SVD Line: 1399

unsigned short PORT_PA __AT (0x40040000);



// ---------------------------------  Register Item: PORT_PA  -------------------------------------
// SVD Line: 1399

//  <item> SFDITEM_REG__PORT_PA
//    <name> PA </name>
//    <i> [Bits 15..0] RW (@ 0x40040000) Port register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PA >> 0) & 0xFFFFFFFF), ((PORT_PA = (PORT_PA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PB  ---------------------------------
// SVD Line: 1408

unsigned short PORT_PB __AT (0x40040002);



// ---------------------------------  Register Item: PORT_PB  -------------------------------------
// SVD Line: 1408

//  <item> SFDITEM_REG__PORT_PB
//    <name> PB </name>
//    <i> [Bits 15..0] RW (@ 0x40040002) Port register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PB >> 0) & 0xFFFFFFFF), ((PORT_PB = (PORT_PB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PC  ---------------------------------
// SVD Line: 1417

unsigned short PORT_PC __AT (0x40040004);



// ---------------------------------  Register Item: PORT_PC  -------------------------------------
// SVD Line: 1417

//  <item> SFDITEM_REG__PORT_PC
//    <name> PC </name>
//    <i> [Bits 15..0] RW (@ 0x40040004) Port register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PC >> 0) & 0xFFFFFFFF), ((PORT_PC = (PORT_PC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD  ---------------------------------
// SVD Line: 1426

unsigned short PORT_PD __AT (0x40040006);



// ---------------------------------  Register Item: PORT_PD  -------------------------------------
// SVD Line: 1426

//  <item> SFDITEM_REG__PORT_PD
//    <name> PD </name>
//    <i> [Bits 15..0] RW (@ 0x40040006) Port register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PD >> 0) & 0xFFFFFFFF), ((PORT_PD = (PORT_PD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PH  ---------------------------------
// SVD Line: 1435

unsigned short PORT_PH __AT (0x4004000E);



// ---------------------------------  Register Item: PORT_PH  -------------------------------------
// SVD Line: 1435

//  <item> SFDITEM_REG__PORT_PH
//    <name> PH </name>
//    <i> [Bits 15..0] RW (@ 0x4004000E) Port register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PH >> 0) & 0xFFFFFFFF), ((PORT_PH = (PORT_PH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSETA  -------------------------------
// SVD Line: 1444

unsigned short PORT_PSETA __AT (0x40040060);



// --------------------------------  Register Item: PORT_PSETA  -----------------------------------
// SVD Line: 1444

//  <item> SFDITEM_REG__PORT_PSETA
//    <name> PSETA </name>
//    <i> [Bits 15..0] RW (@ 0x40040060) Port set register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PSETA >> 0) & 0xFFFFFFFF), ((PORT_PSETA = (PORT_PSETA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSETB  -------------------------------
// SVD Line: 1453

unsigned short PORT_PSETB __AT (0x40040062);



// --------------------------------  Register Item: PORT_PSETB  -----------------------------------
// SVD Line: 1453

//  <item> SFDITEM_REG__PORT_PSETB
//    <name> PSETB </name>
//    <i> [Bits 15..0] RW (@ 0x40040062) Port set register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PSETB >> 0) & 0xFFFFFFFF), ((PORT_PSETB = (PORT_PSETB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSETC  -------------------------------
// SVD Line: 1462

unsigned short PORT_PSETC __AT (0x40040064);



// --------------------------------  Register Item: PORT_PSETC  -----------------------------------
// SVD Line: 1462

//  <item> SFDITEM_REG__PORT_PSETC
//    <name> PSETC </name>
//    <i> [Bits 15..0] RW (@ 0x40040064) Port set register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PSETC >> 0) & 0xFFFFFFFF), ((PORT_PSETC = (PORT_PSETC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSETD  -------------------------------
// SVD Line: 1471

unsigned short PORT_PSETD __AT (0x40040066);



// --------------------------------  Register Item: PORT_PSETD  -----------------------------------
// SVD Line: 1471

//  <item> SFDITEM_REG__PORT_PSETD
//    <name> PSETD </name>
//    <i> [Bits 15..0] RW (@ 0x40040066) Port set register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PSETD >> 0) & 0xFFFFFFFF), ((PORT_PSETD = (PORT_PSETD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSETH  -------------------------------
// SVD Line: 1480

unsigned short PORT_PSETH __AT (0x4004006E);



// --------------------------------  Register Item: PORT_PSETH  -----------------------------------
// SVD Line: 1480

//  <item> SFDITEM_REG__PORT_PSETH
//    <name> PSETH </name>
//    <i> [Bits 15..0] RW (@ 0x4004006E) Port set register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PSETH >> 0) & 0xFFFFFFFF), ((PORT_PSETH = (PORT_PSETH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLRA  -------------------------------
// SVD Line: 1489

unsigned short PORT_PCLRA __AT (0x40040070);



// --------------------------------  Register Item: PORT_PCLRA  -----------------------------------
// SVD Line: 1489

//  <item> SFDITEM_REG__PORT_PCLRA
//    <name> PCLRA </name>
//    <i> [Bits 15..0] RW (@ 0x40040070) Port clear register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PCLRA >> 0) & 0xFFFFFFFF), ((PORT_PCLRA = (PORT_PCLRA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLRB  -------------------------------
// SVD Line: 1498

unsigned short PORT_PCLRB __AT (0x40040072);



// --------------------------------  Register Item: PORT_PCLRB  -----------------------------------
// SVD Line: 1498

//  <item> SFDITEM_REG__PORT_PCLRB
//    <name> PCLRB </name>
//    <i> [Bits 15..0] RW (@ 0x40040072) Port clear register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PCLRB >> 0) & 0xFFFFFFFF), ((PORT_PCLRB = (PORT_PCLRB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLRC  -------------------------------
// SVD Line: 1507

unsigned short PORT_PCLRC __AT (0x40040074);



// --------------------------------  Register Item: PORT_PCLRC  -----------------------------------
// SVD Line: 1507

//  <item> SFDITEM_REG__PORT_PCLRC
//    <name> PCLRC </name>
//    <i> [Bits 15..0] RW (@ 0x40040074) Port clear register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PCLRC >> 0) & 0xFFFFFFFF), ((PORT_PCLRC = (PORT_PCLRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLRD  -------------------------------
// SVD Line: 1516

unsigned short PORT_PCLRD __AT (0x40040076);



// --------------------------------  Register Item: PORT_PCLRD  -----------------------------------
// SVD Line: 1516

//  <item> SFDITEM_REG__PORT_PCLRD
//    <name> PCLRD </name>
//    <i> [Bits 15..0] RW (@ 0x40040076) Port clear register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PCLRD >> 0) & 0xFFFFFFFF), ((PORT_PCLRD = (PORT_PCLRD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLRH  -------------------------------
// SVD Line: 1525

unsigned short PORT_PCLRH __AT (0x4004007E);



// --------------------------------  Register Item: PORT_PCLRH  -----------------------------------
// SVD Line: 1525

//  <item> SFDITEM_REG__PORT_PCLRH
//    <name> PCLRH </name>
//    <i> [Bits 15..0] RW (@ 0x4004007E) Port clear register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PCLRH >> 0) & 0xFFFFFFFF), ((PORT_PCLRH = (PORT_PCLRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PUA  --------------------------------
// SVD Line: 1534

unsigned short PORT_PUA __AT (0x40040020);



// ---------------------------------  Register Item: PORT_PUA  ------------------------------------
// SVD Line: 1534

//  <item> SFDITEM_REG__PORT_PUA
//    <name> PUA </name>
//    <i> [Bits 15..0] RW (@ 0x40040020) Pull-up resistor option register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PUA >> 0) & 0xFFFFFFFF), ((PORT_PUA = (PORT_PUA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PUB  --------------------------------
// SVD Line: 1543

unsigned short PORT_PUB __AT (0x40040022);



// ---------------------------------  Register Item: PORT_PUB  ------------------------------------
// SVD Line: 1543

//  <item> SFDITEM_REG__PORT_PUB
//    <name> PUB </name>
//    <i> [Bits 15..0] RW (@ 0x40040022) Pull-up resistor option register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PUB >> 0) & 0xFFFFFFFF), ((PORT_PUB = (PORT_PUB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PUC  --------------------------------
// SVD Line: 1552

unsigned short PORT_PUC __AT (0x40040024);



// ---------------------------------  Register Item: PORT_PUC  ------------------------------------
// SVD Line: 1552

//  <item> SFDITEM_REG__PORT_PUC
//    <name> PUC </name>
//    <i> [Bits 15..0] RW (@ 0x40040024) Pull-up resistor option register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PUC >> 0) & 0xFFFFFFFF), ((PORT_PUC = (PORT_PUC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PUD  --------------------------------
// SVD Line: 1561

unsigned short PORT_PUD __AT (0x40040026);



// ---------------------------------  Register Item: PORT_PUD  ------------------------------------
// SVD Line: 1561

//  <item> SFDITEM_REG__PORT_PUD
//    <name> PUD </name>
//    <i> [Bits 15..0] RW (@ 0x40040026) Pull-up resistor option register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PUD >> 0) & 0xFFFFFFFF), ((PORT_PUD = (PORT_PUD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PUH  --------------------------------
// SVD Line: 1570

unsigned short PORT_PUH __AT (0x4004002E);



// ---------------------------------  Register Item: PORT_PUH  ------------------------------------
// SVD Line: 1570

//  <item> SFDITEM_REG__PORT_PUH
//    <name> PUH </name>
//    <i> [Bits 15..0] RW (@ 0x4004002E) Pull-up resistor option register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PUH >> 0) & 0xFFFFFFFF), ((PORT_PUH = (PORT_PUH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PDA  --------------------------------
// SVD Line: 1579

unsigned short PORT_PDA __AT (0x40040030);



// ---------------------------------  Register Item: PORT_PDA  ------------------------------------
// SVD Line: 1579

//  <item> SFDITEM_REG__PORT_PDA
//    <name> PDA </name>
//    <i> [Bits 15..0] RW (@ 0x40040030) Pull-down resistor option register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PDA >> 0) & 0xFFFFFFFF), ((PORT_PDA = (PORT_PDA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PDB  --------------------------------
// SVD Line: 1588

unsigned short PORT_PDB __AT (0x40040032);



// ---------------------------------  Register Item: PORT_PDB  ------------------------------------
// SVD Line: 1588

//  <item> SFDITEM_REG__PORT_PDB
//    <name> PDB </name>
//    <i> [Bits 15..0] RW (@ 0x40040032) Pull-down resistor option register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PDB >> 0) & 0xFFFFFFFF), ((PORT_PDB = (PORT_PDB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PDC  --------------------------------
// SVD Line: 1597

unsigned short PORT_PDC __AT (0x40040034);



// ---------------------------------  Register Item: PORT_PDC  ------------------------------------
// SVD Line: 1597

//  <item> SFDITEM_REG__PORT_PDC
//    <name> PDC </name>
//    <i> [Bits 15..0] RW (@ 0x40040034) Pull-down resistor option register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PDC >> 0) & 0xFFFFFFFF), ((PORT_PDC = (PORT_PDC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PDD  --------------------------------
// SVD Line: 1606

unsigned short PORT_PDD __AT (0x40040036);



// ---------------------------------  Register Item: PORT_PDD  ------------------------------------
// SVD Line: 1606

//  <item> SFDITEM_REG__PORT_PDD
//    <name> PDD </name>
//    <i> [Bits 15..0] RW (@ 0x40040036) Pull-down resistor option register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PDD >> 0) & 0xFFFFFFFF), ((PORT_PDD = (PORT_PDD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POMA  --------------------------------
// SVD Line: 1615

unsigned short PORT_POMA __AT (0x40040040);



// --------------------------------  Register Item: PORT_POMA  ------------------------------------
// SVD Line: 1615

//  <item> SFDITEM_REG__PORT_POMA
//    <name> POMA </name>
//    <i> [Bits 15..0] RW (@ 0x40040040) Port output mode register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_POMA >> 0) & 0xFFFFFFFF), ((PORT_POMA = (PORT_POMA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POMB  --------------------------------
// SVD Line: 1624

unsigned short PORT_POMB __AT (0x40040042);



// --------------------------------  Register Item: PORT_POMB  ------------------------------------
// SVD Line: 1624

//  <item> SFDITEM_REG__PORT_POMB
//    <name> POMB </name>
//    <i> [Bits 15..0] RW (@ 0x40040042) Port output mode register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_POMB >> 0) & 0xFFFFFFFF), ((PORT_POMB = (PORT_POMB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POMC  --------------------------------
// SVD Line: 1633

unsigned short PORT_POMC __AT (0x40040044);



// --------------------------------  Register Item: PORT_POMC  ------------------------------------
// SVD Line: 1633

//  <item> SFDITEM_REG__PORT_POMC
//    <name> POMC </name>
//    <i> [Bits 15..0] RW (@ 0x40040044) Port output mode register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_POMC >> 0) & 0xFFFFFFFF), ((PORT_POMC = (PORT_POMC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POMD  --------------------------------
// SVD Line: 1642

unsigned short PORT_POMD __AT (0x40040046);



// --------------------------------  Register Item: PORT_POMD  ------------------------------------
// SVD Line: 1642

//  <item> SFDITEM_REG__PORT_POMD
//    <name> POMD </name>
//    <i> [Bits 15..0] RW (@ 0x40040046) Port output mode register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_POMD >> 0) & 0xFFFFFFFF), ((PORT_POMD = (PORT_POMD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POMH  --------------------------------
// SVD Line: 1651

unsigned short PORT_POMH __AT (0x4004004E);



// --------------------------------  Register Item: PORT_POMH  ------------------------------------
// SVD Line: 1651

//  <item> SFDITEM_REG__PORT_POMH
//    <name> POMH </name>
//    <i> [Bits 15..0] RW (@ 0x4004004E) Port output mode register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_POMH >> 0) & 0xFFFFFFFF), ((PORT_POMH = (PORT_POMH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMCA  --------------------------------
// SVD Line: 1660

unsigned short PORT_PMCA __AT (0x40040050);



// --------------------------------  Register Item: PORT_PMCA  ------------------------------------
// SVD Line: 1660

//  <item> SFDITEM_REG__PORT_PMCA
//    <name> PMCA </name>
//    <i> [Bits 15..0] RW (@ 0x40040050) Port mode control register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMCA >> 0) & 0xFFFFFFFF), ((PORT_PMCA = (PORT_PMCA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMCB  --------------------------------
// SVD Line: 1669

unsigned short PORT_PMCB __AT (0x40040052);



// --------------------------------  Register Item: PORT_PMCB  ------------------------------------
// SVD Line: 1669

//  <item> SFDITEM_REG__PORT_PMCB
//    <name> PMCB </name>
//    <i> [Bits 15..0] RW (@ 0x40040052) Port mode control register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMCB >> 0) & 0xFFFFFFFF), ((PORT_PMCB = (PORT_PMCB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMCC  --------------------------------
// SVD Line: 1678

unsigned short PORT_PMCC __AT (0x40040054);



// --------------------------------  Register Item: PORT_PMCC  ------------------------------------
// SVD Line: 1678

//  <item> SFDITEM_REG__PORT_PMCC
//    <name> PMCC </name>
//    <i> [Bits 15..0] RW (@ 0x40040054) Port mode control register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMCC >> 0) & 0xFFFFFFFF), ((PORT_PMCC = (PORT_PMCC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMCD  --------------------------------
// SVD Line: 1687

unsigned short PORT_PMCD __AT (0x40040056);



// --------------------------------  Register Item: PORT_PMCD  ------------------------------------
// SVD Line: 1687

//  <item> SFDITEM_REG__PORT_PMCD
//    <name> PMCD </name>
//    <i> [Bits 15..0] RW (@ 0x40040056) Port mode control register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PMCD >> 0) & 0xFFFFFFFF), ((PORT_PMCD = (PORT_PMCD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PREADA  -------------------------------
// SVD Line: 1696

unsigned short PORT_PREADA __AT (0x40040080);



// -------------------------------  Register Item: PORT_PREADA  -----------------------------------
// SVD Line: 1696

//  <item> SFDITEM_REG__PORT_PREADA
//    <name> PREADA </name>
//    <i> [Bits 15..0] RW (@ 0x40040080) Port read register A </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PREADA >> 0) & 0xFFFFFFFF), ((PORT_PREADA = (PORT_PREADA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PREADB  -------------------------------
// SVD Line: 1705

unsigned short PORT_PREADB __AT (0x40040082);



// -------------------------------  Register Item: PORT_PREADB  -----------------------------------
// SVD Line: 1705

//  <item> SFDITEM_REG__PORT_PREADB
//    <name> PREADB </name>
//    <i> [Bits 15..0] RW (@ 0x40040082) Port read register B </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PREADB >> 0) & 0xFFFFFFFF), ((PORT_PREADB = (PORT_PREADB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PREADC  -------------------------------
// SVD Line: 1714

unsigned short PORT_PREADC __AT (0x40040084);



// -------------------------------  Register Item: PORT_PREADC  -----------------------------------
// SVD Line: 1714

//  <item> SFDITEM_REG__PORT_PREADC
//    <name> PREADC </name>
//    <i> [Bits 15..0] RW (@ 0x40040084) Port read register C </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PREADC >> 0) & 0xFFFFFFFF), ((PORT_PREADC = (PORT_PREADC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PREADD  -------------------------------
// SVD Line: 1723

unsigned short PORT_PREADD __AT (0x40040086);



// -------------------------------  Register Item: PORT_PREADD  -----------------------------------
// SVD Line: 1723

//  <item> SFDITEM_REG__PORT_PREADD
//    <name> PREADD </name>
//    <i> [Bits 15..0] RW (@ 0x40040086) Port read register D </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PREADD >> 0) & 0xFFFFFFFF), ((PORT_PREADD = (PORT_PREADD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PREADH  -------------------------------
// SVD Line: 1732

unsigned short PORT_PREADH __AT (0x4004008E);



// -------------------------------  Register Item: PORT_PREADH  -----------------------------------
// SVD Line: 1732

//  <item> SFDITEM_REG__PORT_PREADH
//    <name> PREADH </name>
//    <i> [Bits 15..0] RW (@ 0x4004008E) Port read register H </i>
//    <edit> 
//      <loc> ( (unsigned short)((PORT_PREADH >> 0) & 0xFFFFFFFF), ((PORT_PREADH = (PORT_PREADH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PB00CFG  ------------------------------
// SVD Line: 1741

unsigned char PORT_PB00CFG __AT (0x40040900);



// ------------------------------  Field Item: PORT_PB00CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PB00CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040900) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB00CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB00CFG  ----------------------------------
// SVD Line: 1741

//  <rtree> SFDITEM_REG__PORT_PB00CFG
//    <name> PB00CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040900) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB00CFG >> 0) & 0xFF), ((PORT_PB00CFG = (PORT_PB00CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB00CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PH04CFG  ------------------------------
// SVD Line: 1790

unsigned char PORT_PH04CFG __AT (0x40040901);



// ------------------------------  Field Item: PORT_PH04CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PH04CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040901) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PH04CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PH04CFG  ----------------------------------
// SVD Line: 1790

//  <rtree> SFDITEM_REG__PORT_PH04CFG
//    <name> PH04CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040901) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PH04CFG >> 0) & 0xFF), ((PORT_PH04CFG = (PORT_PH04CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PH04CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PH03CFG  ------------------------------
// SVD Line: 1795

unsigned char PORT_PH03CFG __AT (0x40040902);



// ------------------------------  Field Item: PORT_PH03CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PH03CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040902) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PH03CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PH03CFG  ----------------------------------
// SVD Line: 1795

//  <rtree> SFDITEM_REG__PORT_PH03CFG
//    <name> PH03CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040902) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PH03CFG >> 0) & 0xFF), ((PORT_PH03CFG = (PORT_PH03CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PH03CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PH02CFG  ------------------------------
// SVD Line: 1800

unsigned char PORT_PH02CFG __AT (0x40040903);



// ------------------------------  Field Item: PORT_PH02CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PH02CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040903) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PH02CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PH02CFG  ----------------------------------
// SVD Line: 1800

//  <rtree> SFDITEM_REG__PORT_PH02CFG
//    <name> PH02CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040903) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PH02CFG >> 0) & 0xFF), ((PORT_PH02CFG = (PORT_PH02CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PH02CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PH01CFG  ------------------------------
// SVD Line: 1805

unsigned char PORT_PH01CFG __AT (0x40040904);



// ------------------------------  Field Item: PORT_PH01CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PH01CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040904) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PH01CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PH01CFG  ----------------------------------
// SVD Line: 1805

//  <rtree> SFDITEM_REG__PORT_PH01CFG
//    <name> PH01CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040904) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PH01CFG >> 0) & 0xFF), ((PORT_PH01CFG = (PORT_PH01CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PH01CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC14CFG  ------------------------------
// SVD Line: 1810

unsigned char PORT_PC14CFG __AT (0x40040905);



// ------------------------------  Field Item: PORT_PC14CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PC14CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040905) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC14CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC14CFG  ----------------------------------
// SVD Line: 1810

//  <rtree> SFDITEM_REG__PORT_PC14CFG
//    <name> PC14CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040905) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC14CFG >> 0) & 0xFF), ((PORT_PC14CFG = (PORT_PC14CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC14CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC15CFG  ------------------------------
// SVD Line: 1815

unsigned char PORT_PC15CFG __AT (0x40040906);



// ------------------------------  Field Item: PORT_PC15CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PC15CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040906) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC15CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC15CFG  ----------------------------------
// SVD Line: 1815

//  <rtree> SFDITEM_REG__PORT_PC15CFG
//    <name> PC15CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040906) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC15CFG >> 0) & 0xFF), ((PORT_PC15CFG = (PORT_PC15CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC15CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC08CFG  ------------------------------
// SVD Line: 1820

unsigned char PORT_PC08CFG __AT (0x40040907);



// ------------------------------  Field Item: PORT_PC08CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PC08CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040907) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC08CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC08CFG  ----------------------------------
// SVD Line: 1820

//  <rtree> SFDITEM_REG__PORT_PC08CFG
//    <name> PC08CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040907) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC08CFG >> 0) & 0xFF), ((PORT_PC08CFG = (PORT_PC08CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC08CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC09CFG  ------------------------------
// SVD Line: 1825

unsigned char PORT_PC09CFG __AT (0x40040908);



// ------------------------------  Field Item: PORT_PC09CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PC09CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040908) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC09CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC09CFG  ----------------------------------
// SVD Line: 1825

//  <rtree> SFDITEM_REG__PORT_PC09CFG
//    <name> PC09CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040908) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC09CFG >> 0) & 0xFF), ((PORT_PC09CFG = (PORT_PC09CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC09CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC10CFG  ------------------------------
// SVD Line: 1830

unsigned char PORT_PC10CFG __AT (0x40040909);



// ------------------------------  Field Item: PORT_PC10CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PC10CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040909) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC10CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC10CFG  ----------------------------------
// SVD Line: 1830

//  <rtree> SFDITEM_REG__PORT_PC10CFG
//    <name> PC10CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040909) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC10CFG >> 0) & 0xFF), ((PORT_PC10CFG = (PORT_PC10CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC10CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC11CFG  ------------------------------
// SVD Line: 1835

unsigned char PORT_PC11CFG __AT (0x4004090A);



// ------------------------------  Field Item: PORT_PC11CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PC11CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004090A) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC11CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC11CFG  ----------------------------------
// SVD Line: 1835

//  <rtree> SFDITEM_REG__PORT_PC11CFG
//    <name> PC11CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004090A) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC11CFG >> 0) & 0xFF), ((PORT_PC11CFG = (PORT_PC11CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC11CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA00CFG  ------------------------------
// SVD Line: 1840

unsigned char PORT_PA00CFG __AT (0x4004090B);



// ------------------------------  Field Item: PORT_PA00CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PA00CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004090B) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA00CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA00CFG  ----------------------------------
// SVD Line: 1840

//  <rtree> SFDITEM_REG__PORT_PA00CFG
//    <name> PA00CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004090B) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA00CFG >> 0) & 0xFF), ((PORT_PA00CFG = (PORT_PA00CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA00CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA01CFG  ------------------------------
// SVD Line: 1845

unsigned char PORT_PA01CFG __AT (0x4004090C);



// ------------------------------  Field Item: PORT_PA01CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PA01CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004090C) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA01CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA01CFG  ----------------------------------
// SVD Line: 1845

//  <rtree> SFDITEM_REG__PORT_PA01CFG
//    <name> PA01CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004090C) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA01CFG >> 0) & 0xFF), ((PORT_PA01CFG = (PORT_PA01CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA01CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA02CFG  ------------------------------
// SVD Line: 1850

unsigned char PORT_PA02CFG __AT (0x4004090D);



// ------------------------------  Field Item: PORT_PA02CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PA02CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004090D) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA02CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA02CFG  ----------------------------------
// SVD Line: 1850

//  <rtree> SFDITEM_REG__PORT_PA02CFG
//    <name> PA02CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004090D) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA02CFG >> 0) & 0xFF), ((PORT_PA02CFG = (PORT_PA02CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA02CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA03CFG  ------------------------------
// SVD Line: 1855

unsigned char PORT_PA03CFG __AT (0x4004090E);



// ------------------------------  Field Item: PORT_PA03CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PA03CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004090E) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA03CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA03CFG  ----------------------------------
// SVD Line: 1855

//  <rtree> SFDITEM_REG__PORT_PA03CFG
//    <name> PA03CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004090E) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA03CFG >> 0) & 0xFF), ((PORT_PA03CFG = (PORT_PA03CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA03CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD07CFG  ------------------------------
// SVD Line: 1860

unsigned char PORT_PD07CFG __AT (0x4004090F);



// ------------------------------  Field Item: PORT_PD07CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PD07CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004090F) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD07CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD07CFG  ----------------------------------
// SVD Line: 1860

//  <rtree> SFDITEM_REG__PORT_PD07CFG
//    <name> PD07CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004090F) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD07CFG >> 0) & 0xFF), ((PORT_PD07CFG = (PORT_PD07CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD07CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD08CFG  ------------------------------
// SVD Line: 1865

unsigned char PORT_PD08CFG __AT (0x40040910);



// ------------------------------  Field Item: PORT_PD08CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PD08CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040910) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD08CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD08CFG  ----------------------------------
// SVD Line: 1865

//  <rtree> SFDITEM_REG__PORT_PD08CFG
//    <name> PD08CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040910) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD08CFG >> 0) & 0xFF), ((PORT_PD08CFG = (PORT_PD08CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD08CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD09CFG  ------------------------------
// SVD Line: 1870

unsigned char PORT_PD09CFG __AT (0x40040911);



// ------------------------------  Field Item: PORT_PD09CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PD09CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040911) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD09CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD09CFG  ----------------------------------
// SVD Line: 1870

//  <rtree> SFDITEM_REG__PORT_PD09CFG
//    <name> PD09CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040911) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD09CFG >> 0) & 0xFF), ((PORT_PD09CFG = (PORT_PD09CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD09CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD10CFG  ------------------------------
// SVD Line: 1875

unsigned char PORT_PD10CFG __AT (0x40040912);



// ------------------------------  Field Item: PORT_PD10CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PD10CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040912) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD10CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD10CFG  ----------------------------------
// SVD Line: 1875

//  <rtree> SFDITEM_REG__PORT_PD10CFG
//    <name> PD10CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040912) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD10CFG >> 0) & 0xFF), ((PORT_PD10CFG = (PORT_PD10CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD10CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD11CFG  ------------------------------
// SVD Line: 1880

unsigned char PORT_PD11CFG __AT (0x40040913);



// ------------------------------  Field Item: PORT_PD11CFG_CFG  ----------------------------------
// SVD Line: 1750

//  <item> SFDITEM_FIELD__PORT_PD11CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040913) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO00 = Port used as TO00\n2 : TO01 = Port used as TO01\n3 : TO02 = Port used as TO02\n4 : TO03 = Port used as TO03\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD11CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO00 = Port used as TO00
//        <2=> 2: TO01 = Port used as TO01
//        <3=> 3: TO02 = Port used as TO02
//        <4=> 4: TO03 = Port used as TO03
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD11CFG  ----------------------------------
// SVD Line: 1880

//  <rtree> SFDITEM_REG__PORT_PD11CFG
//    <name> PD11CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040913) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD11CFG >> 0) & 0xFF), ((PORT_PD11CFG = (PORT_PD11CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD11CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC03CFG  ------------------------------
// SVD Line: 1885

unsigned char PORT_PC03CFG __AT (0x40040920);



// ------------------------------  Field Item: PORT_PC03CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC03CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040920) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC03CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC03CFG  ----------------------------------
// SVD Line: 1885

//  <rtree> SFDITEM_REG__PORT_PC03CFG
//    <name> PC03CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040920) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC03CFG >> 0) & 0xFF), ((PORT_PC03CFG = (PORT_PC03CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC03CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC04CFG  ------------------------------
// SVD Line: 1949

unsigned char PORT_PC04CFG __AT (0x40040921);



// ------------------------------  Field Item: PORT_PC04CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC04CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040921) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC04CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC04CFG  ----------------------------------
// SVD Line: 1949

//  <rtree> SFDITEM_REG__PORT_PC04CFG
//    <name> PC04CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040921) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC04CFG >> 0) & 0xFF), ((PORT_PC04CFG = (PORT_PC04CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC04CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC05CFG  ------------------------------
// SVD Line: 1954

unsigned char PORT_PC05CFG __AT (0x40040922);



// ------------------------------  Field Item: PORT_PC05CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC05CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040922) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC05CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC05CFG  ----------------------------------
// SVD Line: 1954

//  <rtree> SFDITEM_REG__PORT_PC05CFG
//    <name> PC05CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040922) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC05CFG >> 0) & 0xFF), ((PORT_PC05CFG = (PORT_PC05CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC05CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC06CFG  ------------------------------
// SVD Line: 1959

unsigned char PORT_PC06CFG __AT (0x40040923);



// ------------------------------  Field Item: PORT_PC06CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC06CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040923) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC06CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC06CFG  ----------------------------------
// SVD Line: 1959

//  <rtree> SFDITEM_REG__PORT_PC06CFG
//    <name> PC06CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040923) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC06CFG >> 0) & 0xFF), ((PORT_PC06CFG = (PORT_PC06CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC06CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC07CFG  ------------------------------
// SVD Line: 1964

unsigned char PORT_PC07CFG __AT (0x40040924);



// ------------------------------  Field Item: PORT_PC07CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC07CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040924) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC07CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC07CFG  ----------------------------------
// SVD Line: 1964

//  <rtree> SFDITEM_REG__PORT_PC07CFG
//    <name> PC07CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040924) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC07CFG >> 0) & 0xFF), ((PORT_PC07CFG = (PORT_PC07CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC07CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC12CFG  ------------------------------
// SVD Line: 1969

unsigned char PORT_PC12CFG __AT (0x40040925);



// ------------------------------  Field Item: PORT_PC12CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC12CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040925) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC12CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC12CFG  ----------------------------------
// SVD Line: 1969

//  <rtree> SFDITEM_REG__PORT_PC12CFG
//    <name> PC12CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040925) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC12CFG >> 0) & 0xFF), ((PORT_PC12CFG = (PORT_PC12CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC12CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC13CFG  ------------------------------
// SVD Line: 1974

unsigned char PORT_PC13CFG __AT (0x40040926);



// ------------------------------  Field Item: PORT_PC13CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PC13CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040926) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC13CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC13CFG  ----------------------------------
// SVD Line: 1974

//  <rtree> SFDITEM_REG__PORT_PC13CFG
//    <name> PC13CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040926) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC13CFG >> 0) & 0xFF), ((PORT_PC13CFG = (PORT_PC13CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC13CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA04CFG  ------------------------------
// SVD Line: 1979

unsigned char PORT_PA04CFG __AT (0x40040927);



// ------------------------------  Field Item: PORT_PA04CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA04CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040927) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA04CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA04CFG  ----------------------------------
// SVD Line: 1979

//  <rtree> SFDITEM_REG__PORT_PA04CFG
//    <name> PA04CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040927) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA04CFG >> 0) & 0xFF), ((PORT_PA04CFG = (PORT_PA04CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA04CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA05CFG  ------------------------------
// SVD Line: 1984

unsigned char PORT_PA05CFG __AT (0x40040928);



// ------------------------------  Field Item: PORT_PA05CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA05CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040928) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA05CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA05CFG  ----------------------------------
// SVD Line: 1984

//  <rtree> SFDITEM_REG__PORT_PA05CFG
//    <name> PA05CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040928) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA05CFG >> 0) & 0xFF), ((PORT_PA05CFG = (PORT_PA05CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA05CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA06CFG  ------------------------------
// SVD Line: 1989

unsigned char PORT_PA06CFG __AT (0x40040929);



// ------------------------------  Field Item: PORT_PA06CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA06CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040929) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA06CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA06CFG  ----------------------------------
// SVD Line: 1989

//  <rtree> SFDITEM_REG__PORT_PA06CFG
//    <name> PA06CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040929) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA06CFG >> 0) & 0xFF), ((PORT_PA06CFG = (PORT_PA06CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA06CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA07CFG  ------------------------------
// SVD Line: 1994

unsigned char PORT_PA07CFG __AT (0x4004092A);



// ------------------------------  Field Item: PORT_PA07CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA07CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004092A) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA07CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA07CFG  ----------------------------------
// SVD Line: 1994

//  <rtree> SFDITEM_REG__PORT_PA07CFG
//    <name> PA07CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004092A) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA07CFG >> 0) & 0xFF), ((PORT_PA07CFG = (PORT_PA07CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA07CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA08CFG  ------------------------------
// SVD Line: 1999

unsigned char PORT_PA08CFG __AT (0x4004092B);



// ------------------------------  Field Item: PORT_PA08CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA08CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004092B) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA08CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA08CFG  ----------------------------------
// SVD Line: 1999

//  <rtree> SFDITEM_REG__PORT_PA08CFG
//    <name> PA08CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004092B) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA08CFG >> 0) & 0xFF), ((PORT_PA08CFG = (PORT_PA08CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA08CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA09CFG  ------------------------------
// SVD Line: 2004

unsigned char PORT_PA09CFG __AT (0x4004092C);



// ------------------------------  Field Item: PORT_PA09CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA09CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004092C) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA09CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA09CFG  ----------------------------------
// SVD Line: 2004

//  <rtree> SFDITEM_REG__PORT_PA09CFG
//    <name> PA09CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004092C) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA09CFG >> 0) & 0xFF), ((PORT_PA09CFG = (PORT_PA09CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA09CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA10CFG  ------------------------------
// SVD Line: 2009

unsigned char PORT_PA10CFG __AT (0x4004092D);



// ------------------------------  Field Item: PORT_PA10CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PA10CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004092D) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA10CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA10CFG  ----------------------------------
// SVD Line: 2009

//  <rtree> SFDITEM_REG__PORT_PA10CFG
//    <name> PA10CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004092D) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA10CFG >> 0) & 0xFF), ((PORT_PA10CFG = (PORT_PA10CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA10CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD00CFG  ------------------------------
// SVD Line: 2014

unsigned char PORT_PD00CFG __AT (0x4004092E);



// ------------------------------  Field Item: PORT_PD00CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PD00CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004092E) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD00CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD00CFG  ----------------------------------
// SVD Line: 2014

//  <rtree> SFDITEM_REG__PORT_PD00CFG
//    <name> PD00CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004092E) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD00CFG >> 0) & 0xFF), ((PORT_PD00CFG = (PORT_PD00CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD00CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD01CFG  ------------------------------
// SVD Line: 2019

unsigned char PORT_PD01CFG __AT (0x4004092F);



// ------------------------------  Field Item: PORT_PD01CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PD01CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004092F) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD01CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD01CFG  ----------------------------------
// SVD Line: 2019

//  <rtree> SFDITEM_REG__PORT_PD01CFG
//    <name> PD01CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004092F) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD01CFG >> 0) & 0xFF), ((PORT_PD01CFG = (PORT_PD01CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD01CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD12CFG  ------------------------------
// SVD Line: 2024

unsigned char PORT_PD12CFG __AT (0x40040930);



// ------------------------------  Field Item: PORT_PD12CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PD12CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040930) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD12CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD12CFG  ----------------------------------
// SVD Line: 2024

//  <rtree> SFDITEM_REG__PORT_PD12CFG
//    <name> PD12CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040930) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD12CFG >> 0) & 0xFF), ((PORT_PD12CFG = (PORT_PD12CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD12CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD13CFG  ------------------------------
// SVD Line: 2029

unsigned char PORT_PD13CFG __AT (0x40040931);



// ------------------------------  Field Item: PORT_PD13CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PD13CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040931) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD13CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD13CFG  ----------------------------------
// SVD Line: 2029

//  <rtree> SFDITEM_REG__PORT_PD13CFG
//    <name> PD13CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040931) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD13CFG >> 0) & 0xFF), ((PORT_PD13CFG = (PORT_PD13CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD13CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD14CFG  ------------------------------
// SVD Line: 2034

unsigned char PORT_PD14CFG __AT (0x40040932);



// ------------------------------  Field Item: PORT_PD14CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PD14CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040932) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD14CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD14CFG  ----------------------------------
// SVD Line: 2034

//  <rtree> SFDITEM_REG__PORT_PD14CFG
//    <name> PD14CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040932) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD14CFG >> 0) & 0xFF), ((PORT_PD14CFG = (PORT_PD14CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD14CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD15CFG  ------------------------------
// SVD Line: 2039

unsigned char PORT_PD15CFG __AT (0x40040933);



// ------------------------------  Field Item: PORT_PD15CFG_CFG  ----------------------------------
// SVD Line: 1894

//  <item> SFDITEM_FIELD__PORT_PD15CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040933) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO10/TxD1 = Port used as SDO10/TxD1\n6 : SPIHS0_SCKO = Port used as SPIHS0_SCKO\n7 : SPIHS0_MO = Port used as SPIHS0_MO\n8 : SPIHS0_SO = Port used as SPIHS0_SO\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD15CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO10/TxD1 = Port used as SDO10/TxD1
//        <6=> 6: SPIHS0_SCKO = Port used as SPIHS0_SCKO
//        <7=> 7: SPIHS0_MO = Port used as SPIHS0_MO
//        <8=> 8: SPIHS0_SO = Port used as SPIHS0_SO
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD15CFG  ----------------------------------
// SVD Line: 2039

//  <rtree> SFDITEM_REG__PORT_PD15CFG
//    <name> PD15CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040933) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD15CFG >> 0) & 0xFF), ((PORT_PD15CFG = (PORT_PD15CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD15CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB01CFG  ------------------------------
// SVD Line: 2044

unsigned char PORT_PB01CFG __AT (0x40040940);



// ------------------------------  Field Item: PORT_PB01CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB01CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040940) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB01CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB01CFG  ----------------------------------
// SVD Line: 2044

//  <rtree> SFDITEM_REG__PORT_PB01CFG
//    <name> PB01CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040940) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB01CFG >> 0) & 0xFF), ((PORT_PB01CFG = (PORT_PB01CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB01CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB02CFG  ------------------------------
// SVD Line: 2098

unsigned char PORT_PB02CFG __AT (0x40040941);



// ------------------------------  Field Item: PORT_PB02CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB02CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040941) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB02CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB02CFG  ----------------------------------
// SVD Line: 2098

//  <rtree> SFDITEM_REG__PORT_PB02CFG
//    <name> PB02CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040941) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB02CFG >> 0) & 0xFF), ((PORT_PB02CFG = (PORT_PB02CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB02CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB03CFG  ------------------------------
// SVD Line: 2103

unsigned char PORT_PB03CFG __AT (0x40040942);



// ------------------------------  Field Item: PORT_PB03CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB03CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040942) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB03CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB03CFG  ----------------------------------
// SVD Line: 2103

//  <rtree> SFDITEM_REG__PORT_PB03CFG
//    <name> PB03CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040942) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB03CFG >> 0) & 0xFF), ((PORT_PB03CFG = (PORT_PB03CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB03CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB04CFG  ------------------------------
// SVD Line: 2108

unsigned char PORT_PB04CFG __AT (0x40040943);



// ------------------------------  Field Item: PORT_PB04CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB04CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040943) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB04CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB04CFG  ----------------------------------
// SVD Line: 2108

//  <rtree> SFDITEM_REG__PORT_PB04CFG
//    <name> PB04CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040943) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB04CFG >> 0) & 0xFF), ((PORT_PB04CFG = (PORT_PB04CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB04CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB05CFG  ------------------------------
// SVD Line: 2113

unsigned char PORT_PB05CFG __AT (0x40040944);



// ------------------------------  Field Item: PORT_PB05CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB05CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040944) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB05CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB05CFG  ----------------------------------
// SVD Line: 2113

//  <rtree> SFDITEM_REG__PORT_PB05CFG
//    <name> PB05CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040944) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB05CFG >> 0) & 0xFF), ((PORT_PB05CFG = (PORT_PB05CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB05CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB06CFG  ------------------------------
// SVD Line: 2118

unsigned char PORT_PB06CFG __AT (0x40040945);



// ------------------------------  Field Item: PORT_PB06CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB06CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040945) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB06CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB06CFG  ----------------------------------
// SVD Line: 2118

//  <rtree> SFDITEM_REG__PORT_PB06CFG
//    <name> PB06CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040945) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB06CFG >> 0) & 0xFF), ((PORT_PB06CFG = (PORT_PB06CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB06CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB07CFG  ------------------------------
// SVD Line: 2123

unsigned char PORT_PB07CFG __AT (0x40040946);



// ------------------------------  Field Item: PORT_PB07CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB07CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040946) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB07CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB07CFG  ----------------------------------
// SVD Line: 2123

//  <rtree> SFDITEM_REG__PORT_PB07CFG
//    <name> PB07CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040946) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB07CFG >> 0) & 0xFF), ((PORT_PB07CFG = (PORT_PB07CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB07CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PB08CFG  ------------------------------
// SVD Line: 2128

unsigned char PORT_PB08CFG __AT (0x40040947);



// ------------------------------  Field Item: PORT_PB08CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PB08CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040947) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PB08CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PB08CFG  ----------------------------------
// SVD Line: 2128

//  <rtree> SFDITEM_REG__PORT_PB08CFG
//    <name> PB08CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040947) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PB08CFG >> 0) & 0xFF), ((PORT_PB08CFG = (PORT_PB08CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PB08CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC00CFG  ------------------------------
// SVD Line: 2133

unsigned char PORT_PC00CFG __AT (0x40040948);



// ------------------------------  Field Item: PORT_PC00CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PC00CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040948) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC00CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC00CFG  ----------------------------------
// SVD Line: 2133

//  <rtree> SFDITEM_REG__PORT_PC00CFG
//    <name> PC00CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040948) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC00CFG >> 0) & 0xFF), ((PORT_PC00CFG = (PORT_PC00CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC00CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC01CFG  ------------------------------
// SVD Line: 2138

unsigned char PORT_PC01CFG __AT (0x40040949);



// ------------------------------  Field Item: PORT_PC01CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PC01CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040949) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC01CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC01CFG  ----------------------------------
// SVD Line: 2138

//  <rtree> SFDITEM_REG__PORT_PC01CFG
//    <name> PC01CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040949) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC01CFG >> 0) & 0xFF), ((PORT_PC01CFG = (PORT_PC01CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC01CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PC02CFG  ------------------------------
// SVD Line: 2143

unsigned char PORT_PC02CFG __AT (0x4004094A);



// ------------------------------  Field Item: PORT_PC02CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PC02CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004094A) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PC02CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PC02CFG  ----------------------------------
// SVD Line: 2143

//  <rtree> SFDITEM_REG__PORT_PC02CFG
//    <name> PC02CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004094A) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PC02CFG >> 0) & 0xFF), ((PORT_PC02CFG = (PORT_PC02CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PC02CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA11CFG  ------------------------------
// SVD Line: 2148

unsigned char PORT_PA11CFG __AT (0x4004094B);



// ------------------------------  Field Item: PORT_PA11CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PA11CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004094B) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA11CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA11CFG  ----------------------------------
// SVD Line: 2148

//  <rtree> SFDITEM_REG__PORT_PA11CFG
//    <name> PA11CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004094B) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA11CFG >> 0) & 0xFF), ((PORT_PA11CFG = (PORT_PA11CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA11CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA12CFG  ------------------------------
// SVD Line: 2153

unsigned char PORT_PA12CFG __AT (0x4004094C);



// ------------------------------  Field Item: PORT_PA12CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PA12CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004094C) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA12CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA12CFG  ----------------------------------
// SVD Line: 2153

//  <rtree> SFDITEM_REG__PORT_PA12CFG
//    <name> PA12CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004094C) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA12CFG >> 0) & 0xFF), ((PORT_PA12CFG = (PORT_PA12CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA12CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA13CFG  ------------------------------
// SVD Line: 2158

unsigned char PORT_PA13CFG __AT (0x4004094D);



// ------------------------------  Field Item: PORT_PA13CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PA13CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004094D) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA13CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA13CFG  ----------------------------------
// SVD Line: 2158

//  <rtree> SFDITEM_REG__PORT_PA13CFG
//    <name> PA13CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004094D) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA13CFG >> 0) & 0xFF), ((PORT_PA13CFG = (PORT_PA13CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA13CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PA14CFG  ------------------------------
// SVD Line: 2163

unsigned char PORT_PA14CFG __AT (0x4004094E);



// ------------------------------  Field Item: PORT_PA14CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PA14CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004094E) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PA14CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PA14CFG  ----------------------------------
// SVD Line: 2163

//  <rtree> SFDITEM_REG__PORT_PA14CFG
//    <name> PA14CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004094E) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PA14CFG >> 0) & 0xFF), ((PORT_PA14CFG = (PORT_PA14CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PA14CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD02CFG  ------------------------------
// SVD Line: 2168

unsigned char PORT_PD02CFG __AT (0x4004094F);



// ------------------------------  Field Item: PORT_PD02CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PD02CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004094F) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD02CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD02CFG  ----------------------------------
// SVD Line: 2168

//  <rtree> SFDITEM_REG__PORT_PD02CFG
//    <name> PD02CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004094F) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD02CFG >> 0) & 0xFF), ((PORT_PD02CFG = (PORT_PD02CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD02CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD03CFG  ------------------------------
// SVD Line: 2173

unsigned char PORT_PD03CFG __AT (0x40040950);



// ------------------------------  Field Item: PORT_PD03CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PD03CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040950) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD03CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD03CFG  ----------------------------------
// SVD Line: 2173

//  <rtree> SFDITEM_REG__PORT_PD03CFG
//    <name> PD03CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040950) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD03CFG >> 0) & 0xFF), ((PORT_PD03CFG = (PORT_PD03CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD03CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD04CFG  ------------------------------
// SVD Line: 2178

unsigned char PORT_PD04CFG __AT (0x40040951);



// ------------------------------  Field Item: PORT_PD04CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PD04CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040951) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD04CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD04CFG  ----------------------------------
// SVD Line: 2178

//  <rtree> SFDITEM_REG__PORT_PD04CFG
//    <name> PD04CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040951) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD04CFG >> 0) & 0xFF), ((PORT_PD04CFG = (PORT_PD04CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD04CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD05CFG  ------------------------------
// SVD Line: 2183

unsigned char PORT_PD05CFG __AT (0x40040952);



// ------------------------------  Field Item: PORT_PD05CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PD05CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040952) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD05CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD05CFG  ----------------------------------
// SVD Line: 2183

//  <rtree> SFDITEM_REG__PORT_PD05CFG
//    <name> PD05CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040952) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD05CFG >> 0) & 0xFF), ((PORT_PD05CFG = (PORT_PD05CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD05CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_PD06CFG  ------------------------------
// SVD Line: 2188

unsigned char PORT_PD06CFG __AT (0x40040953);



// ------------------------------  Field Item: PORT_PD06CFG_CFG  ----------------------------------
// SVD Line: 2053

//  <item> SFDITEM_FIELD__PORT_PD06CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040953) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO14 = Port used as TO14\n2 : TO15 = Port used as TO15\n3 : TO16 = Port used as TO16\n4 : TO17 = Port used as TO17\n5 : SDO10/TxD1 = Port used as SDO20/TxD2\n6 : CLKBUZ1 = Port used as CLKBUZ1\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_PD06CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO14 = Port used as TO14
//        <2=> 2: TO15 = Port used as TO15
//        <3=> 3: TO16 = Port used as TO16
//        <4=> 4: TO17 = Port used as TO17
//        <5=> 5: SDO10/TxD1 = Port used as SDO20/TxD2
//        <6=> 6: CLKBUZ1 = Port used as CLKBUZ1
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_PD06CFG  ----------------------------------
// SVD Line: 2188

//  <rtree> SFDITEM_REG__PORT_PD06CFG
//    <name> PD06CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040953) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_PD06CFG >> 0) & 0xFF), ((PORT_PD06CFG = (PORT_PD06CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_PD06CFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI00PCFG  ------------------------------
// SVD Line: 2193

unsigned char PORT_TI00PCFG __AT (0x40040980);



// ------------------------------  Field Item: PORT_TI00PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_TI00PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040980) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI00PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI00PCFG  ---------------------------------
// SVD Line: 2193

//  <rtree> SFDITEM_REG__PORT_TI00PCFG
//    <name> TI00PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040980) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI00PCFG >> 0) & 0xFF), ((PORT_TI00PCFG = (PORT_TI00PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI00PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI01PCFG  ------------------------------
// SVD Line: 2311

unsigned char PORT_TI01PCFG __AT (0x40040981);



// ------------------------------  Field Item: PORT_TI01PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_TI01PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040981) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI01PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI01PCFG  ---------------------------------
// SVD Line: 2311

//  <rtree> SFDITEM_REG__PORT_TI01PCFG
//    <name> TI01PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040981) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI01PCFG >> 0) & 0xFF), ((PORT_TI01PCFG = (PORT_TI01PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI01PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI02PCFG  ------------------------------
// SVD Line: 2316

unsigned char PORT_TI02PCFG __AT (0x40040982);



// ------------------------------  Field Item: PORT_TI02PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_TI02PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040982) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI02PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI02PCFG  ---------------------------------
// SVD Line: 2316

//  <rtree> SFDITEM_REG__PORT_TI02PCFG
//    <name> TI02PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040982) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI02PCFG >> 0) & 0xFF), ((PORT_TI02PCFG = (PORT_TI02PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI02PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI03PCFG  ------------------------------
// SVD Line: 2321

unsigned char PORT_TI03PCFG __AT (0x40040983);



// ------------------------------  Field Item: PORT_TI03PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_TI03PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040983) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI03PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI03PCFG  ---------------------------------
// SVD Line: 2321

//  <rtree> SFDITEM_REG__PORT_TI03PCFG
//    <name> TI03PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040983) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI03PCFG >> 0) & 0xFF), ((PORT_TI03PCFG = (PORT_TI03PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI03PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_RXD0PCFG  ------------------------------
// SVD Line: 2326

unsigned char PORT_RXD0PCFG __AT (0x40040984);



// ------------------------------  Field Item: PORT_RXD0PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_RXD0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040984) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_RXD0PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_RXD0PCFG  ---------------------------------
// SVD Line: 2326

//  <rtree> SFDITEM_REG__PORT_RXD0PCFG
//    <name> RXD0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040984) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_RXD0PCFG >> 0) & 0xFF), ((PORT_RXD0PCFG = (PORT_RXD0PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_RXD0PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDI00PCFG  -----------------------------
// SVD Line: 2332

unsigned char PORT_SDI00PCFG __AT (0x40040984);



// ------------------------------  Register Item: PORT_SDI00PCFG  ---------------------------------
// SVD Line: 2332

//  <item> SFDITEM_REG__PORT_SDI00PCFG
//    <name> SDI00PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x40040984) SDI00PCFG </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SDI00PCFG >> 0) & 0xFFFFFFFF), ((PORT_SDI00PCFG = (PORT_SDI00PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: PORT_SCLA0PCFG  -----------------------------
// SVD Line: 2339

unsigned char PORT_SCLA0PCFG __AT (0x40040985);



// -----------------------------  Field Item: PORT_SCLA0PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_SCLA0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040985) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SCLA0PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SCLA0PCFG  ---------------------------------
// SVD Line: 2339

//  <rtree> SFDITEM_REG__PORT_SCLA0PCFG
//    <name> SCLA0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040985) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SCLA0PCFG >> 0) & 0xFF), ((PORT_SCLA0PCFG = (PORT_SCLA0PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SCLA0PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDAA0PCFG  -----------------------------
// SVD Line: 2344

unsigned char PORT_SDAA0PCFG __AT (0x40040986);



// -----------------------------  Field Item: PORT_SDAA0PCFG_CFG  ---------------------------------
// SVD Line: 2201

//  <item> SFDITEM_FIELD__PORT_SDAA0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040986) \nAlternate function pin configuration register\n0 : Reserved - do not use\n1 : PB00 = PB00 used as peripheral function pin\n2 : PH04 = PH04 used as peripheral function pin\n3 : PH03 = PH03 used as peripheral function pin\n4 : PH02 = PH02 used as peripheral function pin\n5 : PH01 = PH01 used as peripheral function pin\n6 : PC14 = PC14 used as peripheral function pin\n7 : PC15 = PC15 used as peripheral function pin\n8 : PC08 = PC08 used as peripheral function pin\n9 : PC09 = PC09 used as peripheral function pin\n10 : PC10 = PC10 used as peripheral function pin\n11 : PC11 = PC11 used as peripheral function pin\n12 : PA00 = PA00 used as peripheral function pin\n13 : PA01 = PA01 used as peripheral function pin\n14 : PA02 = PA02 used as peripheral function pin\n15 : PA03 = PA03 used as peripheral function pin\n16 : PD07 = PD07 used as peripheral function pin\n17 : PD08 = PD08 used as peripheral function pin\n18 : PD09 = PD09 used as peripheral function pin\n19 : PD10 = PD10 used as peripheral function pin\n20 : PD11 = PD11 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SDAA0PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB00 = PB00 used as peripheral function pin
//        <2=> 2: PH04 = PH04 used as peripheral function pin
//        <3=> 3: PH03 = PH03 used as peripheral function pin
//        <4=> 4: PH02 = PH02 used as peripheral function pin
//        <5=> 5: PH01 = PH01 used as peripheral function pin
//        <6=> 6: PC14 = PC14 used as peripheral function pin
//        <7=> 7: PC15 = PC15 used as peripheral function pin
//        <8=> 8: PC08 = PC08 used as peripheral function pin
//        <9=> 9: PC09 = PC09 used as peripheral function pin
//        <10=> 10: PC10 = PC10 used as peripheral function pin
//        <11=> 11: PC11 = PC11 used as peripheral function pin
//        <12=> 12: PA00 = PA00 used as peripheral function pin
//        <13=> 13: PA01 = PA01 used as peripheral function pin
//        <14=> 14: PA02 = PA02 used as peripheral function pin
//        <15=> 15: PA03 = PA03 used as peripheral function pin
//        <16=> 16: PD07 = PD07 used as peripheral function pin
//        <17=> 17: PD08 = PD08 used as peripheral function pin
//        <18=> 18: PD09 = PD09 used as peripheral function pin
//        <19=> 19: PD10 = PD10 used as peripheral function pin
//        <20=> 20: PD11 = PD11 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SDAA0PCFG  ---------------------------------
// SVD Line: 2344

//  <rtree> SFDITEM_REG__PORT_SDAA0PCFG
//    <name> SDAA0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040986) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SDAA0PCFG >> 0) & 0xFF), ((PORT_SDAA0PCFG = (PORT_SDAA0PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SDAA0PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI10PCFG  ------------------------------
// SVD Line: 2349

unsigned char PORT_TI10PCFG __AT (0x400409A0);



// ------------------------------  Field Item: PORT_TI10PCFG_CFG  ---------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_TI10PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A0) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI10PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI10PCFG  ---------------------------------
// SVD Line: 2349

//  <rtree> SFDITEM_REG__PORT_TI10PCFG
//    <name> TI10PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A0) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI10PCFG >> 0) & 0xFF), ((PORT_TI10PCFG = (PORT_TI10PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI10PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI11PCFG  ------------------------------
// SVD Line: 2466

unsigned char PORT_TI11PCFG __AT (0x400409A1);



// ------------------------------  Field Item: PORT_TI11PCFG_CFG  ---------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_TI11PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A1) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI11PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI11PCFG  ---------------------------------
// SVD Line: 2466

//  <rtree> SFDITEM_REG__PORT_TI11PCFG
//    <name> TI11PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A1) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI11PCFG >> 0) & 0xFF), ((PORT_TI11PCFG = (PORT_TI11PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI11PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI12PCFG  ------------------------------
// SVD Line: 2471

unsigned char PORT_TI12PCFG __AT (0x400409A2);



// ------------------------------  Field Item: PORT_TI12PCFG_CFG  ---------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_TI12PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A2) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI12PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI12PCFG  ---------------------------------
// SVD Line: 2471

//  <rtree> SFDITEM_REG__PORT_TI12PCFG
//    <name> TI12PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A2) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI12PCFG >> 0) & 0xFF), ((PORT_TI12PCFG = (PORT_TI12PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI12PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI13PCFG  ------------------------------
// SVD Line: 2476

unsigned char PORT_TI13PCFG __AT (0x400409A3);



// ------------------------------  Field Item: PORT_TI13PCFG_CFG  ---------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_TI13PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A3) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI13PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI13PCFG  ---------------------------------
// SVD Line: 2476

//  <rtree> SFDITEM_REG__PORT_TI13PCFG
//    <name> TI13PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A3) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI13PCFG >> 0) & 0xFF), ((PORT_TI13PCFG = (PORT_TI13PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI13PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_RXD1PCFG  ------------------------------
// SVD Line: 2481

unsigned char PORT_RXD1PCFG __AT (0x400409A4);



// ------------------------------  Field Item: PORT_RXD1PCFG_CFG  ---------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_RXD1PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A4) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_RXD1PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_RXD1PCFG  ---------------------------------
// SVD Line: 2481

//  <rtree> SFDITEM_REG__PORT_RXD1PCFG
//    <name> RXD1PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A4) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_RXD1PCFG >> 0) & 0xFF), ((PORT_RXD1PCFG = (PORT_RXD1PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_RXD1PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_IRRXDPCFG  -----------------------------
// SVD Line: 2486

unsigned char PORT_IRRXDPCFG __AT (0x400409A4);



// ------------------------------  Register Item: PORT_IRRXDPCFG  ---------------------------------
// SVD Line: 2486

//  <item> SFDITEM_REG__PORT_IRRXDPCFG
//    <name> IRRXDPCFG </name>
//    <i> [Bits 7..0] RW (@ 0x400409A4) IRRXDPCFG </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_IRRXDPCFG >> 0) & 0xFFFFFFFF), ((PORT_IRRXDPCFG = (PORT_IRRXDPCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: PORT_SDI10PCFG  -----------------------------
// SVD Line: 2493

unsigned char PORT_SDI10PCFG __AT (0x400409A4);



// ------------------------------  Register Item: PORT_SDI10PCFG  ---------------------------------
// SVD Line: 2493

//  <item> SFDITEM_REG__PORT_SDI10PCFG
//    <name> SDI10PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x400409A4) SDI10PCFG </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SDI10PCFG >> 0) & 0xFFFFFFFF), ((PORT_SDI10PCFG = (PORT_SDI10PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: PORT_SPIHS0_SCKIPCFG  --------------------------
// SVD Line: 2500

unsigned char PORT_SPIHS0_SCKIPCFG __AT (0x400409A5);



// --------------------------  Field Item: PORT_SPIHS0_SCKIPCFG_CFG  ------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_SPIHS0_SCKIPCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A5) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SPIHS0_SCKIPCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: PORT_SPIHS0_SCKIPCFG  ------------------------------
// SVD Line: 2500

//  <rtree> SFDITEM_REG__PORT_SPIHS0_SCKIPCFG
//    <name> SPIHS0_SCKIPCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A5) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SPIHS0_SCKIPCFG >> 0) & 0xFF), ((PORT_SPIHS0_SCKIPCFG = (PORT_SPIHS0_SCKIPCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SPIHS0_SCKIPCFG_CFG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PORT_SPIHS0_SIPCFG  ---------------------------
// SVD Line: 2505

unsigned char PORT_SPIHS0_SIPCFG __AT (0x400409A6);



// ---------------------------  Field Item: PORT_SPIHS0_SIPCFG_CFG  -------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_SPIHS0_SIPCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A6) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SPIHS0_SIPCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: PORT_SPIHS0_SIPCFG  -------------------------------
// SVD Line: 2505

//  <rtree> SFDITEM_REG__PORT_SPIHS0_SIPCFG
//    <name> SPIHS0_SIPCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A6) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SPIHS0_SIPCFG >> 0) & 0xFF), ((PORT_SPIHS0_SIPCFG = (PORT_SPIHS0_SIPCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SPIHS0_SIPCFG_CFG </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PORT_SPIHS0_MIPCFG  ---------------------------
// SVD Line: 2510

unsigned char PORT_SPIHS0_MIPCFG __AT (0x400409A7);



// ---------------------------  Field Item: PORT_SPIHS0_MIPCFG_CFG  -------------------------------
// SVD Line: 2357

//  <item> SFDITEM_FIELD__PORT_SPIHS0_MIPCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409A7) \nCFG\n0 : Reserved - do not use\n1 : PC03 = PC03 used as peripheral function pin\n2 : PC04 = PC04 used as peripheral function pin\n3 : PC05 = PC05 used as peripheral function pin\n4 : PC06 = PC06 used as peripheral function pin\n5 : PC07 = PC07 used as peripheral function pin\n6 : PC12 = PC12 used as peripheral function pin\n7 : PC13 = PC13 used as peripheral function pin\n8 : PA04 = PA04 used as peripheral function pin\n9 : PA05 = PA05 used as peripheral function pin\n10 : PA06 = PA06 used as peripheral function pin\n11 : PA07 = PA07 used as peripheral function pin\n12 : PA08 = PA08 used as peripheral function pin\n13 : PA09 = PA09 used as peripheral function pin\n14 : PA10 = PA10 used as peripheral function pin\n15 : PD00 = PD00 used as peripheral function pin\n16 : PD01 = PD01 used as peripheral function pin\n17 : PD12 = PD12 used as peripheral function pin\n18 : PD13 = PD13 used as peripheral function pin\n19 : PD14 = PD14 used as peripheral function pin\n20 : PD15 = PD15 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SPIHS0_MIPCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PC03 = PC03 used as peripheral function pin
//        <2=> 2: PC04 = PC04 used as peripheral function pin
//        <3=> 3: PC05 = PC05 used as peripheral function pin
//        <4=> 4: PC06 = PC06 used as peripheral function pin
//        <5=> 5: PC07 = PC07 used as peripheral function pin
//        <6=> 6: PC12 = PC12 used as peripheral function pin
//        <7=> 7: PC13 = PC13 used as peripheral function pin
//        <8=> 8: PA04 = PA04 used as peripheral function pin
//        <9=> 9: PA05 = PA05 used as peripheral function pin
//        <10=> 10: PA06 = PA06 used as peripheral function pin
//        <11=> 11: PA07 = PA07 used as peripheral function pin
//        <12=> 12: PA08 = PA08 used as peripheral function pin
//        <13=> 13: PA09 = PA09 used as peripheral function pin
//        <14=> 14: PA10 = PA10 used as peripheral function pin
//        <15=> 15: PD00 = PD00 used as peripheral function pin
//        <16=> 16: PD01 = PD01 used as peripheral function pin
//        <17=> 17: PD12 = PD12 used as peripheral function pin
//        <18=> 18: PD13 = PD13 used as peripheral function pin
//        <19=> 19: PD14 = PD14 used as peripheral function pin
//        <20=> 20: PD15 = PD15 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: PORT_SPIHS0_MIPCFG  -------------------------------
// SVD Line: 2510

//  <rtree> SFDITEM_REG__PORT_SPIHS0_MIPCFG
//    <name> SPIHS0_MIPCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409A7) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SPIHS0_MIPCFG >> 0) & 0xFF), ((PORT_SPIHS0_MIPCFG = (PORT_SPIHS0_MIPCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SPIHS0_MIPCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI14PCFG  ------------------------------
// SVD Line: 2515

unsigned char PORT_TI14PCFG __AT (0x400409C0);



// ------------------------------  Field Item: PORT_TI14PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_TI14PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C0) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI14PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI14PCFG  ---------------------------------
// SVD Line: 2515

//  <rtree> SFDITEM_REG__PORT_TI14PCFG
//    <name> TI14PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C0) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI14PCFG >> 0) & 0xFF), ((PORT_TI14PCFG = (PORT_TI14PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI14PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI15PCFG  ------------------------------
// SVD Line: 2632

unsigned char PORT_TI15PCFG __AT (0x400409C1);



// ------------------------------  Field Item: PORT_TI15PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_TI15PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C1) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI15PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI15PCFG  ---------------------------------
// SVD Line: 2632

//  <rtree> SFDITEM_REG__PORT_TI15PCFG
//    <name> TI15PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C1) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI15PCFG >> 0) & 0xFF), ((PORT_TI15PCFG = (PORT_TI15PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI15PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI16PCFG  ------------------------------
// SVD Line: 2637

unsigned char PORT_TI16PCFG __AT (0x400409C2);



// ------------------------------  Field Item: PORT_TI16PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_TI16PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C2) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI16PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI16PCFG  ---------------------------------
// SVD Line: 2637

//  <rtree> SFDITEM_REG__PORT_TI16PCFG
//    <name> TI16PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C2) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI16PCFG >> 0) & 0xFF), ((PORT_TI16PCFG = (PORT_TI16PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI16PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI17PCFG  ------------------------------
// SVD Line: 2642

unsigned char PORT_TI17PCFG __AT (0x400409C3);



// ------------------------------  Field Item: PORT_TI17PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_TI17PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C3) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI17PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI17PCFG  ---------------------------------
// SVD Line: 2642

//  <rtree> SFDITEM_REG__PORT_TI17PCFG
//    <name> TI17PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C3) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI17PCFG >> 0) & 0xFF), ((PORT_TI17PCFG = (PORT_TI17PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI17PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_RXD2PCFG  ------------------------------
// SVD Line: 2647

unsigned char PORT_RXD2PCFG __AT (0x400409C4);



// ------------------------------  Field Item: PORT_RXD2PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_RXD2PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C4) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_RXD2PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_RXD2PCFG  ---------------------------------
// SVD Line: 2647

//  <rtree> SFDITEM_REG__PORT_RXD2PCFG
//    <name> RXD2PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C4) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_RXD2PCFG >> 0) & 0xFF), ((PORT_RXD2PCFG = (PORT_RXD2PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_RXD2PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDI20PCFG  -----------------------------
// SVD Line: 2652

unsigned char PORT_SDI20PCFG __AT (0x400409C4);



// ------------------------------  Register Item: PORT_SDI20PCFG  ---------------------------------
// SVD Line: 2652

//  <item> SFDITEM_REG__PORT_SDI20PCFG
//    <name> SDI20PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x400409C4) SDI20PCFG </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SDI20PCFG >> 0) & 0xFFFFFFFF), ((PORT_SDI20PCFG = (PORT_SDI20PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: PORT_SPIHS1_NSSPCFG  ---------------------------
// SVD Line: 2659

unsigned char PORT_SPIHS1_NSSPCFG __AT (0x400409C5);



// ---------------------------  Field Item: PORT_SPIHS1_NSSPCFG_CFG  ------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_SPIHS1_NSSPCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C5) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SPIHS1_NSSPCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: PORT_SPIHS1_NSSPCFG  ------------------------------
// SVD Line: 2659

//  <rtree> SFDITEM_REG__PORT_SPIHS1_NSSPCFG
//    <name> SPIHS1_NSSPCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C5) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SPIHS1_NSSPCFG >> 0) & 0xFF), ((PORT_SPIHS1_NSSPCFG = (PORT_SPIHS1_NSSPCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SPIHS1_NSSPCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SCLA1PCFG  -----------------------------
// SVD Line: 2664

unsigned char PORT_SCLA1PCFG __AT (0x400409C6);



// -----------------------------  Field Item: PORT_SCLA1PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_SCLA1PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C6) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SCLA1PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SCLA1PCFG  ---------------------------------
// SVD Line: 2664

//  <rtree> SFDITEM_REG__PORT_SCLA1PCFG
//    <name> SCLA1PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C6) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SCLA1PCFG >> 0) & 0xFF), ((PORT_SCLA1PCFG = (PORT_SCLA1PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SCLA1PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDAA1PCFG  -----------------------------
// SVD Line: 2669

unsigned char PORT_SDAA1PCFG __AT (0x400409C7);



// -----------------------------  Field Item: PORT_SDAA1PCFG_CFG  ---------------------------------
// SVD Line: 2523

//  <item> SFDITEM_FIELD__PORT_SDAA1PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400409C7) \nCFG\n0 : Reserved - do not use\n1 : PB01 = PB01 used as peripheral function pin\n2 : PB02 = PB02 used as peripheral function pin\n3 : PB03 = PB03 used as peripheral function pin\n4 : PB04 = PB04 used as peripheral function pin\n5 : PB05 = PB05 used as peripheral function pin\n6 : PB06 = PB06 used as peripheral function pin\n7 : PB07 = PB07 used as peripheral function pin\n8 : PB08 = PB08 used as peripheral function pin\n9 : PC00 = PC00 used as peripheral function pin\n10 : PC01 = PC01 used as peripheral function pin\n11 : PC02 = PC02 used as peripheral function pin\n12 : PA11 = PA11 used as peripheral function pin\n13 : PA12 = PA12 used as peripheral function pin\n14 : PA13 = PA13 used as peripheral function pin\n15 : PA14 = PA14 used as peripheral function pin\n16 : PD02 = PD02 used as peripheral function pin\n17 : PD03 = PD03 used as peripheral function pin\n18 : PD04 = PD04 used as peripheral function pin\n19 : PD05 = PD05 used as peripheral function pin\n20 : PD06 = PD06 used as peripheral function pin\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SDAA1PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: PB01 = PB01 used as peripheral function pin
//        <2=> 2: PB02 = PB02 used as peripheral function pin
//        <3=> 3: PB03 = PB03 used as peripheral function pin
//        <4=> 4: PB04 = PB04 used as peripheral function pin
//        <5=> 5: PB05 = PB05 used as peripheral function pin
//        <6=> 6: PB06 = PB06 used as peripheral function pin
//        <7=> 7: PB07 = PB07 used as peripheral function pin
//        <8=> 8: PB08 = PB08 used as peripheral function pin
//        <9=> 9: PC00 = PC00 used as peripheral function pin
//        <10=> 10: PC01 = PC01 used as peripheral function pin
//        <11=> 11: PC02 = PC02 used as peripheral function pin
//        <12=> 12: PA11 = PA11 used as peripheral function pin
//        <13=> 13: PA12 = PA12 used as peripheral function pin
//        <14=> 14: PA13 = PA13 used as peripheral function pin
//        <15=> 15: PA14 = PA14 used as peripheral function pin
//        <16=> 16: PD02 = PD02 used as peripheral function pin
//        <17=> 17: PD03 = PD03 used as peripheral function pin
//        <18=> 18: PD04 = PD04 used as peripheral function pin
//        <19=> 19: PD05 = PD05 used as peripheral function pin
//        <20=> 20: PD06 = PD06 used as peripheral function pin
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SDAA1PCFG  ---------------------------------
// SVD Line: 2669

//  <rtree> SFDITEM_REG__PORT_SDAA1PCFG
//    <name> SDAA1PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409C7) Alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SDAA1PCFG >> 0) & 0xFF), ((PORT_SDAA1PCFG = (PORT_SDAA1PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SDAA1PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP0PCFG  -----------------------------
// SVD Line: 2674

unsigned char PORT_INTP0PCFG __AT (0x400409E0);



// -----------------------------  Field Item: PORT_INTP0PCFG_CFG  ---------------------------------
// SVD Line: 2682

//  <item> SFDITEM_FIELD__PORT_INTP0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E0) \nCFG\n0 : PC00 = PC00 used as INTP0 pin\n1 : PC01 = PC01 used as INTP0 pin\n2 : PC02 = PC02 used as INTP0 pin\n3 : PC03 = PC03 used as INTP0 pin\n4 : PC04 = PC04 used as INTP0 pin\n5 : PC05 = PC05 used as INTP0 pin\n6 : PC06 = PC06 used as INTP0 pin\n7 : PC07 = PC07 used as INTP0 pin </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP0PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PC00 = PC00 used as INTP0 pin
//        <1=> 1: PC01 = PC01 used as INTP0 pin
//        <2=> 2: PC02 = PC02 used as INTP0 pin
//        <3=> 3: PC03 = PC03 used as INTP0 pin
//        <4=> 4: PC04 = PC04 used as INTP0 pin
//        <5=> 5: PC05 = PC05 used as INTP0 pin
//        <6=> 6: PC06 = PC06 used as INTP0 pin
//        <7=> 7: PC07 = PC07 used as INTP0 pin
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP0PCFG  ---------------------------------
// SVD Line: 2674

//  <rtree> SFDITEM_REG__PORT_INTP0PCFG
//    <name> INTP0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E0) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP0PCFG >> 0) & 0xFF), ((PORT_INTP0PCFG = (PORT_INTP0PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP0PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP1PCFG  -----------------------------
// SVD Line: 2731

unsigned char PORT_INTP1PCFG __AT (0x400409E1);



// -----------------------------  Field Item: PORT_INTP1PCFG_CFG  ---------------------------------
// SVD Line: 2739

//  <item> SFDITEM_FIELD__PORT_INTP1PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E1) \nCFG\n0 : PC12 = PC12 used as INTP1 pin\n1 : PC13 = PC13 used as INTP1 pin\n2 : PC14 = PC14 used as INTP1 pin\n3 : PC15 = PC15 used as INTP1 pin\n4 : PC08 = PC08 used as INTP1 pin\n5 : PC09 = PC09 used as INTP1 pin\n6 : PC10 = PC10 used as INTP1 pin\n7 : PC11 = PC11 used as INTP1 pin </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP1PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PC12 = PC12 used as INTP1 pin
//        <1=> 1: PC13 = PC13 used as INTP1 pin
//        <2=> 2: PC14 = PC14 used as INTP1 pin
//        <3=> 3: PC15 = PC15 used as INTP1 pin
//        <4=> 4: PC08 = PC08 used as INTP1 pin
//        <5=> 5: PC09 = PC09 used as INTP1 pin
//        <6=> 6: PC10 = PC10 used as INTP1 pin
//        <7=> 7: PC11 = PC11 used as INTP1 pin
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP1PCFG  ---------------------------------
// SVD Line: 2731

//  <rtree> SFDITEM_REG__PORT_INTP1PCFG
//    <name> INTP1PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E1) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP1PCFG >> 0) & 0xFF), ((PORT_INTP1PCFG = (PORT_INTP1PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP1PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP2PCFG  -----------------------------
// SVD Line: 2788

unsigned char PORT_INTP2PCFG __AT (0x400409E2);



// -----------------------------  Field Item: PORT_INTP2PCFG_CFG  ---------------------------------
// SVD Line: 2796

//  <item> SFDITEM_FIELD__PORT_INTP2PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E2) \nCFG\n0 : PA00 = PA00 used as INTP2 pin\n1 : PA01 = PA01 used as INTP2 pin\n2 : PA02 = PA02 used as INTP2 pin\n3 : PA03 = PA03 used as INTP2 pin\n4 : PA11 = PA11 used as INTP2 pin\n5 : PA12 = PA12 used as INTP2 pin\n6 : PA13 = PA13 used as INTP2 pin\n7 : PA14 = PA14 used as INTP2 pin </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP2PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PA00 = PA00 used as INTP2 pin
//        <1=> 1: PA01 = PA01 used as INTP2 pin
//        <2=> 2: PA02 = PA02 used as INTP2 pin
//        <3=> 3: PA03 = PA03 used as INTP2 pin
//        <4=> 4: PA11 = PA11 used as INTP2 pin
//        <5=> 5: PA12 = PA12 used as INTP2 pin
//        <6=> 6: PA13 = PA13 used as INTP2 pin
//        <7=> 7: PA14 = PA14 used as INTP2 pin
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP2PCFG  ---------------------------------
// SVD Line: 2788

//  <rtree> SFDITEM_REG__PORT_INTP2PCFG
//    <name> INTP2PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E2) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP2PCFG >> 0) & 0xFF), ((PORT_INTP2PCFG = (PORT_INTP2PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP2PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP3PCFG  -----------------------------
// SVD Line: 2845

unsigned char PORT_INTP3PCFG __AT (0x400409E3);



// -----------------------------  Field Item: PORT_INTP3PCFG_CFG  ---------------------------------
// SVD Line: 2853

//  <item> SFDITEM_FIELD__PORT_INTP3PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E3) \nCFG\n0 : PA04 = PA04 used as INTP3 pin\n1 : PA05 = PA05 used as INTP3 pin\n2 : PA06 = PA06 used as INTP3 pin\n3 : PA07 = PA07 used as INTP3 pin\n4 : PA08 = PA08 used as INTP3 pin\n5 : PA09 = PA09 used as INTP3 pin\n6 : PA10 = PA10 used as INTP3 pin\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP3PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PA04 = PA04 used as INTP3 pin
//        <1=> 1: PA05 = PA05 used as INTP3 pin
//        <2=> 2: PA06 = PA06 used as INTP3 pin
//        <3=> 3: PA07 = PA07 used as INTP3 pin
//        <4=> 4: PA08 = PA08 used as INTP3 pin
//        <5=> 5: PA09 = PA09 used as INTP3 pin
//        <6=> 6: PA10 = PA10 used as INTP3 pin
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP3PCFG  ---------------------------------
// SVD Line: 2845

//  <rtree> SFDITEM_REG__PORT_INTP3PCFG
//    <name> INTP3PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E3) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP3PCFG >> 0) & 0xFF), ((PORT_INTP3PCFG = (PORT_INTP3PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP3PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP4PCFG  -----------------------------
// SVD Line: 2897

unsigned char PORT_INTP4PCFG __AT (0x400409E4);



// -----------------------------  Field Item: PORT_INTP4PCFG_CFG  ---------------------------------
// SVD Line: 2905

//  <item> SFDITEM_FIELD__PORT_INTP4PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E4) \nCFG\n0 : PD00 = PD00 used as INTP4 pin\n1 : PD01 = PD01 used as INTP4 pin\n2 : PD12 = PD12 used as INTP4 pin\n3 : PD13 = PD13 used as INTP4 pin\n4 : PD14 = PD14 used as INTP4 pin\n5 : PD15 = PD15 used as INTP4 pin\n6 : PD02 = PD02 used as INTP4 pin\n7 : PD03 = PD03 used as INTP4 pin </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP4PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PD00 = PD00 used as INTP4 pin
//        <1=> 1: PD01 = PD01 used as INTP4 pin
//        <2=> 2: PD12 = PD12 used as INTP4 pin
//        <3=> 3: PD13 = PD13 used as INTP4 pin
//        <4=> 4: PD14 = PD14 used as INTP4 pin
//        <5=> 5: PD15 = PD15 used as INTP4 pin
//        <6=> 6: PD02 = PD02 used as INTP4 pin
//        <7=> 7: PD03 = PD03 used as INTP4 pin
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP4PCFG  ---------------------------------
// SVD Line: 2897

//  <rtree> SFDITEM_REG__PORT_INTP4PCFG
//    <name> INTP4PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E4) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP4PCFG >> 0) & 0xFF), ((PORT_INTP4PCFG = (PORT_INTP4PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP4PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP5PCFG  -----------------------------
// SVD Line: 2954

unsigned char PORT_INTP5PCFG __AT (0x400409E5);



// -----------------------------  Field Item: PORT_INTP5PCFG_CFG  ---------------------------------
// SVD Line: 2962

//  <item> SFDITEM_FIELD__PORT_INTP5PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E5) \nCFG\n0 : PD04 = PD04 used as INTP5 pin\n1 : PD05 = PD05 used as INTP5 pin\n2 : PD06 = PD06 used as INTP5 pin\n3 : PD07 = PD07 used as INTP5 pin\n4 : PD08 = PD08 used as INTP5 pin\n5 : PD09 = PD09 used as INTP5 pin\n6 : PD10 = PD10 used as INTP5 pin\n7 : PD11 = PD11 used as INTP5 pin </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP5PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PD04 = PD04 used as INTP5 pin
//        <1=> 1: PD05 = PD05 used as INTP5 pin
//        <2=> 2: PD06 = PD06 used as INTP5 pin
//        <3=> 3: PD07 = PD07 used as INTP5 pin
//        <4=> 4: PD08 = PD08 used as INTP5 pin
//        <5=> 5: PD09 = PD09 used as INTP5 pin
//        <6=> 6: PD10 = PD10 used as INTP5 pin
//        <7=> 7: PD11 = PD11 used as INTP5 pin
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP5PCFG  ---------------------------------
// SVD Line: 2954

//  <rtree> SFDITEM_REG__PORT_INTP5PCFG
//    <name> INTP5PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E5) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP5PCFG >> 0) & 0xFF), ((PORT_INTP5PCFG = (PORT_INTP5PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP5PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP6PCFG  -----------------------------
// SVD Line: 3011

unsigned char PORT_INTP6PCFG __AT (0x400409E6);



// -----------------------------  Field Item: PORT_INTP6PCFG_CFG  ---------------------------------
// SVD Line: 3019

//  <item> SFDITEM_FIELD__PORT_INTP6PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E6) \nCFG\n0 : PB00 = PB00 used as INTP6 pin\n1 : PH04 = PH04 used as INTP6 pin\n2 : PH03 = PH03 used as INTP6 pin\n3 : PH02 = PH02 used as INTP6 pin\n4 : PH01 = PH01 used as INTP6 pin\n5 : PB01 = PB01 used as INTP6 pin\n6 : PB02 = PB02 used as INTP6 pin\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP6PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PB00 = PB00 used as INTP6 pin
//        <1=> 1: PH04 = PH04 used as INTP6 pin
//        <2=> 2: PH03 = PH03 used as INTP6 pin
//        <3=> 3: PH02 = PH02 used as INTP6 pin
//        <4=> 4: PH01 = PH01 used as INTP6 pin
//        <5=> 5: PB01 = PB01 used as INTP6 pin
//        <6=> 6: PB02 = PB02 used as INTP6 pin
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP6PCFG  ---------------------------------
// SVD Line: 3011

//  <rtree> SFDITEM_REG__PORT_INTP6PCFG
//    <name> INTP6PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E6) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP6PCFG >> 0) & 0xFF), ((PORT_INTP6PCFG = (PORT_INTP6PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP6PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP7PCFG  -----------------------------
// SVD Line: 3063

unsigned char PORT_INTP7PCFG __AT (0x400409E7);



// -----------------------------  Field Item: PORT_INTP7PCFG_CFG  ---------------------------------
// SVD Line: 3071

//  <item> SFDITEM_FIELD__PORT_INTP7PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400409E7) \nCFG\n0 : PB03 = PB03 used as INTP7 pin\n1 : PB04 = PB04 used as INTP7 pin\n2 : PB05 = PB05 used as INTP7 pin\n3 : PB06 = PB06 used as INTP7 pin\n4 : PB07 = PB07 used as INTP7 pin\n5 : PB08 = PB08 used as INTP7 pin\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP7PCFG ) </loc>
//      <o.2..0> CFG
//        <0=> 0: PB03 = PB03 used as INTP7 pin
//        <1=> 1: PB04 = PB04 used as INTP7 pin
//        <2=> 2: PB05 = PB05 used as INTP7 pin
//        <3=> 3: PB06 = PB06 used as INTP7 pin
//        <4=> 4: PB07 = PB07 used as INTP7 pin
//        <5=> 5: PB08 = PB08 used as INTP7 pin
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP7PCFG  ---------------------------------
// SVD Line: 3063

//  <rtree> SFDITEM_REG__PORT_INTP7PCFG
//    <name> INTP7PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400409E7) Alternate INTP pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP7PCFG >> 0) & 0xFF), ((PORT_INTP7PCFG = (PORT_INTP7PCFG & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP7PCFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_USBPMR  -------------------------------
// SVD Line: 3110

unsigned char PORT_USBPMR __AT (0x4004047D);



// ------------------------------  Field Item: PORT_USBPMR_DMPMR  ---------------------------------
// SVD Line: 3119

//  <item> SFDITEM_FIELD__PORT_USBPMR_DMPMR
//    <name> DMPMR </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004047D) \nUSB_DP and USB_DM pin function select\n0 : GPIO = PA07 and PA08 did not use as USB pins\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : USB = PA07 used as USB_DP and PA08 used as USB_DM </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_USBPMR ) </loc>
//      <o.1..0> DMPMR
//        <0=> 0: GPIO = PA07 and PA08 did not use as USB pins
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: USB = PA07 used as USB_DP and PA08 used as USB_DM
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_USBPMR  ----------------------------------
// SVD Line: 3110

//  <rtree> SFDITEM_REG__PORT_USBPMR
//    <name> USBPMR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004047D) USB port configuration register </i>
//    <loc> ( (unsigned char)((PORT_USBPMR >> 0) & 0xFF), ((PORT_USBPMR = (PORT_USBPMR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_USBPMR_DMPMR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_USBPRCR  ------------------------------
// SVD Line: 3140

unsigned char PORT_USBPRCR __AT (0x4004047E);



// -------------------------------  Register Item: PORT_USBPRCR  ----------------------------------
// SVD Line: 3140

//  <item> SFDITEM_REG__PORT_USBPRCR
//    <name> USBPRCR </name>
//    <i> [Bits 7..0] RW (@ 0x4004047E) USB port configuration protect register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_USBPRCR >> 0) & 0xFFFFFFFF), ((PORT_USBPRCR = (PORT_USBPRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: PORT  -------------------------------------
// SVD Line: 1338

//  <view> PORT
//    <name> PORT </name>
//    <item> SFDITEM_REG__PORT_PMA </item>
//    <item> SFDITEM_REG__PORT_PMB </item>
//    <item> SFDITEM_REG__PORT_PMC </item>
//    <item> SFDITEM_REG__PORT_PMD </item>
//    <item> SFDITEM_REG__PORT_PMH </item>
//    <item> SFDITEM_REG__PORT_PA </item>
//    <item> SFDITEM_REG__PORT_PB </item>
//    <item> SFDITEM_REG__PORT_PC </item>
//    <item> SFDITEM_REG__PORT_PD </item>
//    <item> SFDITEM_REG__PORT_PH </item>
//    <item> SFDITEM_REG__PORT_PSETA </item>
//    <item> SFDITEM_REG__PORT_PSETB </item>
//    <item> SFDITEM_REG__PORT_PSETC </item>
//    <item> SFDITEM_REG__PORT_PSETD </item>
//    <item> SFDITEM_REG__PORT_PSETH </item>
//    <item> SFDITEM_REG__PORT_PCLRA </item>
//    <item> SFDITEM_REG__PORT_PCLRB </item>
//    <item> SFDITEM_REG__PORT_PCLRC </item>
//    <item> SFDITEM_REG__PORT_PCLRD </item>
//    <item> SFDITEM_REG__PORT_PCLRH </item>
//    <item> SFDITEM_REG__PORT_PUA </item>
//    <item> SFDITEM_REG__PORT_PUB </item>
//    <item> SFDITEM_REG__PORT_PUC </item>
//    <item> SFDITEM_REG__PORT_PUD </item>
//    <item> SFDITEM_REG__PORT_PUH </item>
//    <item> SFDITEM_REG__PORT_PDA </item>
//    <item> SFDITEM_REG__PORT_PDB </item>
//    <item> SFDITEM_REG__PORT_PDC </item>
//    <item> SFDITEM_REG__PORT_PDD </item>
//    <item> SFDITEM_REG__PORT_POMA </item>
//    <item> SFDITEM_REG__PORT_POMB </item>
//    <item> SFDITEM_REG__PORT_POMC </item>
//    <item> SFDITEM_REG__PORT_POMD </item>
//    <item> SFDITEM_REG__PORT_POMH </item>
//    <item> SFDITEM_REG__PORT_PMCA </item>
//    <item> SFDITEM_REG__PORT_PMCB </item>
//    <item> SFDITEM_REG__PORT_PMCC </item>
//    <item> SFDITEM_REG__PORT_PMCD </item>
//    <item> SFDITEM_REG__PORT_PREADA </item>
//    <item> SFDITEM_REG__PORT_PREADB </item>
//    <item> SFDITEM_REG__PORT_PREADC </item>
//    <item> SFDITEM_REG__PORT_PREADD </item>
//    <item> SFDITEM_REG__PORT_PREADH </item>
//    <item> SFDITEM_REG__PORT_PB00CFG </item>
//    <item> SFDITEM_REG__PORT_PH04CFG </item>
//    <item> SFDITEM_REG__PORT_PH03CFG </item>
//    <item> SFDITEM_REG__PORT_PH02CFG </item>
//    <item> SFDITEM_REG__PORT_PH01CFG </item>
//    <item> SFDITEM_REG__PORT_PC14CFG </item>
//    <item> SFDITEM_REG__PORT_PC15CFG </item>
//    <item> SFDITEM_REG__PORT_PC08CFG </item>
//    <item> SFDITEM_REG__PORT_PC09CFG </item>
//    <item> SFDITEM_REG__PORT_PC10CFG </item>
//    <item> SFDITEM_REG__PORT_PC11CFG </item>
//    <item> SFDITEM_REG__PORT_PA00CFG </item>
//    <item> SFDITEM_REG__PORT_PA01CFG </item>
//    <item> SFDITEM_REG__PORT_PA02CFG </item>
//    <item> SFDITEM_REG__PORT_PA03CFG </item>
//    <item> SFDITEM_REG__PORT_PD07CFG </item>
//    <item> SFDITEM_REG__PORT_PD08CFG </item>
//    <item> SFDITEM_REG__PORT_PD09CFG </item>
//    <item> SFDITEM_REG__PORT_PD10CFG </item>
//    <item> SFDITEM_REG__PORT_PD11CFG </item>
//    <item> SFDITEM_REG__PORT_PC03CFG </item>
//    <item> SFDITEM_REG__PORT_PC04CFG </item>
//    <item> SFDITEM_REG__PORT_PC05CFG </item>
//    <item> SFDITEM_REG__PORT_PC06CFG </item>
//    <item> SFDITEM_REG__PORT_PC07CFG </item>
//    <item> SFDITEM_REG__PORT_PC12CFG </item>
//    <item> SFDITEM_REG__PORT_PC13CFG </item>
//    <item> SFDITEM_REG__PORT_PA04CFG </item>
//    <item> SFDITEM_REG__PORT_PA05CFG </item>
//    <item> SFDITEM_REG__PORT_PA06CFG </item>
//    <item> SFDITEM_REG__PORT_PA07CFG </item>
//    <item> SFDITEM_REG__PORT_PA08CFG </item>
//    <item> SFDITEM_REG__PORT_PA09CFG </item>
//    <item> SFDITEM_REG__PORT_PA10CFG </item>
//    <item> SFDITEM_REG__PORT_PD00CFG </item>
//    <item> SFDITEM_REG__PORT_PD01CFG </item>
//    <item> SFDITEM_REG__PORT_PD12CFG </item>
//    <item> SFDITEM_REG__PORT_PD13CFG </item>
//    <item> SFDITEM_REG__PORT_PD14CFG </item>
//    <item> SFDITEM_REG__PORT_PD15CFG </item>
//    <item> SFDITEM_REG__PORT_PB01CFG </item>
//    <item> SFDITEM_REG__PORT_PB02CFG </item>
//    <item> SFDITEM_REG__PORT_PB03CFG </item>
//    <item> SFDITEM_REG__PORT_PB04CFG </item>
//    <item> SFDITEM_REG__PORT_PB05CFG </item>
//    <item> SFDITEM_REG__PORT_PB06CFG </item>
//    <item> SFDITEM_REG__PORT_PB07CFG </item>
//    <item> SFDITEM_REG__PORT_PB08CFG </item>
//    <item> SFDITEM_REG__PORT_PC00CFG </item>
//    <item> SFDITEM_REG__PORT_PC01CFG </item>
//    <item> SFDITEM_REG__PORT_PC02CFG </item>
//    <item> SFDITEM_REG__PORT_PA11CFG </item>
//    <item> SFDITEM_REG__PORT_PA12CFG </item>
//    <item> SFDITEM_REG__PORT_PA13CFG </item>
//    <item> SFDITEM_REG__PORT_PA14CFG </item>
//    <item> SFDITEM_REG__PORT_PD02CFG </item>
//    <item> SFDITEM_REG__PORT_PD03CFG </item>
//    <item> SFDITEM_REG__PORT_PD04CFG </item>
//    <item> SFDITEM_REG__PORT_PD05CFG </item>
//    <item> SFDITEM_REG__PORT_PD06CFG </item>
//    <item> SFDITEM_REG__PORT_TI00PCFG </item>
//    <item> SFDITEM_REG__PORT_TI01PCFG </item>
//    <item> SFDITEM_REG__PORT_TI02PCFG </item>
//    <item> SFDITEM_REG__PORT_TI03PCFG </item>
//    <item> SFDITEM_REG__PORT_RXD0PCFG </item>
//    <item> SFDITEM_REG__PORT_SDI00PCFG </item>
//    <item> SFDITEM_REG__PORT_SCLA0PCFG </item>
//    <item> SFDITEM_REG__PORT_SDAA0PCFG </item>
//    <item> SFDITEM_REG__PORT_TI10PCFG </item>
//    <item> SFDITEM_REG__PORT_TI11PCFG </item>
//    <item> SFDITEM_REG__PORT_TI12PCFG </item>
//    <item> SFDITEM_REG__PORT_TI13PCFG </item>
//    <item> SFDITEM_REG__PORT_RXD1PCFG </item>
//    <item> SFDITEM_REG__PORT_IRRXDPCFG </item>
//    <item> SFDITEM_REG__PORT_SDI10PCFG </item>
//    <item> SFDITEM_REG__PORT_SPIHS0_SCKIPCFG </item>
//    <item> SFDITEM_REG__PORT_SPIHS0_SIPCFG </item>
//    <item> SFDITEM_REG__PORT_SPIHS0_MIPCFG </item>
//    <item> SFDITEM_REG__PORT_TI14PCFG </item>
//    <item> SFDITEM_REG__PORT_TI15PCFG </item>
//    <item> SFDITEM_REG__PORT_TI16PCFG </item>
//    <item> SFDITEM_REG__PORT_TI17PCFG </item>
//    <item> SFDITEM_REG__PORT_RXD2PCFG </item>
//    <item> SFDITEM_REG__PORT_SDI20PCFG </item>
//    <item> SFDITEM_REG__PORT_SPIHS1_NSSPCFG </item>
//    <item> SFDITEM_REG__PORT_SCLA1PCFG </item>
//    <item> SFDITEM_REG__PORT_SDAA1PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP0PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP1PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP2PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP3PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP4PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP5PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP6PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP7PCFG </item>
//    <item> SFDITEM_REG__PORT_USBPMR </item>
//    <item> SFDITEM_REG__PORT_USBPRCR </item>
//  </view>
//  


// ---------------------------  Register Item Address: DIV_DIVIDEND  ------------------------------
// SVD Line: 3174

unsigned int DIV_DIVIDEND __AT (0x4001C000);



// -------------------------------  Register Item: DIV_DIVIDEND  ----------------------------------
// SVD Line: 3174

//  <item> SFDITEM_REG__DIV_DIVIDEND
//    <name> DIVIDEND </name>
//    <i> [Bits 31..0] RW (@ 0x4001C000) Dividend register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_DIVIDEND >> 0) & 0xFFFFFFFF), ((DIV_DIVIDEND = (DIV_DIVIDEND & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: DIV_DIVISOR  -------------------------------
// SVD Line: 3182

unsigned int DIV_DIVISOR __AT (0x4001C004);



// -------------------------------  Register Item: DIV_DIVISOR  -----------------------------------
// SVD Line: 3182

//  <item> SFDITEM_REG__DIV_DIVISOR
//    <name> DIVISOR </name>
//    <i> [Bits 31..0] RW (@ 0x4001C004) Divisor register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_DIVISOR >> 0) & 0xFFFFFFFF), ((DIV_DIVISOR = (DIV_DIVISOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: DIV_QUOTIENT  ------------------------------
// SVD Line: 3190

unsigned int DIV_QUOTIENT __AT (0x4001C008);



// -------------------------------  Register Item: DIV_QUOTIENT  ----------------------------------
// SVD Line: 3190

//  <item> SFDITEM_REG__DIV_QUOTIENT
//    <name> QUOTIENT </name>
//    <i> [Bits 31..0] RO (@ 0x4001C008) Quotient register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_QUOTIENT >> 0) & 0xFFFFFFFF), ((DIV_QUOTIENT = (DIV_QUOTIENT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DIV_REMAINDER  ------------------------------
// SVD Line: 3199

unsigned int DIV_REMAINDER __AT (0x4001C00C);



// ------------------------------  Register Item: DIV_REMAINDER  ----------------------------------
// SVD Line: 3199

//  <item> SFDITEM_REG__DIV_REMAINDER
//    <name> REMAINDER </name>
//    <i> [Bits 31..0] RO (@ 0x4001C00C) Remainder register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DIV_REMAINDER >> 0) & 0xFFFFFFFF), ((DIV_REMAINDER = (DIV_REMAINDER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DIV_STATUS  -------------------------------
// SVD Line: 3208

unsigned int DIV_STATUS __AT (0x4001C010);



// -------------------------------  Field Item: DIV_STATUS_BUSY  ----------------------------------
// SVD Line: 3217

//  <item> SFDITEM_FIELD__DIV_STATUS_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001C010) divider busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) DIV_STATUS ) </loc>
//      <o.8..8> BUSY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DIV_STATUS_DIVBYZERO  --------------------------------
// SVD Line: 3224

//  <item> SFDITEM_FIELD__DIV_STATUS_DIVBYZERO
//    <name> DIVBYZERO </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001C010) divider zero flag </i>
//    <check> 
//      <loc> ( (unsigned int) DIV_STATUS ) </loc>
//      <o.9..9> DIVBYZERO
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DIV_STATUS  -----------------------------------
// SVD Line: 3208

//  <rtree> SFDITEM_REG__DIV_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C010) Status register </i>
//    <loc> ( (unsigned int)((DIV_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DIV_STATUS_BUSY </item>
//    <item> SFDITEM_FIELD__DIV_STATUS_DIVBYZERO </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DIV  --------------------------------------
// SVD Line: 3152

//  <view> DIV
//    <name> DIV </name>
//    <item> SFDITEM_REG__DIV_DIVIDEND </item>
//    <item> SFDITEM_REG__DIV_DIVISOR </item>
//    <item> SFDITEM_REG__DIV_QUOTIENT </item>
//    <item> SFDITEM_REG__DIV_REMAINDER </item>
//    <item> SFDITEM_REG__DIV_STATUS </item>
//  </view>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR00  --------------------------
// SVD Line: 3277

unsigned short TM40_TCR0_TCR0_TCR00 __AT (0x40041D80);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR00  ------------------------------
// SVD Line: 3277

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR00
//    <name> TCR00 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D80) Timer count register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR00 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR00 = (TM40_TCR0_TCR0_TCR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR01  --------------------------
// SVD Line: 3277

unsigned short TM40_TCR0_TCR0_TCR01 __AT (0x40041D82);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR01  ------------------------------
// SVD Line: 3277

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR01
//    <name> TCR01 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D82) Timer count register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR01 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR01 = (TM40_TCR0_TCR0_TCR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR02  --------------------------
// SVD Line: 3277

unsigned short TM40_TCR0_TCR0_TCR02 __AT (0x40041D84);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR02  ------------------------------
// SVD Line: 3277

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR02
//    <name> TCR02 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D84) Timer count register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR02 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR02 = (TM40_TCR0_TCR0_TCR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR03  --------------------------
// SVD Line: 3277

unsigned short TM40_TCR0_TCR0_TCR03 __AT (0x40041D86);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR03  ------------------------------
// SVD Line: 3277

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR03
//    <name> TCR03 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D86) Timer count register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR03 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR03 = (TM40_TCR0_TCR0_TCR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM40_TMR00  -------------------------------
// SVD Line: 3289

unsigned short TM40_TMR00 __AT (0x40041D90);



// --------------------------------  Field Item: TM40_TMR00_MD  -----------------------------------
// SVD Line: 3298

//  <item> SFDITEM_FIELD__TM40_TMR00_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D90) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 0) & 0xF), ((TM40_TMR00 = (TM40_TMR00 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CIS  -----------------------------------
// SVD Line: 3305

//  <item> SFDITEM_FIELD__TM40_TMR00_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D90) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 6) & 0x3), ((TM40_TMR00 = (TM40_TMR00 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_STS  -----------------------------------
// SVD Line: 3312

//  <item> SFDITEM_FIELD__TM40_TMR00_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D90) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 8) & 0x7), ((TM40_TMR00 = (TM40_TMR00 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CCS  -----------------------------------
// SVD Line: 3319

//  <item> SFDITEM_FIELD__TM40_TMR00_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D90) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR00 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CKS  -----------------------------------
// SVD Line: 3326

//  <item> SFDITEM_FIELD__TM40_TMR00_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D90) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 14) & 0x3), ((TM40_TMR00 = (TM40_TMR00 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR00  -----------------------------------
// SVD Line: 3289

//  <rtree> SFDITEM_REG__TM40_TMR00
//    <name> TMR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D90) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR00 >> 0) & 0xFFFF), ((TM40_TMR00 = (TM40_TMR00 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR00_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR01  -------------------------------
// SVD Line: 3335

unsigned short TM40_TMR01 __AT (0x40041D92);



// --------------------------------  Field Item: TM40_TMR01_MD  -----------------------------------
// SVD Line: 3344

//  <item> SFDITEM_FIELD__TM40_TMR01_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D92) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 0) & 0xF), ((TM40_TMR01 = (TM40_TMR01 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CIS  -----------------------------------
// SVD Line: 3351

//  <item> SFDITEM_FIELD__TM40_TMR01_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D92) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 6) & 0x3), ((TM40_TMR01 = (TM40_TMR01 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_STS  -----------------------------------
// SVD Line: 3358

//  <item> SFDITEM_FIELD__TM40_TMR01_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D92) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 8) & 0x7), ((TM40_TMR01 = (TM40_TMR01 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR01_SPLIT  ----------------------------------
// SVD Line: 3365

//  <item> SFDITEM_FIELD__TM40_TMR01_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D92) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR01 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CCS  -----------------------------------
// SVD Line: 3372

//  <item> SFDITEM_FIELD__TM40_TMR01_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D92) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR01 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CKS  -----------------------------------
// SVD Line: 3379

//  <item> SFDITEM_FIELD__TM40_TMR01_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D92) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 14) & 0x3), ((TM40_TMR01 = (TM40_TMR01 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR01  -----------------------------------
// SVD Line: 3335

//  <rtree> SFDITEM_REG__TM40_TMR01
//    <name> TMR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D92) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR01 >> 0) & 0xFFFF), ((TM40_TMR01 = (TM40_TMR01 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR01_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_SPLIT </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR02  -------------------------------
// SVD Line: 3388

unsigned short TM40_TMR02 __AT (0x40041D94);



// --------------------------------  Field Item: TM40_TMR02_MD  -----------------------------------
// SVD Line: 3397

//  <item> SFDITEM_FIELD__TM40_TMR02_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D94) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 0) & 0xF), ((TM40_TMR02 = (TM40_TMR02 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CIS  -----------------------------------
// SVD Line: 3404

//  <item> SFDITEM_FIELD__TM40_TMR02_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D94) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 6) & 0x3), ((TM40_TMR02 = (TM40_TMR02 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_STS  -----------------------------------
// SVD Line: 3411

//  <item> SFDITEM_FIELD__TM40_TMR02_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D94) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 8) & 0x7), ((TM40_TMR02 = (TM40_TMR02 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR02_MASTER  ---------------------------------
// SVD Line: 3418

//  <item> SFDITEM_FIELD__TM40_TMR02_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D94) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR02 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CCS  -----------------------------------
// SVD Line: 3425

//  <item> SFDITEM_FIELD__TM40_TMR02_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D94) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR02 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CKS  -----------------------------------
// SVD Line: 3432

//  <item> SFDITEM_FIELD__TM40_TMR02_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D94) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 14) & 0x3), ((TM40_TMR02 = (TM40_TMR02 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR02  -----------------------------------
// SVD Line: 3388

//  <rtree> SFDITEM_REG__TM40_TMR02
//    <name> TMR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D94) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR02 >> 0) & 0xFFFF), ((TM40_TMR02 = (TM40_TMR02 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR02_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_MASTER </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR03  -------------------------------
// SVD Line: 3441

unsigned short TM40_TMR03 __AT (0x40041D96);



// --------------------------------  Field Item: TM40_TMR03_MD  -----------------------------------
// SVD Line: 3450

//  <item> SFDITEM_FIELD__TM40_TMR03_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D96) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 0) & 0xF), ((TM40_TMR03 = (TM40_TMR03 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CIS  -----------------------------------
// SVD Line: 3457

//  <item> SFDITEM_FIELD__TM40_TMR03_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D96) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 6) & 0x3), ((TM40_TMR03 = (TM40_TMR03 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_STS  -----------------------------------
// SVD Line: 3464

//  <item> SFDITEM_FIELD__TM40_TMR03_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D96) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 8) & 0x7), ((TM40_TMR03 = (TM40_TMR03 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR03_SPLIT  ----------------------------------
// SVD Line: 3471

//  <item> SFDITEM_FIELD__TM40_TMR03_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D96) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR03 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CCS  -----------------------------------
// SVD Line: 3478

//  <item> SFDITEM_FIELD__TM40_TMR03_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D96) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR03 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CKS  -----------------------------------
// SVD Line: 3485

//  <item> SFDITEM_FIELD__TM40_TMR03_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D96) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 14) & 0x3), ((TM40_TMR03 = (TM40_TMR03 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR03  -----------------------------------
// SVD Line: 3441

//  <rtree> SFDITEM_REG__TM40_TMR03
//    <name> TMR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D96) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR03 >> 0) & 0xFFFF), ((TM40_TMR03 = (TM40_TMR03 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR03_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_SPLIT </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR00  -------------------------------
// SVD Line: 3494

unsigned short TM40_TSR00 __AT (0x40041DA0);



// -------------------------------  Field Item: TM40_TSR00_OVF  -----------------------------------
// SVD Line: 3503

//  <item> SFDITEM_FIELD__TM40_TSR00_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA0) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR00 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR00  -----------------------------------
// SVD Line: 3494

//  <rtree> SFDITEM_REG__TM40_TSR00
//    <name> TSR00 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA0) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR00 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR00_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR01  -------------------------------
// SVD Line: 3511

unsigned short TM40_TSR01 __AT (0x40041DA2);



// -------------------------------  Field Item: TM40_TSR01_OVF  -----------------------------------
// SVD Line: 3503

//  <item> SFDITEM_FIELD__TM40_TSR01_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA2) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR01 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR01  -----------------------------------
// SVD Line: 3511

//  <rtree> SFDITEM_REG__TM40_TSR01
//    <name> TSR01 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA2) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR01 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR01_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR02  -------------------------------
// SVD Line: 3517

unsigned short TM40_TSR02 __AT (0x40041DA4);



// -------------------------------  Field Item: TM40_TSR02_OVF  -----------------------------------
// SVD Line: 3503

//  <item> SFDITEM_FIELD__TM40_TSR02_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA4) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR02 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR02  -----------------------------------
// SVD Line: 3517

//  <rtree> SFDITEM_REG__TM40_TSR02
//    <name> TSR02 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA4) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR02 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR02_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR03  -------------------------------
// SVD Line: 3523

unsigned short TM40_TSR03 __AT (0x40041DA6);



// -------------------------------  Field Item: TM40_TSR03_OVF  -----------------------------------
// SVD Line: 3503

//  <item> SFDITEM_FIELD__TM40_TSR03_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA6) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR03 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR03  -----------------------------------
// SVD Line: 3523

//  <rtree> SFDITEM_REG__TM40_TSR03
//    <name> TSR03 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA6) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR03 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR03_OVF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TE0  --------------------------------
// SVD Line: 3529

unsigned short TM40_TE0 __AT (0x40041DB0);



// --------------------------------  Field Item: TM40_TE0_TE00  -----------------------------------
// SVD Line: 3538

//  <item> SFDITEM_FIELD__TM40_TE0_TE00
//    <name> TE00 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.0..0> TE00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE01  -----------------------------------
// SVD Line: 3544

//  <item> SFDITEM_FIELD__TM40_TE0_TE01
//    <name> TE01 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.1..1> TE01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE02  -----------------------------------
// SVD Line: 3550

//  <item> SFDITEM_FIELD__TM40_TE0_TE02
//    <name> TE02 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.2..2> TE02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE03  -----------------------------------
// SVD Line: 3556

//  <item> SFDITEM_FIELD__TM40_TE0_TE03
//    <name> TE03 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.3..3> TE03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TE0_TEH01  -----------------------------------
// SVD Line: 3562

//  <item> SFDITEM_FIELD__TM40_TE0_TEH01
//    <name> TEH01 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40041DB0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.9..9> TEH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TE0_TEH03  -----------------------------------
// SVD Line: 3568

//  <item> SFDITEM_FIELD__TM40_TE0_TEH03
//    <name> TEH03 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40041DB0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.11..11> TEH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TE0  ------------------------------------
// SVD Line: 3529

//  <rtree> SFDITEM_REG__TM40_TE0
//    <name> TE0 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DB0) Timer channel enable status register m </i>
//    <loc> ( (unsigned short)((TM40_TE0 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TE0_TE00 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE01 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE02 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE03 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TEH01 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TEH03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TS0  --------------------------------
// SVD Line: 3576

unsigned short TM40_TS0 __AT (0x40041DB2);



// --------------------------------  Field Item: TM40_TS0_TS00  -----------------------------------
// SVD Line: 3585

//  <item> SFDITEM_FIELD__TM40_TS0_TS00
//    <name> TS00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.0..0> TS00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS01  -----------------------------------
// SVD Line: 3591

//  <item> SFDITEM_FIELD__TM40_TS0_TS01
//    <name> TS01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.1..1> TS01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS02  -----------------------------------
// SVD Line: 3597

//  <item> SFDITEM_FIELD__TM40_TS0_TS02
//    <name> TS02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.2..2> TS02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS03  -----------------------------------
// SVD Line: 3603

//  <item> SFDITEM_FIELD__TM40_TS0_TS03
//    <name> TS03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.3..3> TS03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TS0_TSH01  -----------------------------------
// SVD Line: 3609

//  <item> SFDITEM_FIELD__TM40_TS0_TSH01
//    <name> TSH01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041DB2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.9..9> TSH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TS0_TSH03  -----------------------------------
// SVD Line: 3615

//  <item> SFDITEM_FIELD__TM40_TS0_TSH03
//    <name> TSH03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041DB2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.11..11> TSH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TS0  ------------------------------------
// SVD Line: 3576

//  <rtree> SFDITEM_REG__TM40_TS0
//    <name> TS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB2) Timer channel start register 0 </i>
//    <loc> ( (unsigned short)((TM40_TS0 >> 0) & 0xFFFF), ((TM40_TS0 = (TM40_TS0 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TS0_TS00 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS01 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS02 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS03 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TSH01 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TSH03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TT0  --------------------------------
// SVD Line: 3623

unsigned short TM40_TT0 __AT (0x40041DB4);



// --------------------------------  Field Item: TM40_TT0_TT00  -----------------------------------
// SVD Line: 3632

//  <item> SFDITEM_FIELD__TM40_TT0_TT00
//    <name> TT00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB4) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.0..0> TT00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT01  -----------------------------------
// SVD Line: 3638

//  <item> SFDITEM_FIELD__TM40_TT0_TT01
//    <name> TT01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB4) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.1..1> TT01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT02  -----------------------------------
// SVD Line: 3644

//  <item> SFDITEM_FIELD__TM40_TT0_TT02
//    <name> TT02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB4) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.2..2> TT02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT03  -----------------------------------
// SVD Line: 3650

//  <item> SFDITEM_FIELD__TM40_TT0_TT03
//    <name> TT03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB4) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.3..3> TT03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TT0_TTH01  -----------------------------------
// SVD Line: 3656

//  <item> SFDITEM_FIELD__TM40_TT0_TTH01
//    <name> TTH01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041DB4) Trigger to stop operation of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.9..9> TTH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TT0_TTH03  -----------------------------------
// SVD Line: 3662

//  <item> SFDITEM_FIELD__TM40_TT0_TTH03
//    <name> TTH03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041DB4) Trigger to stop operation of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.11..11> TTH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TT0  ------------------------------------
// SVD Line: 3623

//  <rtree> SFDITEM_REG__TM40_TT0
//    <name> TT0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB4) Timer channel stop register 0 </i>
//    <loc> ( (unsigned short)((TM40_TT0 >> 0) & 0xFFFF), ((TM40_TT0 = (TM40_TT0 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TT0_TT00 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT01 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT02 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT03 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TTH01 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TTH03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TPS0  --------------------------------
// SVD Line: 3670

unsigned short TM40_TPS0 __AT (0x40041DB6);



// -------------------------------  Field Item: TM40_TPS0_PRS00  ----------------------------------
// SVD Line: 3679

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS00
//    <name> PRS00 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041DB6) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 0) & 0xF), ((TM40_TPS0 = (TM40_TPS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS01  ----------------------------------
// SVD Line: 3685

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS01
//    <name> PRS01 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041DB6) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 4) & 0xF), ((TM40_TPS0 = (TM40_TPS0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS02  ----------------------------------
// SVD Line: 3691

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS02
//    <name> PRS02 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041DB6) Prescaler 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 8) & 0x3), ((TM40_TPS0 = (TM40_TPS0 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS03  ----------------------------------
// SVD Line: 3697

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS03
//    <name> PRS03 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40041DB6) Prescaler 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 12) & 0x3), ((TM40_TPS0 = (TM40_TPS0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TPS0  -----------------------------------
// SVD Line: 3670

//  <rtree> SFDITEM_REG__TM40_TPS0
//    <name> TPS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB6) Timer clock select register 0 </i>
//    <loc> ( (unsigned short)((TM40_TPS0 >> 0) & 0xFFFF), ((TM40_TPS0 = (TM40_TPS0 & ~(0x33FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x33FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS00 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS01 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS02 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TO0  --------------------------------
// SVD Line: 3705

unsigned short TM40_TO0 __AT (0x40041DB8);



// --------------------------------  Field Item: TM40_TO0_TO00  -----------------------------------
// SVD Line: 3714

//  <item> SFDITEM_FIELD__TM40_TO0_TO00
//    <name> TO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB8) Timer output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.0..0> TO00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO01  -----------------------------------
// SVD Line: 3720

//  <item> SFDITEM_FIELD__TM40_TO0_TO01
//    <name> TO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB8) Timer output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.1..1> TO01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO02  -----------------------------------
// SVD Line: 3726

//  <item> SFDITEM_FIELD__TM40_TO0_TO02
//    <name> TO02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB8) Timer output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.2..2> TO02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO03  -----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__TM40_TO0_TO03
//    <name> TO03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB8) Timer output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.3..3> TO03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TO0  ------------------------------------
// SVD Line: 3705

//  <rtree> SFDITEM_REG__TM40_TO0
//    <name> TO0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB8) Timer output register 0 </i>
//    <loc> ( (unsigned short)((TM40_TO0 >> 0) & 0xFFFF), ((TM40_TO0 = (TM40_TO0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TO0_TO00 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO01 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO02 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOE0  --------------------------------
// SVD Line: 3740

unsigned short TM40_TOE0 __AT (0x40041DBA);



// -------------------------------  Field Item: TM40_TOE0_TOE00  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE00
//    <name> TOE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DBA) Timer output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.0..0> TOE00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE01  ----------------------------------
// SVD Line: 3755

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE01
//    <name> TOE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBA) Timer output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.1..1> TOE01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE02  ----------------------------------
// SVD Line: 3761

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE02
//    <name> TOE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBA) Timer output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.2..2> TOE02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE03  ----------------------------------
// SVD Line: 3767

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE03
//    <name> TOE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBA) Timer output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.3..3> TOE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOE0  -----------------------------------
// SVD Line: 3740

//  <rtree> SFDITEM_REG__TM40_TOE0
//    <name> TOE0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBA) Timer output enable register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOE0 >> 0) & 0xFFFF), ((TM40_TOE0 = (TM40_TOE0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE00 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE01 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE02 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOL0  --------------------------------
// SVD Line: 3775

unsigned short TM40_TOL0 __AT (0x40041DBC);



// -------------------------------  Field Item: TM40_TOL0_TOL01  ----------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL01
//    <name> TOL01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBC) Control of timer output level of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.1..1> TOL01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOL0_TOL02  ----------------------------------
// SVD Line: 3790

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL02
//    <name> TOL02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBC) Control of timer output level of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.2..2> TOL02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOL0_TOL03  ----------------------------------
// SVD Line: 3796

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL03
//    <name> TOL03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBC) Control of timer output level of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.3..3> TOL03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOL0  -----------------------------------
// SVD Line: 3775

//  <rtree> SFDITEM_REG__TM40_TOL0
//    <name> TOL0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBC) Timer output level register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOL0 >> 0) & 0xFFFF), ((TM40_TOL0 = (TM40_TOL0 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL01 </item>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL02 </item>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOM0  --------------------------------
// SVD Line: 3804

unsigned short TM40_TOM0 __AT (0x40041DBE);



// -------------------------------  Field Item: TM40_TOM0_TOM01  ----------------------------------
// SVD Line: 3813

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM01
//    <name> TOM01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBE) Control of timer output mode of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.1..1> TOM01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOM0_TOM02  ----------------------------------
// SVD Line: 3819

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM02
//    <name> TOM02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBE) Control of timer output mode of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.2..2> TOM02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOM0_TOM03  ----------------------------------
// SVD Line: 3825

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM03
//    <name> TOM03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBE) Control of timer output mode of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.3..3> TOM03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOM0  -----------------------------------
// SVD Line: 3804

//  <rtree> SFDITEM_REG__TM40_TOM0
//    <name> TOM0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBE) Timer output mode register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOM0 >> 0) & 0xFFFF), ((TM40_TOM0 = (TM40_TOM0 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM01 </item>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM02 </item>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM03 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR00  --------------------------
// SVD Line: 3833

unsigned short TM40_TDR0_TDR0_TDR00 __AT (0x40041F18);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR00  ------------------------------
// SVD Line: 3833

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR00
//    <name> TDR00 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F18) Timer data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR00 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR00 = (TM40_TDR0_TDR0_TDR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR01  --------------------------
// SVD Line: 3833

unsigned short TM40_TDR0_TDR0_TDR01 __AT (0x40041F1A);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR01  ------------------------------
// SVD Line: 3833

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR01
//    <name> TDR01 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F1A) Timer data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR01 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR01 = (TM40_TDR0_TDR0_TDR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR02  --------------------------
// SVD Line: 3845

unsigned short TM40_TDR0_TDR0_TDR02 __AT (0x40041F64);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR02  ------------------------------
// SVD Line: 3845

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR02
//    <name> TDR02 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F64) Timer data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR02 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR02 = (TM40_TDR0_TDR0_TDR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR03  --------------------------
// SVD Line: 3845

unsigned short TM40_TDR0_TDR0_TDR03 __AT (0x40041F66);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR03  ------------------------------
// SVD Line: 3845

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR03
//    <name> TDR03 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F66) Timer data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR03 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR03 = (TM40_TDR0_TDR0_TDR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR01L  -------------------------------
// SVD Line: 3857

unsigned char TM40_TDR01L __AT (0x40041F1A);



// -------------------------------  Register Item: TM40_TDR01L  -----------------------------------
// SVD Line: 3857

//  <item> SFDITEM_REG__TM40_TDR01L
//    <name> TDR01L </name>
//    <i> [Bits 7..0] RW (@ 0x40041F1A) Timer data lower register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR01L >> 0) & 0xFFFFFFFF), ((TM40_TDR01L = (TM40_TDR01L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR01H  -------------------------------
// SVD Line: 3865

unsigned char TM40_TDR01H __AT (0x40041F1B);



// -------------------------------  Register Item: TM40_TDR01H  -----------------------------------
// SVD Line: 3865

//  <item> SFDITEM_REG__TM40_TDR01H
//    <name> TDR01H </name>
//    <i> [Bits 7..0] RW (@ 0x40041F1B) Timer data higher register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR01H >> 0) & 0xFFFFFFFF), ((TM40_TDR01H = (TM40_TDR01H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR03L  -------------------------------
// SVD Line: 3873

unsigned char TM40_TDR03L __AT (0x40041F66);



// -------------------------------  Register Item: TM40_TDR03L  -----------------------------------
// SVD Line: 3873

//  <item> SFDITEM_REG__TM40_TDR03L
//    <name> TDR03L </name>
//    <i> [Bits 7..0] RW (@ 0x40041F66) Timer data lower register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR03L >> 0) & 0xFFFFFFFF), ((TM40_TDR03L = (TM40_TDR03L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR03H  -------------------------------
// SVD Line: 3881

unsigned char TM40_TDR03H __AT (0x40041F67);



// -------------------------------  Register Item: TM40_TDR03H  -----------------------------------
// SVD Line: 3881

//  <item> SFDITEM_REG__TM40_TDR03H
//    <name> TDR03H </name>
//    <i> [Bits 7..0] RW (@ 0x40041F67) Timer data higher register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR03H >> 0) & 0xFFFFFFFF), ((TM40_TDR03H = (TM40_TDR03H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TM40  -------------------------------------
// SVD Line: 3237

//  <view> TM40
//    <name> TM40 </name>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR00 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR01 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR02 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR03 </item>
//    <item> SFDITEM_REG__TM40_TMR00 </item>
//    <item> SFDITEM_REG__TM40_TMR01 </item>
//    <item> SFDITEM_REG__TM40_TMR02 </item>
//    <item> SFDITEM_REG__TM40_TMR03 </item>
//    <item> SFDITEM_REG__TM40_TSR00 </item>
//    <item> SFDITEM_REG__TM40_TSR01 </item>
//    <item> SFDITEM_REG__TM40_TSR02 </item>
//    <item> SFDITEM_REG__TM40_TSR03 </item>
//    <item> SFDITEM_REG__TM40_TE0 </item>
//    <item> SFDITEM_REG__TM40_TS0 </item>
//    <item> SFDITEM_REG__TM40_TT0 </item>
//    <item> SFDITEM_REG__TM40_TPS0 </item>
//    <item> SFDITEM_REG__TM40_TO0 </item>
//    <item> SFDITEM_REG__TM40_TOE0 </item>
//    <item> SFDITEM_REG__TM40_TOL0 </item>
//    <item> SFDITEM_REG__TM40_TOM0 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR00 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR01 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR02 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR03 </item>
//    <item> SFDITEM_REG__TM40_TDR01L </item>
//    <item> SFDITEM_REG__TM40_TDR01H </item>
//    <item> SFDITEM_REG__TM40_TDR03L </item>
//    <item> SFDITEM_REG__TM40_TDR03H </item>
//  </view>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR10  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR10 __AT (0x40042180);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR10  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR10
//    <name> TCR10 </name>
//    <i> [Bits 15..0] RO (@ 0x40042180) Timer count register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR10 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR10 = (TM81_TCR1_TCR1_TCR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR11  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR11 __AT (0x40042182);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR11  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR11
//    <name> TCR11 </name>
//    <i> [Bits 15..0] RO (@ 0x40042182) Timer count register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR11 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR11 = (TM81_TCR1_TCR1_TCR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR12  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR12 __AT (0x40042184);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR12  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR12
//    <name> TCR12 </name>
//    <i> [Bits 15..0] RO (@ 0x40042184) Timer count register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR12 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR12 = (TM81_TCR1_TCR1_TCR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR13  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR13 __AT (0x40042186);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR13  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR13
//    <name> TCR13 </name>
//    <i> [Bits 15..0] RO (@ 0x40042186) Timer count register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR13 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR13 = (TM81_TCR1_TCR1_TCR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR14  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR14 __AT (0x40042188);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR14  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR14
//    <name> TCR14 </name>
//    <i> [Bits 15..0] RO (@ 0x40042188) Timer count register 04 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR14 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR14 = (TM81_TCR1_TCR1_TCR14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR15  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR15 __AT (0x4004218A);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR15  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR15
//    <name> TCR15 </name>
//    <i> [Bits 15..0] RO (@ 0x4004218A) Timer count register 05 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR15 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR15 = (TM81_TCR1_TCR1_TCR15 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR16  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR16 __AT (0x4004218C);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR16  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR16
//    <name> TCR16 </name>
//    <i> [Bits 15..0] RO (@ 0x4004218C) Timer count register 06 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR16 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR16 = (TM81_TCR1_TCR1_TCR16 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM81_TCR1_TCR1_TCR17  --------------------------
// SVD Line: 3958

unsigned short TM81_TCR1_TCR1_TCR17 __AT (0x4004218E);



// ---------------------------  Register Item: TM81_TCR1_TCR1_TCR17  ------------------------------
// SVD Line: 3958

//  <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR17
//    <name> TCR17 </name>
//    <i> [Bits 15..0] RO (@ 0x4004218E) Timer count register 07 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TCR1_TCR1_TCR17 >> 0) & 0xFFFFFFFF), ((TM81_TCR1_TCR1_TCR17 = (TM81_TCR1_TCR1_TCR17 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TMR10  -------------------------------
// SVD Line: 3970

unsigned short TM81_TMR10 __AT (0x40042190);



// --------------------------------  Field Item: TM81_TMR10_MD  -----------------------------------
// SVD Line: 3979

//  <item> SFDITEM_FIELD__TM81_TMR10_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042190) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR10 >> 0) & 0xF), ((TM81_TMR10 = (TM81_TMR10 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR10_CIS  -----------------------------------
// SVD Line: 3986

//  <item> SFDITEM_FIELD__TM81_TMR10_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042190) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR10 >> 6) & 0x3), ((TM81_TMR10 = (TM81_TMR10 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR10_STS  -----------------------------------
// SVD Line: 3993

//  <item> SFDITEM_FIELD__TM81_TMR10_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042190) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR10 >> 8) & 0x7), ((TM81_TMR10 = (TM81_TMR10 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR10_CCS  -----------------------------------
// SVD Line: 4000

//  <item> SFDITEM_FIELD__TM81_TMR10_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042190) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR10 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR10_CKS  -----------------------------------
// SVD Line: 4007

//  <item> SFDITEM_FIELD__TM81_TMR10_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042190) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR10 >> 14) & 0x3), ((TM81_TMR10 = (TM81_TMR10 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR10  -----------------------------------
// SVD Line: 3970

//  <rtree> SFDITEM_REG__TM81_TMR10
//    <name> TMR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042190) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR10 >> 0) & 0xFFFF), ((TM81_TMR10 = (TM81_TMR10 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR10_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR10_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR10_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR10_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR10_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR11  -------------------------------
// SVD Line: 4016

unsigned short TM81_TMR11 __AT (0x40042192);



// --------------------------------  Field Item: TM81_TMR11_MD  -----------------------------------
// SVD Line: 4025

//  <item> SFDITEM_FIELD__TM81_TMR11_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042192) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR11 >> 0) & 0xF), ((TM81_TMR11 = (TM81_TMR11 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR11_CIS  -----------------------------------
// SVD Line: 4032

//  <item> SFDITEM_FIELD__TM81_TMR11_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042192) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR11 >> 6) & 0x3), ((TM81_TMR11 = (TM81_TMR11 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR11_STS  -----------------------------------
// SVD Line: 4039

//  <item> SFDITEM_FIELD__TM81_TMR11_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042192) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR11 >> 8) & 0x7), ((TM81_TMR11 = (TM81_TMR11 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM81_TMR11_SPLIT  ----------------------------------
// SVD Line: 4046

//  <item> SFDITEM_FIELD__TM81_TMR11_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042192) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR11 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR11_CCS  -----------------------------------
// SVD Line: 4053

//  <item> SFDITEM_FIELD__TM81_TMR11_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042192) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR11 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR11_CKS  -----------------------------------
// SVD Line: 4060

//  <item> SFDITEM_FIELD__TM81_TMR11_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042192) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR11 >> 14) & 0x3), ((TM81_TMR11 = (TM81_TMR11 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR11  -----------------------------------
// SVD Line: 4016

//  <rtree> SFDITEM_REG__TM81_TMR11
//    <name> TMR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042192) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR11 >> 0) & 0xFFFF), ((TM81_TMR11 = (TM81_TMR11 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR11_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR11_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR11_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR11_SPLIT </item>
//    <item> SFDITEM_FIELD__TM81_TMR11_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR11_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR12  -------------------------------
// SVD Line: 4069

unsigned short TM81_TMR12 __AT (0x40042194);



// --------------------------------  Field Item: TM81_TMR12_MD  -----------------------------------
// SVD Line: 4078

//  <item> SFDITEM_FIELD__TM81_TMR12_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042194) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR12 >> 0) & 0xF), ((TM81_TMR12 = (TM81_TMR12 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR12_CIS  -----------------------------------
// SVD Line: 4085

//  <item> SFDITEM_FIELD__TM81_TMR12_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042194) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR12 >> 6) & 0x3), ((TM81_TMR12 = (TM81_TMR12 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR12_STS  -----------------------------------
// SVD Line: 4092

//  <item> SFDITEM_FIELD__TM81_TMR12_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042194) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR12 >> 8) & 0x7), ((TM81_TMR12 = (TM81_TMR12 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM81_TMR12_MASTER  ---------------------------------
// SVD Line: 4099

//  <item> SFDITEM_FIELD__TM81_TMR12_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042194) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR12 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR12_CCS  -----------------------------------
// SVD Line: 4106

//  <item> SFDITEM_FIELD__TM81_TMR12_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042194) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR12 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR12_CKS  -----------------------------------
// SVD Line: 4113

//  <item> SFDITEM_FIELD__TM81_TMR12_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042194) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR12 >> 14) & 0x3), ((TM81_TMR12 = (TM81_TMR12 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR12  -----------------------------------
// SVD Line: 4069

//  <rtree> SFDITEM_REG__TM81_TMR12
//    <name> TMR12 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042194) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR12 >> 0) & 0xFFFF), ((TM81_TMR12 = (TM81_TMR12 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR12_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR12_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR12_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR12_MASTER </item>
//    <item> SFDITEM_FIELD__TM81_TMR12_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR12_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR13  -------------------------------
// SVD Line: 4122

unsigned short TM81_TMR13 __AT (0x40042196);



// --------------------------------  Field Item: TM81_TMR13_MD  -----------------------------------
// SVD Line: 4131

//  <item> SFDITEM_FIELD__TM81_TMR13_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042196) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR13 >> 0) & 0xF), ((TM81_TMR13 = (TM81_TMR13 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR13_CIS  -----------------------------------
// SVD Line: 4138

//  <item> SFDITEM_FIELD__TM81_TMR13_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042196) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR13 >> 6) & 0x3), ((TM81_TMR13 = (TM81_TMR13 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR13_STS  -----------------------------------
// SVD Line: 4145

//  <item> SFDITEM_FIELD__TM81_TMR13_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042196) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR13 >> 8) & 0x7), ((TM81_TMR13 = (TM81_TMR13 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM81_TMR13_SPLIT  ----------------------------------
// SVD Line: 4152

//  <item> SFDITEM_FIELD__TM81_TMR13_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042196) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR13 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR13_CCS  -----------------------------------
// SVD Line: 4159

//  <item> SFDITEM_FIELD__TM81_TMR13_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042196) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR13 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR13_CKS  -----------------------------------
// SVD Line: 4166

//  <item> SFDITEM_FIELD__TM81_TMR13_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042196) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR13 >> 14) & 0x3), ((TM81_TMR13 = (TM81_TMR13 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR13  -----------------------------------
// SVD Line: 4122

//  <rtree> SFDITEM_REG__TM81_TMR13
//    <name> TMR13 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042196) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR13 >> 0) & 0xFFFF), ((TM81_TMR13 = (TM81_TMR13 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR13_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR13_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR13_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR13_SPLIT </item>
//    <item> SFDITEM_FIELD__TM81_TMR13_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR13_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR14  -------------------------------
// SVD Line: 4175

unsigned short TM81_TMR14 __AT (0x40042198);



// --------------------------------  Field Item: TM81_TMR14_MD  -----------------------------------
// SVD Line: 4184

//  <item> SFDITEM_FIELD__TM81_TMR14_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042198) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR14 >> 0) & 0xF), ((TM81_TMR14 = (TM81_TMR14 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR14_CIS  -----------------------------------
// SVD Line: 4191

//  <item> SFDITEM_FIELD__TM81_TMR14_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042198) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR14 >> 6) & 0x3), ((TM81_TMR14 = (TM81_TMR14 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR14_STS  -----------------------------------
// SVD Line: 4198

//  <item> SFDITEM_FIELD__TM81_TMR14_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042198) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR14 >> 8) & 0x7), ((TM81_TMR14 = (TM81_TMR14 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM81_TMR14_MASTER  ---------------------------------
// SVD Line: 4205

//  <item> SFDITEM_FIELD__TM81_TMR14_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042198) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR14 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR14_CCS  -----------------------------------
// SVD Line: 4212

//  <item> SFDITEM_FIELD__TM81_TMR14_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042198) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR14 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR14_CKS  -----------------------------------
// SVD Line: 4219

//  <item> SFDITEM_FIELD__TM81_TMR14_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042198) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR14 >> 14) & 0x3), ((TM81_TMR14 = (TM81_TMR14 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR14  -----------------------------------
// SVD Line: 4175

//  <rtree> SFDITEM_REG__TM81_TMR14
//    <name> TMR14 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042198) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR14 >> 0) & 0xFFFF), ((TM81_TMR14 = (TM81_TMR14 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR14_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR14_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR14_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR14_MASTER </item>
//    <item> SFDITEM_FIELD__TM81_TMR14_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR14_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR15  -------------------------------
// SVD Line: 4228

unsigned short TM81_TMR15 __AT (0x4004219A);



// --------------------------------  Field Item: TM81_TMR15_MD  -----------------------------------
// SVD Line: 4237

//  <item> SFDITEM_FIELD__TM81_TMR15_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004219A) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR15 >> 0) & 0xF), ((TM81_TMR15 = (TM81_TMR15 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR15_CIS  -----------------------------------
// SVD Line: 4244

//  <item> SFDITEM_FIELD__TM81_TMR15_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4004219A) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR15 >> 6) & 0x3), ((TM81_TMR15 = (TM81_TMR15 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR15_STS  -----------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__TM81_TMR15_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4004219A) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR15 >> 8) & 0x7), ((TM81_TMR15 = (TM81_TMR15 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR15_CCS  -----------------------------------
// SVD Line: 4258

//  <item> SFDITEM_FIELD__TM81_TMR15_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004219A) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR15 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR15_CKS  -----------------------------------
// SVD Line: 4265

//  <item> SFDITEM_FIELD__TM81_TMR15_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x4004219A) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR15 >> 14) & 0x3), ((TM81_TMR15 = (TM81_TMR15 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR15  -----------------------------------
// SVD Line: 4228

//  <rtree> SFDITEM_REG__TM81_TMR15
//    <name> TMR15 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004219A) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR15 >> 0) & 0xFFFF), ((TM81_TMR15 = (TM81_TMR15 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR15_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR15_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR15_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR15_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR15_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR16  -------------------------------
// SVD Line: 4274

unsigned short TM81_TMR16 __AT (0x4004219C);



// --------------------------------  Field Item: TM81_TMR16_MD  -----------------------------------
// SVD Line: 4283

//  <item> SFDITEM_FIELD__TM81_TMR16_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004219C) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR16 >> 0) & 0xF), ((TM81_TMR16 = (TM81_TMR16 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR16_CIS  -----------------------------------
// SVD Line: 4290

//  <item> SFDITEM_FIELD__TM81_TMR16_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4004219C) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR16 >> 6) & 0x3), ((TM81_TMR16 = (TM81_TMR16 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR16_STS  -----------------------------------
// SVD Line: 4297

//  <item> SFDITEM_FIELD__TM81_TMR16_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4004219C) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR16 >> 8) & 0x7), ((TM81_TMR16 = (TM81_TMR16 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM81_TMR16_MASTER  ---------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__TM81_TMR16_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4004219C) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR16 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR16_CCS  -----------------------------------
// SVD Line: 4311

//  <item> SFDITEM_FIELD__TM81_TMR16_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004219C) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR16 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR16_CKS  -----------------------------------
// SVD Line: 4318

//  <item> SFDITEM_FIELD__TM81_TMR16_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x4004219C) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR16 >> 14) & 0x3), ((TM81_TMR16 = (TM81_TMR16 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR16  -----------------------------------
// SVD Line: 4274

//  <rtree> SFDITEM_REG__TM81_TMR16
//    <name> TMR16 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004219C) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR16 >> 0) & 0xFFFF), ((TM81_TMR16 = (TM81_TMR16 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR16_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR16_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR16_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR16_MASTER </item>
//    <item> SFDITEM_FIELD__TM81_TMR16_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR16_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TMR17  -------------------------------
// SVD Line: 4327

unsigned short TM81_TMR17 __AT (0x4004219E);



// --------------------------------  Field Item: TM81_TMR17_MD  -----------------------------------
// SVD Line: 4336

//  <item> SFDITEM_FIELD__TM81_TMR17_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004219E) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR17 >> 0) & 0xF), ((TM81_TMR17 = (TM81_TMR17 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR17_CIS  -----------------------------------
// SVD Line: 4343

//  <item> SFDITEM_FIELD__TM81_TMR17_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4004219E) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR17 >> 6) & 0x3), ((TM81_TMR17 = (TM81_TMR17 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR17_STS  -----------------------------------
// SVD Line: 4350

//  <item> SFDITEM_FIELD__TM81_TMR17_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4004219E) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR17 >> 8) & 0x7), ((TM81_TMR17 = (TM81_TMR17 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR17_CCS  -----------------------------------
// SVD Line: 4357

//  <item> SFDITEM_FIELD__TM81_TMR17_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004219E) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TMR17 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TMR17_CKS  -----------------------------------
// SVD Line: 4364

//  <item> SFDITEM_FIELD__TM81_TMR17_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x4004219E) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TMR17 >> 14) & 0x3), ((TM81_TMR17 = (TM81_TMR17 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TMR17  -----------------------------------
// SVD Line: 4327

//  <rtree> SFDITEM_REG__TM81_TMR17
//    <name> TMR17 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004219E) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM81_TMR17 >> 0) & 0xFFFF), ((TM81_TMR17 = (TM81_TMR17 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TMR17_MD </item>
//    <item> SFDITEM_FIELD__TM81_TMR17_CIS </item>
//    <item> SFDITEM_FIELD__TM81_TMR17_STS </item>
//    <item> SFDITEM_FIELD__TM81_TMR17_CCS </item>
//    <item> SFDITEM_FIELD__TM81_TMR17_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR10  -------------------------------
// SVD Line: 4373

unsigned short TM81_TSR10 __AT (0x400421A0);



// -------------------------------  Field Item: TM81_TSR10_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR10_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A0) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR10 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR10  -----------------------------------
// SVD Line: 4373

//  <rtree> SFDITEM_REG__TM81_TSR10
//    <name> TSR10 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A0) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR10 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR10_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR11  -------------------------------
// SVD Line: 4391

unsigned short TM81_TSR11 __AT (0x400421A2);



// -------------------------------  Field Item: TM81_TSR11_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR11_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A2) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR11 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR11  -----------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__TM81_TSR11
//    <name> TSR11 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A2) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR11 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR11_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR12  -------------------------------
// SVD Line: 4397

unsigned short TM81_TSR12 __AT (0x400421A4);



// -------------------------------  Field Item: TM81_TSR12_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR12_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A4) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR12 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR12  -----------------------------------
// SVD Line: 4397

//  <rtree> SFDITEM_REG__TM81_TSR12
//    <name> TSR12 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A4) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR12 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR12_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR13  -------------------------------
// SVD Line: 4403

unsigned short TM81_TSR13 __AT (0x400421A6);



// -------------------------------  Field Item: TM81_TSR13_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR13_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A6) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR13 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR13  -----------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__TM81_TSR13
//    <name> TSR13 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A6) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR13 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR13_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR14  -------------------------------
// SVD Line: 4409

unsigned short TM81_TSR14 __AT (0x400421A8);



// -------------------------------  Field Item: TM81_TSR14_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR14_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A8) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR14 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR14  -----------------------------------
// SVD Line: 4409

//  <rtree> SFDITEM_REG__TM81_TSR14
//    <name> TSR14 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A8) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR14 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR14_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR15  -------------------------------
// SVD Line: 4415

unsigned short TM81_TSR15 __AT (0x400421AA);



// -------------------------------  Field Item: TM81_TSR15_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR15_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421AA) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR15 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR15  -----------------------------------
// SVD Line: 4415

//  <rtree> SFDITEM_REG__TM81_TSR15
//    <name> TSR15 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421AA) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR15 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR15_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR16  -------------------------------
// SVD Line: 4421

unsigned short TM81_TSR16 __AT (0x400421AC);



// -------------------------------  Field Item: TM81_TSR16_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR16_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421AC) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR16 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR16  -----------------------------------
// SVD Line: 4421

//  <rtree> SFDITEM_REG__TM81_TSR16
//    <name> TSR16 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421AC) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR16 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR16_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TSR17  -------------------------------
// SVD Line: 4427

unsigned short TM81_TSR17 __AT (0x400421AE);



// -------------------------------  Field Item: TM81_TSR17_OVF  -----------------------------------
// SVD Line: 4382

//  <item> SFDITEM_FIELD__TM81_TSR17_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421AE) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TSR17 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM81_TSR17  -----------------------------------
// SVD Line: 4427

//  <rtree> SFDITEM_REG__TM81_TSR17
//    <name> TSR17 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421AE) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM81_TSR17 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TSR17_OVF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM81_TE1  --------------------------------
// SVD Line: 4433

unsigned short TM81_TE1 __AT (0x400421B0);



// --------------------------------  Field Item: TM81_TE1_TE10  -----------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__TM81_TE1_TE10
//    <name> TE10 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.0..0> TE10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE11  -----------------------------------
// SVD Line: 4448

//  <item> SFDITEM_FIELD__TM81_TE1_TE11
//    <name> TE11 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.1..1> TE11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE12  -----------------------------------
// SVD Line: 4454

//  <item> SFDITEM_FIELD__TM81_TE1_TE12
//    <name> TE12 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.2..2> TE12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE13  -----------------------------------
// SVD Line: 4460

//  <item> SFDITEM_FIELD__TM81_TE1_TE13
//    <name> TE13 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.3..3> TE13
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE14  -----------------------------------
// SVD Line: 4466

//  <item> SFDITEM_FIELD__TM81_TE1_TE14
//    <name> TE14 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.4..4> TE14
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE15  -----------------------------------
// SVD Line: 4472

//  <item> SFDITEM_FIELD__TM81_TE1_TE15
//    <name> TE15 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.5..5> TE15
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE16  -----------------------------------
// SVD Line: 4478

//  <item> SFDITEM_FIELD__TM81_TE1_TE16
//    <name> TE16 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.6..6> TE16
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TE1_TE17  -----------------------------------
// SVD Line: 4484

//  <item> SFDITEM_FIELD__TM81_TE1_TE17
//    <name> TE17 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TE1 ) </loc>
//      <o.7..7> TE17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TE1  ------------------------------------
// SVD Line: 4433

//  <rtree> SFDITEM_REG__TM81_TE1
//    <name> TE1 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421B0) Timer channel enable status register m </i>
//    <loc> ( (unsigned short)((TM81_TE1 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM81_TE1_TE10 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE11 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE12 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE13 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE14 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE15 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE16 </item>
//    <item> SFDITEM_FIELD__TM81_TE1_TE17 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM81_TS1  --------------------------------
// SVD Line: 4492

unsigned short TM81_TS1 __AT (0x400421B2);



// --------------------------------  Field Item: TM81_TS1_TS10  -----------------------------------
// SVD Line: 4501

//  <item> SFDITEM_FIELD__TM81_TS1_TS10
//    <name> TS10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421B2) Operation enable (start) trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.0..0> TS10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS11  -----------------------------------
// SVD Line: 4507

//  <item> SFDITEM_FIELD__TM81_TS1_TS11
//    <name> TS11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421B2) Operation enable (start) trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.1..1> TS11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS12  -----------------------------------
// SVD Line: 4513

//  <item> SFDITEM_FIELD__TM81_TS1_TS12
//    <name> TS12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421B2) Operation enable (start) trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.2..2> TS12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS13  -----------------------------------
// SVD Line: 4519

//  <item> SFDITEM_FIELD__TM81_TS1_TS13
//    <name> TS13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421B2) Operation enable (start) trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.3..3> TS13
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS14  -----------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__TM81_TS1_TS14
//    <name> TS14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400421B2) Operation enable (start) trigger of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.4..4> TS14
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS15  -----------------------------------
// SVD Line: 4531

//  <item> SFDITEM_FIELD__TM81_TS1_TS15
//    <name> TS15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400421B2) Operation enable (start) trigger of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.5..5> TS15
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS16  -----------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__TM81_TS1_TS16
//    <name> TS16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400421B2) Operation enable (start) trigger of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.6..6> TS16
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TS1_TS17  -----------------------------------
// SVD Line: 4543

//  <item> SFDITEM_FIELD__TM81_TS1_TS17
//    <name> TS17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400421B2) Operation enable (start) trigger of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TS1 ) </loc>
//      <o.7..7> TS17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TS1  ------------------------------------
// SVD Line: 4492

//  <rtree> SFDITEM_REG__TM81_TS1
//    <name> TS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B2) Timer channel start register 0 </i>
//    <loc> ( (unsigned short)((TM81_TS1 >> 0) & 0xFFFF), ((TM81_TS1 = (TM81_TS1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TS1_TS10 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS11 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS12 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS13 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS14 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS15 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS16 </item>
//    <item> SFDITEM_FIELD__TM81_TS1_TS17 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM81_TT1  --------------------------------
// SVD Line: 4551

unsigned short TM81_TT1 __AT (0x400421B4);



// --------------------------------  Field Item: TM81_TT1_TT10  -----------------------------------
// SVD Line: 4560

//  <item> SFDITEM_FIELD__TM81_TT1_TT10
//    <name> TT10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421B4) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.0..0> TT10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT11  -----------------------------------
// SVD Line: 4566

//  <item> SFDITEM_FIELD__TM81_TT1_TT11
//    <name> TT11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421B4) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.1..1> TT11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT12  -----------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__TM81_TT1_TT12
//    <name> TT12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421B4) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.2..2> TT12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT13  -----------------------------------
// SVD Line: 4578

//  <item> SFDITEM_FIELD__TM81_TT1_TT13
//    <name> TT13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421B4) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.3..3> TT13
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT14  -----------------------------------
// SVD Line: 4584

//  <item> SFDITEM_FIELD__TM81_TT1_TT14
//    <name> TT14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400421B4) Operation stop trigger of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.4..4> TT14
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT15  -----------------------------------
// SVD Line: 4590

//  <item> SFDITEM_FIELD__TM81_TT1_TT15
//    <name> TT15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400421B4) Operation stop trigger of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.5..5> TT15
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT16  -----------------------------------
// SVD Line: 4596

//  <item> SFDITEM_FIELD__TM81_TT1_TT16
//    <name> TT16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400421B4) Operation stop trigger of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.6..6> TT16
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TT1_TT17  -----------------------------------
// SVD Line: 4602

//  <item> SFDITEM_FIELD__TM81_TT1_TT17
//    <name> TT17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400421B4) Operation stop trigger of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TT1 ) </loc>
//      <o.7..7> TT17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TT1  ------------------------------------
// SVD Line: 4551

//  <rtree> SFDITEM_REG__TM81_TT1
//    <name> TT1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B4) Timer channel stop register 0 </i>
//    <loc> ( (unsigned short)((TM81_TT1 >> 0) & 0xFFFF), ((TM81_TT1 = (TM81_TT1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TT1_TT10 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT11 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT12 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT13 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT14 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT15 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT16 </item>
//    <item> SFDITEM_FIELD__TM81_TT1_TT17 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TPS1  --------------------------------
// SVD Line: 4610

unsigned short TM81_TPS1 __AT (0x400421B6);



// -------------------------------  Field Item: TM81_TPS1_PRS10  ----------------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__TM81_TPS1_PRS10
//    <name> PRS10 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400421B6) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TPS1 >> 0) & 0xF), ((TM81_TPS1 = (TM81_TPS1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TPS1_PRS11  ----------------------------------
// SVD Line: 4625

//  <item> SFDITEM_FIELD__TM81_TPS1_PRS11
//    <name> PRS11 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400421B6) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TPS1 >> 4) & 0xF), ((TM81_TPS1 = (TM81_TPS1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TPS1_PRS12  ----------------------------------
// SVD Line: 4631

//  <item> SFDITEM_FIELD__TM81_TPS1_PRS12
//    <name> PRS12 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400421B6) Prescaler 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TPS1 >> 8) & 0x3), ((TM81_TPS1 = (TM81_TPS1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM81_TPS1_PRS13  ----------------------------------
// SVD Line: 4637

//  <item> SFDITEM_FIELD__TM81_TPS1_PRS13
//    <name> PRS13 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400421B6) Prescaler 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TPS1 >> 12) & 0x3), ((TM81_TPS1 = (TM81_TPS1 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TPS1  -----------------------------------
// SVD Line: 4610

//  <rtree> SFDITEM_REG__TM81_TPS1
//    <name> TPS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B6) Timer clock select register 0 </i>
//    <loc> ( (unsigned short)((TM81_TPS1 >> 0) & 0xFFFF), ((TM81_TPS1 = (TM81_TPS1 & ~(0x33FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x33FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TPS1_PRS10 </item>
//    <item> SFDITEM_FIELD__TM81_TPS1_PRS11 </item>
//    <item> SFDITEM_FIELD__TM81_TPS1_PRS12 </item>
//    <item> SFDITEM_FIELD__TM81_TPS1_PRS13 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM81_TO1  --------------------------------
// SVD Line: 4646

unsigned short TM81_TO1 __AT (0x400421B8);



// --------------------------------  Field Item: TM81_TO1_TO10  -----------------------------------
// SVD Line: 4655

//  <item> SFDITEM_FIELD__TM81_TO1_TO10
//    <name> TO10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421B8) Timer output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.0..0> TO10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO11  -----------------------------------
// SVD Line: 4661

//  <item> SFDITEM_FIELD__TM81_TO1_TO11
//    <name> TO11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421B8) Timer output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.1..1> TO11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO12  -----------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__TM81_TO1_TO12
//    <name> TO12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421B8) Timer output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.2..2> TO12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO13  -----------------------------------
// SVD Line: 4673

//  <item> SFDITEM_FIELD__TM81_TO1_TO13
//    <name> TO13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421B8) Timer output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.3..3> TO13
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO14  -----------------------------------
// SVD Line: 4679

//  <item> SFDITEM_FIELD__TM81_TO1_TO14
//    <name> TO14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400421B8) Timer output of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.4..4> TO14
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO15  -----------------------------------
// SVD Line: 4685

//  <item> SFDITEM_FIELD__TM81_TO1_TO15
//    <name> TO15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400421B8) Timer output of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.5..5> TO15
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO16  -----------------------------------
// SVD Line: 4691

//  <item> SFDITEM_FIELD__TM81_TO1_TO16
//    <name> TO16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400421B8) Timer output of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.6..6> TO16
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM81_TO1_TO17  -----------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__TM81_TO1_TO17
//    <name> TO17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400421B8) Timer output of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TO1 ) </loc>
//      <o.7..7> TO17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TO1  ------------------------------------
// SVD Line: 4646

//  <rtree> SFDITEM_REG__TM81_TO1
//    <name> TO1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B8) Timer output register 0 </i>
//    <loc> ( (unsigned short)((TM81_TO1 >> 0) & 0xFFFF), ((TM81_TO1 = (TM81_TO1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TO1_TO10 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO11 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO12 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO13 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO14 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO15 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO16 </item>
//    <item> SFDITEM_FIELD__TM81_TO1_TO17 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TOE1  --------------------------------
// SVD Line: 4706

unsigned short TM81_TOE1 __AT (0x400421BA);



// -------------------------------  Field Item: TM81_TOE1_TOE10  ----------------------------------
// SVD Line: 4715

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE10
//    <name> TOE10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421BA) Timer output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.0..0> TOE10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE11  ----------------------------------
// SVD Line: 4721

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE11
//    <name> TOE11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421BA) Timer output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.1..1> TOE11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE12  ----------------------------------
// SVD Line: 4727

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE12
//    <name> TOE12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421BA) Timer output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.2..2> TOE12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE13  ----------------------------------
// SVD Line: 4733

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE13
//    <name> TOE13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421BA) Timer output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.3..3> TOE13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE14  ----------------------------------
// SVD Line: 4739

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE14
//    <name> TOE14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400421BA) Timer output enable of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.4..4> TOE14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE15  ----------------------------------
// SVD Line: 4745

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE15
//    <name> TOE15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400421BA) Timer output enable of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.5..5> TOE15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE16  ----------------------------------
// SVD Line: 4751

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE16
//    <name> TOE16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400421BA) Timer output enable of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.6..6> TOE16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOE1_TOE17  ----------------------------------
// SVD Line: 4757

//  <item> SFDITEM_FIELD__TM81_TOE1_TOE17
//    <name> TOE17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400421BA) Timer output enable of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOE1 ) </loc>
//      <o.7..7> TOE17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TOE1  -----------------------------------
// SVD Line: 4706

//  <rtree> SFDITEM_REG__TM81_TOE1
//    <name> TOE1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421BA) Timer output enable register 0 </i>
//    <loc> ( (unsigned short)((TM81_TOE1 >> 0) & 0xFFFF), ((TM81_TOE1 = (TM81_TOE1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE10 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE11 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE12 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE13 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE14 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE15 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE16 </item>
//    <item> SFDITEM_FIELD__TM81_TOE1_TOE17 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TOL1  --------------------------------
// SVD Line: 4766

unsigned short TM81_TOL1 __AT (0x400421BC);



// -------------------------------  Field Item: TM81_TOL1_TOL11  ----------------------------------
// SVD Line: 4775

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL11
//    <name> TOL11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421BC) Control of timer output level of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.1..1> TOL11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOL1_TOL12  ----------------------------------
// SVD Line: 4781

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL12
//    <name> TOL12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421BC) Control of timer output level of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.2..2> TOL12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOL1_TOL13  ----------------------------------
// SVD Line: 4787

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL13
//    <name> TOL13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421BC) Control of timer output level of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.3..3> TOL13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOL1_TOL14  ----------------------------------
// SVD Line: 4793

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL14
//    <name> TOL14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400421BC) Control of timer output level of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.4..4> TOL14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOL1_TOL15  ----------------------------------
// SVD Line: 4799

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL15
//    <name> TOL15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400421BC) Control of timer output level of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.5..5> TOL15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOL1_TOL16  ----------------------------------
// SVD Line: 4805

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL16
//    <name> TOL16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400421BC) Control of timer output level of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.6..6> TOL16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOL1_TOL17  ----------------------------------
// SVD Line: 4811

//  <item> SFDITEM_FIELD__TM81_TOL1_TOL17
//    <name> TOL17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400421BC) Control of timer output level of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOL1 ) </loc>
//      <o.7..7> TOL17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TOL1  -----------------------------------
// SVD Line: 4766

//  <rtree> SFDITEM_REG__TM81_TOL1
//    <name> TOL1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421BC) Timer output level register 0 </i>
//    <loc> ( (unsigned short)((TM81_TOL1 >> 0) & 0xFFFF), ((TM81_TOL1 = (TM81_TOL1 & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL11 </item>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL12 </item>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL13 </item>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL14 </item>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL15 </item>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL16 </item>
//    <item> SFDITEM_FIELD__TM81_TOL1_TOL17 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TOM1  --------------------------------
// SVD Line: 4819

unsigned short TM81_TOM1 __AT (0x400421BE);



// -------------------------------  Field Item: TM81_TOM1_TOM11  ----------------------------------
// SVD Line: 4828

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM11
//    <name> TOM11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421BE) Control of timer output mode of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.1..1> TOM11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOM1_TOM12  ----------------------------------
// SVD Line: 4834

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM12
//    <name> TOM12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421BE) Control of timer output mode of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.2..2> TOM12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOM1_TOM13  ----------------------------------
// SVD Line: 4840

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM13
//    <name> TOM13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421BE) Control of timer output mode of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.3..3> TOM13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOM1_TOM14  ----------------------------------
// SVD Line: 4846

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM14
//    <name> TOM14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400421BE) Control of timer output mode of channel 4 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.4..4> TOM14
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOM1_TOM15  ----------------------------------
// SVD Line: 4852

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM15
//    <name> TOM15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400421BE) Control of timer output mode of channel 5 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.5..5> TOM15
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOM1_TOM16  ----------------------------------
// SVD Line: 4858

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM16
//    <name> TOM16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400421BE) Control of timer output mode of channel 6 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.6..6> TOM16
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM81_TOM1_TOM17  ----------------------------------
// SVD Line: 4864

//  <item> SFDITEM_FIELD__TM81_TOM1_TOM17
//    <name> TOM17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400421BE) Control of timer output mode of channel 7 </i>
//    <check> 
//      <loc> ( (unsigned short) TM81_TOM1 ) </loc>
//      <o.7..7> TOM17
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM81_TOM1  -----------------------------------
// SVD Line: 4819

//  <rtree> SFDITEM_REG__TM81_TOM1
//    <name> TOM1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421BE) Timer output mode register 0 </i>
//    <loc> ( (unsigned short)((TM81_TOM1 >> 0) & 0xFFFF), ((TM81_TOM1 = (TM81_TOM1 & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM11 </item>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM12 </item>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM13 </item>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM14 </item>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM15 </item>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM16 </item>
//    <item> SFDITEM_FIELD__TM81_TOM1_TOM17 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM81_TDR10  -------------------------------
// SVD Line: 4883

unsigned short TM81_TDR10 __AT (0x40042318);



// --------------------------------  Register Item: TM81_TDR10  -----------------------------------
// SVD Line: 4883

//  <item> SFDITEM_REG__TM81_TDR10
//    <name> TDR10 </name>
//    <i> [Bits 15..0] RW (@ 0x40042318) Timer data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR10 >> 0) & 0xFFFFFFFF), ((TM81_TDR10 = (TM81_TDR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR11  -------------------------------
// SVD Line: 4893

unsigned short TM81_TDR11 __AT (0x4004231A);



// --------------------------------  Register Item: TM81_TDR11  -----------------------------------
// SVD Line: 4893

//  <item> SFDITEM_REG__TM81_TDR11
//    <name> TDR11 </name>
//    <i> [Bits 15..0] RW (@ 0x4004231A) Timer data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR11 >> 0) & 0xFFFFFFFF), ((TM81_TDR11 = (TM81_TDR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM81_TDR11L  -------------------------------
// SVD Line: 4903

unsigned char TM81_TDR11L __AT (0x4004231A);



// -------------------------------  Register Item: TM81_TDR11L  -----------------------------------
// SVD Line: 4903

//  <item> SFDITEM_REG__TM81_TDR11L
//    <name> TDR11L </name>
//    <i> [Bits 7..0] RW (@ 0x4004231A) Timer data lower register 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TDR11L >> 0) & 0xFFFFFFFF), ((TM81_TDR11L = (TM81_TDR11L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM81_TDR11H  -------------------------------
// SVD Line: 4911

unsigned char TM81_TDR11H __AT (0x4004231B);



// -------------------------------  Register Item: TM81_TDR11H  -----------------------------------
// SVD Line: 4911

//  <item> SFDITEM_REG__TM81_TDR11H
//    <name> TDR11H </name>
//    <i> [Bits 7..0] RW (@ 0x4004231B) Timer data higher register 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TDR11H >> 0) & 0xFFFFFFFF), ((TM81_TDR11H = (TM81_TDR11H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR12  -------------------------------
// SVD Line: 4919

unsigned short TM81_TDR12 __AT (0x40042364);



// --------------------------------  Register Item: TM81_TDR12  -----------------------------------
// SVD Line: 4919

//  <item> SFDITEM_REG__TM81_TDR12
//    <name> TDR12 </name>
//    <i> [Bits 15..0] RW (@ 0x40042364) Timer data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR12 >> 0) & 0xFFFFFFFF), ((TM81_TDR12 = (TM81_TDR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR13  -------------------------------
// SVD Line: 4929

unsigned short TM81_TDR13 __AT (0x40042366);



// --------------------------------  Register Item: TM81_TDR13  -----------------------------------
// SVD Line: 4929

//  <item> SFDITEM_REG__TM81_TDR13
//    <name> TDR13 </name>
//    <i> [Bits 15..0] RW (@ 0x40042366) Timer data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR13 >> 0) & 0xFFFFFFFF), ((TM81_TDR13 = (TM81_TDR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM81_TDR13L  -------------------------------
// SVD Line: 4939

unsigned char TM81_TDR13L __AT (0x40042366);



// -------------------------------  Register Item: TM81_TDR13L  -----------------------------------
// SVD Line: 4939

//  <item> SFDITEM_REG__TM81_TDR13L
//    <name> TDR13L </name>
//    <i> [Bits 7..0] RW (@ 0x40042366) Timer data lower register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TDR13L >> 0) & 0xFFFFFFFF), ((TM81_TDR13L = (TM81_TDR13L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM81_TDR13H  -------------------------------
// SVD Line: 4947

unsigned char TM81_TDR13H __AT (0x40042367);



// -------------------------------  Register Item: TM81_TDR13H  -----------------------------------
// SVD Line: 4947

//  <item> SFDITEM_REG__TM81_TDR13H
//    <name> TDR13H </name>
//    <i> [Bits 7..0] RW (@ 0x40042367) Timer data higher register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM81_TDR13H >> 0) & 0xFFFFFFFF), ((TM81_TDR13H = (TM81_TDR13H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR14  -------------------------------
// SVD Line: 4955

unsigned short TM81_TDR14 __AT (0x40042368);



// --------------------------------  Register Item: TM81_TDR14  -----------------------------------
// SVD Line: 4955

//  <item> SFDITEM_REG__TM81_TDR14
//    <name> TDR14 </name>
//    <i> [Bits 15..0] RW (@ 0x40042368) Timer data register 04 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR14 >> 0) & 0xFFFFFFFF), ((TM81_TDR14 = (TM81_TDR14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR15  -------------------------------
// SVD Line: 4965

unsigned short TM81_TDR15 __AT (0x4004236A);



// --------------------------------  Register Item: TM81_TDR15  -----------------------------------
// SVD Line: 4965

//  <item> SFDITEM_REG__TM81_TDR15
//    <name> TDR15 </name>
//    <i> [Bits 15..0] RW (@ 0x4004236A) Timer data register 05 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR15 >> 0) & 0xFFFFFFFF), ((TM81_TDR15 = (TM81_TDR15 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR16  -------------------------------
// SVD Line: 4975

unsigned short TM81_TDR16 __AT (0x4004236C);



// --------------------------------  Register Item: TM81_TDR16  -----------------------------------
// SVD Line: 4975

//  <item> SFDITEM_REG__TM81_TDR16
//    <name> TDR16 </name>
//    <i> [Bits 15..0] RW (@ 0x4004236C) Timer data register 06 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR16 >> 0) & 0xFFFFFFFF), ((TM81_TDR16 = (TM81_TDR16 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM81_TDR17  -------------------------------
// SVD Line: 4985

unsigned short TM81_TDR17 __AT (0x4004236E);



// --------------------------------  Register Item: TM81_TDR17  -----------------------------------
// SVD Line: 4985

//  <item> SFDITEM_REG__TM81_TDR17
//    <name> TDR17 </name>
//    <i> [Bits 15..0] RW (@ 0x4004236E) Timer data register 07 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM81_TDR17 >> 0) & 0xFFFFFFFF), ((TM81_TDR17 = (TM81_TDR17 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TM81  -------------------------------------
// SVD Line: 3892

//  <view> TM81
//    <name> TM81 </name>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR10 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR11 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR12 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR13 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR14 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR15 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR16 </item>
//    <item> SFDITEM_REG__TM81_TCR1_TCR1_TCR17 </item>
//    <item> SFDITEM_REG__TM81_TMR10 </item>
//    <item> SFDITEM_REG__TM81_TMR11 </item>
//    <item> SFDITEM_REG__TM81_TMR12 </item>
//    <item> SFDITEM_REG__TM81_TMR13 </item>
//    <item> SFDITEM_REG__TM81_TMR14 </item>
//    <item> SFDITEM_REG__TM81_TMR15 </item>
//    <item> SFDITEM_REG__TM81_TMR16 </item>
//    <item> SFDITEM_REG__TM81_TMR17 </item>
//    <item> SFDITEM_REG__TM81_TSR10 </item>
//    <item> SFDITEM_REG__TM81_TSR11 </item>
//    <item> SFDITEM_REG__TM81_TSR12 </item>
//    <item> SFDITEM_REG__TM81_TSR13 </item>
//    <item> SFDITEM_REG__TM81_TSR14 </item>
//    <item> SFDITEM_REG__TM81_TSR15 </item>
//    <item> SFDITEM_REG__TM81_TSR16 </item>
//    <item> SFDITEM_REG__TM81_TSR17 </item>
//    <item> SFDITEM_REG__TM81_TE1 </item>
//    <item> SFDITEM_REG__TM81_TS1 </item>
//    <item> SFDITEM_REG__TM81_TT1 </item>
//    <item> SFDITEM_REG__TM81_TPS1 </item>
//    <item> SFDITEM_REG__TM81_TO1 </item>
//    <item> SFDITEM_REG__TM81_TOE1 </item>
//    <item> SFDITEM_REG__TM81_TOL1 </item>
//    <item> SFDITEM_REG__TM81_TOM1 </item>
//    <item> SFDITEM_REG__TM81_TDR10 </item>
//    <item> SFDITEM_REG__TM81_TDR11 </item>
//    <item> SFDITEM_REG__TM81_TDR11L </item>
//    <item> SFDITEM_REG__TM81_TDR11H </item>
//    <item> SFDITEM_REG__TM81_TDR12 </item>
//    <item> SFDITEM_REG__TM81_TDR13 </item>
//    <item> SFDITEM_REG__TM81_TDR13L </item>
//    <item> SFDITEM_REG__TM81_TDR13H </item>
//    <item> SFDITEM_REG__TM81_TDR14 </item>
//    <item> SFDITEM_REG__TM81_TDR15 </item>
//    <item> SFDITEM_REG__TM81_TDR16 </item>
//    <item> SFDITEM_REG__TM81_TDR17 </item>
//  </view>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSRC  ------------------------------
// SVD Line: 5014

unsigned short EPWM_EPWMSRC __AT (0x40044400);



// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC00  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC00
//    <name> SRC00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044400) Selsect the source clock of EPWM00 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.0..0> SRC00
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC01  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC01
//    <name> SRC01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044400) Selsect the source clock of EPWM01 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.1..1> SRC01
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC02  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC02
//    <name> SRC02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40044400) Selsect the source clock of EPWM02 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.2..2> SRC02
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC03  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC03
//    <name> SRC03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044400) Selsect the source clock of EPWM03 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.3..3> SRC03
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC04  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC04
//    <name> SRC04 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044400) Selsect the source clock of EPWM04 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.4..4> SRC04
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC05  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC05
//    <name> SRC05 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044400) Selsect the source clock of EPWM05 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.5..5> SRC05
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC06  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC06
//    <name> SRC06 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044400) Selsect the source clock of EPWM06 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.6..6> SRC06
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC07  ----------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC07
//    <name> SRC07 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044400) Selsect the source clock of EPWM07 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.7..7> SRC07
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSRC  ----------------------------------
// SVD Line: 5014

//  <rtree> SFDITEM_REG__EPWM_EPWMSRC
//    <name> EPWMSRC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044400) Input source select register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSRC >> 0) & 0xFFFF), ((EPWM_EPWMSRC = (EPWM_EPWMSRC & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC00 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC01 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC02 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC03 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC04 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC05 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC06 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC07 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMCTL  ------------------------------
// SVD Line: 5034

unsigned short EPWM_EPWMCTL __AT (0x40044408);



// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE00  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE00
//    <name> OE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044408) EPWM00 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.0..0> OE00
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE01  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE01
//    <name> OE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044408) EPWM01 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.1..1> OE01
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE02  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE02
//    <name> OE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40044408) EPWM02 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.2..2> OE02
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE03  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE03
//    <name> OE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044408) EPWM03 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.3..3> OE03
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE04  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE04
//    <name> OE04 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044408) EPWM04 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.4..4> OE04
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE05  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE05
//    <name> OE05 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044408) EPWM05 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.5..5> OE05
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE06  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE06
//    <name> OE06 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044408) EPWM06 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.6..6> OE06
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE07  -----------------------------
// SVD Line: 5043

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE07
//    <name> OE07 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044408) EPWM07 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.7..7> OE07
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMCTL  ----------------------------------
// SVD Line: 5034

//  <rtree> SFDITEM_REG__EPWM_EPWMCTL
//    <name> EPWMCTL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044408) EPWMO0n output control register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMCTL >> 0) & 0xFFFF), ((EPWM_EPWMCTL = (EPWM_EPWMCTL & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE00 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE01 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE02 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE03 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE04 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE05 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE06 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE07 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSTL  ------------------------------
// SVD Line: 5063

unsigned short EPWM_EPWMSTL __AT (0x4004440C);



// --------------------------  Field Item: EPWM_EPWMSTL_IO0_IO0_IO00  -----------------------------
// SVD Line: 5072

//  <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO00
//    <name> IO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004440C) EPWM00 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTL ) </loc>
//      <o.0..0> IO00
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMSTL_IO0_IO0_IO01  -----------------------------
// SVD Line: 5072

//  <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO01
//    <name> IO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004440C) EPWM00 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTL ) </loc>
//      <o.1..1> IO01
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSTL  ----------------------------------
// SVD Line: 5063

//  <rtree> SFDITEM_REG__EPWM_EPWMSTL
//    <name> EPWMSTL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004440C) EPWMO0n cutoff output level register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSTL >> 0) & 0xFFFF), ((EPWM_EPWMSTL = (EPWM_EPWMSTL & ~(0x5555UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5555) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO00 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO01 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSTC  ------------------------------
// SVD Line: 5146

unsigned short EPWM_EPWMSTC __AT (0x40044404);



// ---------------------  Field Item: EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL0  -------------------------
// SVD Line: 5155

//  <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL0
//    <name> SC_SEL0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044404) Cutoff source selection </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTC ) </loc>
//      <o.0..0> SC_SEL0
//    </check>
//  </item>
//  


// ---------------------  Field Item: EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL1  -------------------------
// SVD Line: 5155

//  <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL1
//    <name> SC_SEL1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044404) Cutoff source selection </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTC ) </loc>
//      <o.1..1> SC_SEL1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSTC  ----------------------------------
// SVD Line: 5146

//  <rtree> SFDITEM_REG__EPWM_EPWMSTC
//    <name> EPWMSTC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044404) EPWMO0n cutoff control register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSTC >> 0) & 0xFFFF), ((EPWM_EPWMSTC = (EPWM_EPWMSTC & ~(0x1DUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL0 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSTR  ------------------------------
// SVD Line: 5184

unsigned short EPWM_EPWMSTR __AT (0x40044410);



// -----------------------------  Field Item: EPWM_EPWMSTR_HZCLR  ---------------------------------
// SVD Line: 5193

//  <item> SFDITEM_FIELD__EPWM_EPWMSTR_HZCLR
//    <name> HZCLR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044410) software release cutoff register </i>
//    <check> 
//      <loc> ( (unsigned short) EPWM_EPWMSTR ) </loc>
//      <o.0..0> HZCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EPWM_EPWMSTR_SHTFLG  --------------------------------
// SVD Line: 5199

//  <item> SFDITEM_FIELD__EPWM_EPWMSTR_SHTFLG
//    <name> SHTFLG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044410) cutoff status register </i>
//    <check> 
//      <loc> ( (unsigned short) EPWM_EPWMSTR ) </loc>
//      <o.1..1> SHTFLG
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSTR  ----------------------------------
// SVD Line: 5184

//  <rtree> SFDITEM_REG__EPWM_EPWMSTR
//    <name> EPWMSTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044410) Status register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSTR >> 0) & 0xFFFF), ((EPWM_EPWMSTR = (EPWM_EPWMSTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTR_HZCLR </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTR_SHTFLG </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: EPWM  -------------------------------------
// SVD Line: 4998

//  <view> EPWM
//    <name> EPWM </name>
//    <item> SFDITEM_REG__EPWM_EPWMSRC </item>
//    <item> SFDITEM_REG__EPWM_EPWMCTL </item>
//    <item> SFDITEM_REG__EPWM_EPWMSTL </item>
//    <item> SFDITEM_REG__EPWM_EPWMSTC </item>
//    <item> SFDITEM_REG__EPWM_EPWMSTR </item>
//  </view>
//  


// ----------------------------  Register Item Address: RTC_SUBCUD  -------------------------------
// SVD Line: 5240

unsigned short RTC_SUBCUD __AT (0x40044F34);



// --------------------------------  Field Item: RTC_SUBCUD_F  ------------------------------------
// SVD Line: 5249

//  <item> SFDITEM_FIELD__RTC_SUBCUD_F
//    <name> F </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40044F34) watch error correction value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_SUBCUD >> 0) & 0x1FFF), ((RTC_SUBCUD = (RTC_SUBCUD & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_SUBCUD_DEV  -----------------------------------
// SVD Line: 5255

//  <item> SFDITEM_FIELD__RTC_SUBCUD_DEV
//    <name> DEV </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40044F34) watch error correction timing </i>
//    <check> 
//      <loc> ( (unsigned short) RTC_SUBCUD ) </loc>
//      <o.15..15> DEV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RTC_SUBCUD  -----------------------------------
// SVD Line: 5240

//  <rtree> SFDITEM_REG__RTC_SUBCUD
//    <name> SUBCUD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044F34) Watch error correction register </i>
//    <loc> ( (unsigned short)((RTC_SUBCUD >> 0) & 0xFFFF), ((RTC_SUBCUD = (RTC_SUBCUD & ~(0x9FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x9FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SUBCUD_F </item>
//    <item> SFDITEM_FIELD__RTC_SUBCUD_DEV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_ITMC  --------------------------------
// SVD Line: 5263

unsigned short RTC_ITMC __AT (0x40044F50);



// -------------------------------  Field Item: RTC_ITMC_ITCMP  -----------------------------------
// SVD Line: 5272

//  <item> SFDITEM_FIELD__RTC_ITMC_ITCMP
//    <name> ITCMP </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40044F50) 15-bit interval timer compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ITMC >> 0) & 0x7FFF), ((RTC_ITMC = (RTC_ITMC & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ITMC_RINTE  -----------------------------------
// SVD Line: 5278

//  <item> SFDITEM_FIELD__RTC_ITMC_RINTE
//    <name> RINTE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40044F50) 15-bit interval timer operation control </i>
//    <check> 
//      <loc> ( (unsigned short) RTC_ITMC ) </loc>
//      <o.15..15> RINTE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_ITMC  ------------------------------------
// SVD Line: 5263

//  <rtree> SFDITEM_REG__RTC_ITMC
//    <name> ITMC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044F50) 15-bit interval timer control register </i>
//    <loc> ( (unsigned short)((RTC_ITMC >> 0) & 0xFFFF), ((RTC_ITMC = (RTC_ITMC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ITMC_ITCMP </item>
//    <item> SFDITEM_FIELD__RTC_ITMC_RINTE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SEC  ---------------------------------
// SVD Line: 5286

unsigned char RTC_SEC __AT (0x40044F52);



// ---------------------------------  Register Item: RTC_SEC  -------------------------------------
// SVD Line: 5286

//  <item> SFDITEM_REG__RTC_SEC
//    <name> SEC </name>
//    <i> [Bits 7..0] RW (@ 0x40044F52) Second count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_SEC >> 0) & 0xFFFFFFFF), ((RTC_SEC = (RTC_SEC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_MIN  ---------------------------------
// SVD Line: 5295

unsigned char RTC_MIN __AT (0x40044F53);



// ---------------------------------  Register Item: RTC_MIN  -------------------------------------
// SVD Line: 5295

//  <item> SFDITEM_REG__RTC_MIN
//    <name> MIN </name>
//    <i> [Bits 7..0] RW (@ 0x40044F53) Minute count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_MIN >> 0) & 0xFFFFFFFF), ((RTC_MIN = (RTC_MIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_HOUR  --------------------------------
// SVD Line: 5304

unsigned char RTC_HOUR __AT (0x40044F54);



// ---------------------------------  Register Item: RTC_HOUR  ------------------------------------
// SVD Line: 5304

//  <item> SFDITEM_REG__RTC_HOUR
//    <name> HOUR </name>
//    <i> [Bits 7..0] RW (@ 0x40044F54) Hour count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HOUR >> 0) & 0xFFFFFFFF), ((RTC_HOUR = (RTC_HOUR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_WEEK  --------------------------------
// SVD Line: 5313

unsigned char RTC_WEEK __AT (0x40044F55);



// ---------------------------------  Register Item: RTC_WEEK  ------------------------------------
// SVD Line: 5313

//  <item> SFDITEM_REG__RTC_WEEK
//    <name> WEEK </name>
//    <i> [Bits 7..0] RW (@ 0x40044F55) Week count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_WEEK >> 0) & 0xFFFFFFFF), ((RTC_WEEK = (RTC_WEEK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_DAY  ---------------------------------
// SVD Line: 5322

unsigned char RTC_DAY __AT (0x40044F56);



// ---------------------------------  Register Item: RTC_DAY  -------------------------------------
// SVD Line: 5322

//  <item> SFDITEM_REG__RTC_DAY
//    <name> DAY </name>
//    <i> [Bits 7..0] RW (@ 0x40044F56) Day count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DAY >> 0) & 0xFFFFFFFF), ((RTC_DAY = (RTC_DAY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: RTC_MONTH  --------------------------------
// SVD Line: 5331

unsigned char RTC_MONTH __AT (0x40044F57);



// --------------------------------  Register Item: RTC_MONTH  ------------------------------------
// SVD Line: 5331

//  <item> SFDITEM_REG__RTC_MONTH
//    <name> MONTH </name>
//    <i> [Bits 7..0] RW (@ 0x40044F57) Month count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_MONTH >> 0) & 0xFFFFFFFF), ((RTC_MONTH = (RTC_MONTH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_YEAR  --------------------------------
// SVD Line: 5340

unsigned char RTC_YEAR __AT (0x40044F58);



// ---------------------------------  Register Item: RTC_YEAR  ------------------------------------
// SVD Line: 5340

//  <item> SFDITEM_REG__RTC_YEAR
//    <name> YEAR </name>
//    <i> [Bits 7..0] RW (@ 0x40044F58) Year count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_YEAR >> 0) & 0xFFFFFFFF), ((RTC_YEAR = (RTC_YEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWM  -------------------------------
// SVD Line: 5349

unsigned char RTC_ALARMWM __AT (0x40044F5A);



// -------------------------------  Register Item: RTC_ALARMWM  -----------------------------------
// SVD Line: 5349

//  <item> SFDITEM_REG__RTC_ALARMWM
//    <name> ALARMWM </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5A) Alarm minute register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWM >> 0) & 0xFFFFFFFF), ((RTC_ALARMWM = (RTC_ALARMWM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWH  -------------------------------
// SVD Line: 5358

unsigned char RTC_ALARMWH __AT (0x40044F5B);



// -------------------------------  Register Item: RTC_ALARMWH  -----------------------------------
// SVD Line: 5358

//  <item> SFDITEM_REG__RTC_ALARMWH
//    <name> ALARMWH </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5B) Alarm hour register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWH >> 0) & 0xFFFFFFFF), ((RTC_ALARMWH = (RTC_ALARMWH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWW  -------------------------------
// SVD Line: 5367

unsigned char RTC_ALARMWW __AT (0x40044F5C);



// -------------------------------  Register Item: RTC_ALARMWW  -----------------------------------
// SVD Line: 5367

//  <item> SFDITEM_REG__RTC_ALARMWW
//    <name> ALARMWW </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5C) Alarm week register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWW >> 0) & 0xFFFFFFFF), ((RTC_ALARMWW = (RTC_ALARMWW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: RTC_RTCC0  --------------------------------
// SVD Line: 5376

unsigned char RTC_RTCC0 __AT (0x40044F5D);



// --------------------------------  Field Item: RTC_RTCC0_CT  ------------------------------------
// SVD Line: 5385

//  <item> SFDITEM_FIELD__RTC_RTCC0_CT
//    <name> CT </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40044F5D) Constant-period interrupt (INTRTC) selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_RTCC0 >> 0) & 0x7), ((RTC_RTCC0 = (RTC_RTCC0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_AMPM  -----------------------------------
// SVD Line: 5391

//  <item> SFDITEM_FIELD__RTC_RTCC0_AMPM
//    <name> AMPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044F5D) Selection of 12-/24-hour system </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.3..3> AMPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_RCLOE  ----------------------------------
// SVD Line: 5397

//  <item> SFDITEM_FIELD__RTC_RTCC0_RCLOE
//    <name> RCLOE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044F5D) RTC1HZ pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.5..5> RCLOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_RTCE  -----------------------------------
// SVD Line: 5403

//  <item> SFDITEM_FIELD__RTC_RTCC0_RTCE
//    <name> RTCE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044F5D) Real-time clock operation control </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.7..7> RTCE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCC0  -----------------------------------
// SVD Line: 5376

//  <rtree> SFDITEM_REG__RTC_RTCC0
//    <name> RTCC0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044F5D) Real-time clock control register 0 </i>
//    <loc> ( (unsigned char)((RTC_RTCC0 >> 0) & 0xFF), ((RTC_RTCC0 = (RTC_RTCC0 & ~(0xAFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xAF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCC0_CT </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_AMPM </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_RCLOE </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_RTCE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_RTCC1  --------------------------------
// SVD Line: 5411

unsigned char RTC_RTCC1 __AT (0x40044F5E);



// -------------------------------  Field Item: RTC_RTCC1_RWAIT  ----------------------------------
// SVD Line: 5420

//  <item> SFDITEM_FIELD__RTC_RTCC1_RWAIT
//    <name> RWAIT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044F5E) Wait control of real-time clock </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.0..0> RWAIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_RWST  -----------------------------------
// SVD Line: 5426

//  <item> SFDITEM_FIELD__RTC_RTCC1_RWST
//    <name> RWST </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044F5E) Wait status flag of real-time clock </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.1..1> RWST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_RIFG  -----------------------------------
// SVD Line: 5432

//  <item> SFDITEM_FIELD__RTC_RTCC1_RIFG
//    <name> RIFG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044F5E) Constant-period interrupt status flag </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.3..3> RIFG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WAFG  -----------------------------------
// SVD Line: 5438

//  <item> SFDITEM_FIELD__RTC_RTCC1_WAFG
//    <name> WAFG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044F5E) Alarm detection status flag </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.4..4> WAFG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WALIE  ----------------------------------
// SVD Line: 5444

//  <item> SFDITEM_FIELD__RTC_RTCC1_WALIE
//    <name> WALIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044F5E) Control of alarm interrupt (INTRTC) function operation </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.6..6> WALIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WALE  -----------------------------------
// SVD Line: 5450

//  <item> SFDITEM_FIELD__RTC_RTCC1_WALE
//    <name> WALE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044F5E) Alarm operation control </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.7..7> WALE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCC1  -----------------------------------
// SVD Line: 5411

//  <rtree> SFDITEM_REG__RTC_RTCC1
//    <name> RTCC1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044F5E) Real-time clock control register 1 </i>
//    <loc> ( (unsigned char)((RTC_RTCC1 >> 0) & 0xFF), ((RTC_RTCC1 = (RTC_RTCC1 & ~(0xDBUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xDB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RWAIT </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RWST </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RIFG </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WAFG </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WALIE </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WALE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTC  --------------------------------------
// SVD Line: 5210

//  <view> RTC
//    <name> RTC </name>
//    <item> SFDITEM_REG__RTC_SUBCUD </item>
//    <item> SFDITEM_REG__RTC_ITMC </item>
//    <item> SFDITEM_REG__RTC_SEC </item>
//    <item> SFDITEM_REG__RTC_MIN </item>
//    <item> SFDITEM_REG__RTC_HOUR </item>
//    <item> SFDITEM_REG__RTC_WEEK </item>
//    <item> SFDITEM_REG__RTC_DAY </item>
//    <item> SFDITEM_REG__RTC_MONTH </item>
//    <item> SFDITEM_REG__RTC_YEAR </item>
//    <item> SFDITEM_REG__RTC_ALARMWM </item>
//    <item> SFDITEM_REG__RTC_ALARMWH </item>
//    <item> SFDITEM_REG__RTC_ALARMWW </item>
//    <item> SFDITEM_REG__RTC_RTCC0 </item>
//    <item> SFDITEM_REG__RTC_RTCC1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: PCBZ_CKS0  --------------------------------
// SVD Line: 5477

unsigned char PCBZ_CKS0 __AT (0x40040FA5);



// --------------------------------  Field Item: PCBZ_CKS0_CCS  -----------------------------------
// SVD Line: 5486

//  <item> SFDITEM_FIELD__PCBZ_CKS0_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40040FA5) PCLBUZn output clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCBZ_CKS0 >> 0) & 0x7), ((PCBZ_CKS0 = (PCBZ_CKS0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS0_CSEL  -----------------------------------
// SVD Line: 5492

//  <item> SFDITEM_FIELD__PCBZ_CKS0_CSEL
//    <name> CSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040FA5) PCLBUZn output clock select </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS0 ) </loc>
//      <o.3..3> CSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS0_PCLOE  ----------------------------------
// SVD Line: 5498

//  <item> SFDITEM_FIELD__PCBZ_CKS0_PCLOE
//    <name> PCLOE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040FA5) PCLBUZn pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS0 ) </loc>
//      <o.7..7> PCLOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCBZ_CKS0  -----------------------------------
// SVD Line: 5477

//  <rtree> SFDITEM_REG__PCBZ_CKS0
//    <name> CKS0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040FA5) Clock output select registers 0 </i>
//    <loc> ( (unsigned char)((PCBZ_CKS0 >> 0) & 0xFF), ((PCBZ_CKS0 = (PCBZ_CKS0 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_CCS </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_CSEL </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_PCLOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCBZ_CKS1  --------------------------------
// SVD Line: 5506

unsigned char PCBZ_CKS1 __AT (0x40040FA6);



// --------------------------------  Field Item: PCBZ_CKS1_CCS  -----------------------------------
// SVD Line: 5486

//  <item> SFDITEM_FIELD__PCBZ_CKS1_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40040FA6) PCLBUZn output clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCBZ_CKS1 >> 0) & 0x7), ((PCBZ_CKS1 = (PCBZ_CKS1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS1_CSEL  -----------------------------------
// SVD Line: 5492

//  <item> SFDITEM_FIELD__PCBZ_CKS1_CSEL
//    <name> CSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040FA6) PCLBUZn output clock select </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS1 ) </loc>
//      <o.3..3> CSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS1_PCLOE  ----------------------------------
// SVD Line: 5498

//  <item> SFDITEM_FIELD__PCBZ_CKS1_PCLOE
//    <name> PCLOE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040FA6) PCLBUZn pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS1 ) </loc>
//      <o.7..7> PCLOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCBZ_CKS1  -----------------------------------
// SVD Line: 5506

//  <rtree> SFDITEM_REG__PCBZ_CKS1
//    <name> CKS1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040FA6) Clock output select registers 1 </i>
//    <loc> ( (unsigned char)((PCBZ_CKS1 >> 0) & 0xFF), ((PCBZ_CKS1 = (PCBZ_CKS1 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_CCS </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_CSEL </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_PCLOE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PCBZ  -------------------------------------
// SVD Line: 5461

//  <view> PCBZ
//    <name> PCBZ </name>
//    <item> SFDITEM_REG__PCBZ_CKS0 </item>
//    <item> SFDITEM_REG__PCBZ_CKS1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: WDT_LOCKCTL  -------------------------------
// SVD Line: 5532

unsigned char WDT_LOCKCTL __AT (0x40020405);



// -------------------------------  Register Item: WDT_LOCKCTL  -----------------------------------
// SVD Line: 5532

//  <item> SFDITEM_REG__WDT_LOCKCTL
//    <name> LOCKCTL </name>
//    <i> [Bits 7..0] RW (@ 0x40020405) Lockup Watchdog timer enable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_LOCKCTL >> 0) & 0xFFFFFFFF), ((WDT_LOCKCTL = (WDT_LOCKCTL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: WDT_PRCR  --------------------------------
// SVD Line: 5539

unsigned char WDT_PRCR __AT (0x40020406);



// ---------------------------------  Register Item: WDT_PRCR  ------------------------------------
// SVD Line: 5539

//  <item> SFDITEM_REG__WDT_PRCR
//    <name> PRCR </name>
//    <i> [Bits 7..0] RW (@ 0x40020406) Lockup Watchdog timer enable protect register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_PRCR >> 0) & 0xFFFFFFFF), ((WDT_PRCR = (WDT_PRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: WDT_WDTE  --------------------------------
// SVD Line: 5546

unsigned char WDT_WDTE __AT (0x40021001);



// ---------------------------------  Register Item: WDT_WDTE  ------------------------------------
// SVD Line: 5546

//  <item> SFDITEM_REG__WDT_WDTE
//    <name> WDTE </name>
//    <i> [Bits 7..0] RW (@ 0x40021001) Watchdog timer enable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_WDTE >> 0) & 0xFFFFFFFF), ((WDT_WDTE = (WDT_WDTE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: WDT  --------------------------------------
// SVD Line: 5515

//  <view> WDT
//    <name> WDT </name>
//    <item> SFDITEM_REG__WDT_LOCKCTL </item>
//    <item> SFDITEM_REG__WDT_PRCR </item>
//    <item> SFDITEM_REG__WDT_WDTE </item>
//  </view>
//  


// -----------------------------  Register Item Address: ADC_ADM0  --------------------------------
// SVD Line: 5578

unsigned char ADC_ADM0 __AT (0x40045000);



// --------------------------------  Field Item: ADC_ADM0_ADCE  -----------------------------------
// SVD Line: 5587

//  <item> SFDITEM_FIELD__ADC_ADM0_ADCE
//    <name> ADCE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045000) A/D enable </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM0 ) </loc>
//      <o.0..0> ADCE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ADC_ADM0_FR  ------------------------------------
// SVD Line: 5593

//  <item> SFDITEM_FIELD__ADC_ADM0_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40045000) A/D conversion clock (fAD) select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADM0 >> 3) & 0x7), ((ADC_ADM0 = (ADC_ADM0 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ADM0_ADCS  -----------------------------------
// SVD Line: 5599

//  <item> SFDITEM_FIELD__ADC_ADM0_ADCS
//    <name> ADCS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045000) A/D conversion operation control </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM0 ) </loc>
//      <o.7..7> ADCS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM0  ------------------------------------
// SVD Line: 5578

//  <rtree> SFDITEM_REG__ADC_ADM0
//    <name> ADM0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045000) A/D mode register 0 </i>
//    <loc> ( (unsigned char)((ADC_ADM0 >> 0) & 0xFF), ((ADC_ADM0 = (ADC_ADM0 & ~(0xB9UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xB9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM0_ADCE </item>
//    <item> SFDITEM_FIELD__ADC_ADM0_FR </item>
//    <item> SFDITEM_FIELD__ADC_ADM0_ADCS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADM1  --------------------------------
// SVD Line: 5607

unsigned char ADC_ADM1 __AT (0x40045002);



// -------------------------------  Field Item: ADC_ADM1_ADMODE  ----------------------------------
// SVD Line: 5616

//  <item> SFDITEM_FIELD__ADC_ADM1_ADMODE
//    <name> ADMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40045002) A/D mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADM1 >> 0) & 0x3), ((ADC_ADM1 = (ADC_ADM1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM1_ADSCM  -----------------------------------
// SVD Line: 5622

//  <item> SFDITEM_FIELD__ADC_ADM1_ADSCM
//    <name> ADSCM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045002) \nA/D conversion mode\n0 : Sequential = Sequential conversion mode\n1 : OneShot = One-shot conversion mode </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM1 ) </loc>
//      <o.3..3> ADSCM
//        <0=> 0: Sequential = Sequential conversion mode
//        <1=> 1: OneShot = One-shot conversion mode
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_ADM1_ADMD  -----------------------------------
// SVD Line: 5641

//  <item> SFDITEM_FIELD__ADC_ADM1_ADMD
//    <name> ADMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045002) \nA/D conversion channel select mode\n0 : Select = Select mode\n1 : Scan = Scan mode </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM1 ) </loc>
//      <o.7..7> ADMD
//        <0=> 0: Select = Select mode
//        <1=> 1: Scan = Scan mode
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM1  ------------------------------------
// SVD Line: 5607

//  <rtree> SFDITEM_REG__ADC_ADM1
//    <name> ADM1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045002) A/D mode register 1 </i>
//    <loc> ( (unsigned char)((ADC_ADM1 >> 0) & 0xFF), ((ADC_ADM1 = (ADC_ADM1 & ~(0x8BUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADMODE </item>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADSCM </item>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADMD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADM2  --------------------------------
// SVD Line: 5661

unsigned char ADC_ADM2 __AT (0x40045004);



// -------------------------------  Field Item: ADC_ADM2_CHRDE  -----------------------------------
// SVD Line: 5670

//  <item> SFDITEM_FIELD__ADC_ADM2_CHRDE
//    <name> CHRDE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045004) output CH number in A/D conversion result in Scan mode </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.1..1> CHRDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADRCK  -----------------------------------
// SVD Line: 5676

//  <item> SFDITEM_FIELD__ADC_ADM2_ADRCK
//    <name> ADRCK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045004) the upper limit and lower limit conversion result values </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.3..3> ADRCK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADREFM  ----------------------------------
// SVD Line: 5682

//  <item> SFDITEM_FIELD__ADC_ADM2_ADREFM
//    <name> ADREFM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40045004) \nSelection of the - side reference voltage of A/D converter\n0 : VSS = Supplied from VSS\n1 : AVREFM = Supplied from AVREFM </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.5..5> ADREFM
//        <0=> 0: VSS = Supplied from VSS
//        <1=> 1: AVREFM = Supplied from AVREFM
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADREFP  ----------------------------------
// SVD Line: 5700

//  <item> SFDITEM_FIELD__ADC_ADM2_ADREFP
//    <name> ADREFP </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40045004) \nSelection of the + side reference voltage of A/D converter\n0 : VDD = Supplied from VDD\n1 : AVREFP0 = Supplied from AVREFP\n2 : AVREFP1 = Supplied from inside AVREF of A/D\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.7..6> ADREFP
//        <0=> 0: VDD = Supplied from VDD
//        <1=> 1: AVREFP0 = Supplied from AVREFP
//        <2=> 2: AVREFP1 = Supplied from inside AVREF of A/D
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM2  ------------------------------------
// SVD Line: 5661

//  <rtree> SFDITEM_REG__ADC_ADM2
//    <name> ADM2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045004) A/D mode register 2 </i>
//    <loc> ( (unsigned char)((ADC_ADM2 >> 0) & 0xFF), ((ADC_ADM2 = (ADC_ADM2 & ~(0xEAUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xEA) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM2_CHRDE </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADRCK </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADREFM </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADREFP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_ADTRG  --------------------------------
// SVD Line: 5725

unsigned char ADC_ADTRG __AT (0x40045006);



// -------------------------------  Field Item: ADC_ADTRG_ADTRS  ----------------------------------
// SVD Line: 5734

//  <item> SFDITEM_FIELD__ADC_ADTRG_ADTRS
//    <name> ADTRS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40045006) A/D hard trigger select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTRG >> 0) & 0x3), ((ADC_ADTRG = (ADC_ADTRG & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADTRG_ADTMD  ----------------------------------
// SVD Line: 5740

//  <item> SFDITEM_FIELD__ADC_ADTRG_ADTMD
//    <name> ADTMD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40045006) A/D conversion trigger mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTRG >> 6) & 0x3), ((ADC_ADTRG = (ADC_ADTRG & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADTRG  -----------------------------------
// SVD Line: 5725

//  <rtree> SFDITEM_REG__ADC_ADTRG
//    <name> ADTRG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045006) A/D mode register 2 </i>
//    <loc> ( (unsigned char)((ADC_ADTRG >> 0) & 0xFF), ((ADC_ADTRG = (ADC_ADTRG & ~(0xC3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADTRG_ADTRS </item>
//    <item> SFDITEM_FIELD__ADC_ADTRG_ADTMD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADS  ---------------------------------
// SVD Line: 5748

unsigned char ADC_ADS __AT (0x40045008);



// ---------------------------------  Register Item: ADC_ADS  -------------------------------------
// SVD Line: 5748

//  <item> SFDITEM_REG__ADC_ADS
//    <name> ADS </name>
//    <i> [Bits 7..0] RW (@ 0x40045008) Analog input channel specification register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADS >> 0) & 0xFFFFFFFF), ((ADC_ADS = (ADC_ADS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADCR  --------------------------------
// SVD Line: 5757

unsigned short ADC_ADCR __AT (0x4004500E);



// ---------------------------------  Register Item: ADC_ADCR  ------------------------------------
// SVD Line: 5757

//  <item> SFDITEM_REG__ADC_ADCR
//    <name> ADCR </name>
//    <i> [Bits 15..0] RW (@ 0x4004500E) 12-bit A/D conversion result register </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADCR >> 0) & 0xFFFFFFFF), ((ADC_ADCR = (ADC_ADCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADCRH  --------------------------------
// SVD Line: 5766

unsigned char ADC_ADCRH __AT (0x4004500F);



// --------------------------------  Register Item: ADC_ADCRH  ------------------------------------
// SVD Line: 5766

//  <item> SFDITEM_REG__ADC_ADCRH
//    <name> ADCRH </name>
//    <i> [Bits 7..0] RW (@ 0x4004500F) Higher 8-bit A/D conversion result register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADCRH >> 0) & 0xFFFFFFFF), ((ADC_ADCRH = (ADC_ADCRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADUL  --------------------------------
// SVD Line: 5774

unsigned char ADC_ADUL __AT (0x4004500B);



// ---------------------------------  Register Item: ADC_ADUL  ------------------------------------
// SVD Line: 5774

//  <item> SFDITEM_REG__ADC_ADUL
//    <name> ADUL </name>
//    <i> [Bits 7..0] RW (@ 0x4004500B) Conversion result comparison upper limit setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADUL >> 0) & 0xFFFFFFFF), ((ADC_ADUL = (ADC_ADUL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADLL  --------------------------------
// SVD Line: 5783

unsigned char ADC_ADLL __AT (0x4004500A);



// ---------------------------------  Register Item: ADC_ADLL  ------------------------------------
// SVD Line: 5783

//  <item> SFDITEM_REG__ADC_ADLL
//    <name> ADLL </name>
//    <i> [Bits 7..0] RW (@ 0x4004500A) Conversion result comparison lower limit setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADLL >> 0) & 0xFFFFFFFF), ((ADC_ADLL = (ADC_ADLL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADTES  --------------------------------
// SVD Line: 5792

unsigned char ADC_ADTES __AT (0x40045010);



// --------------------------------  Register Item: ADC_ADTES  ------------------------------------
// SVD Line: 5792

//  <item> SFDITEM_REG__ADC_ADTES
//    <name> ADTES </name>
//    <i> [Bits 7..0] RW (@ 0x40045010) A/D test register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTES >> 0) & 0xFFFFFFFF), ((ADC_ADTES = (ADC_ADTES & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADFLG  --------------------------------
// SVD Line: 5801

unsigned char ADC_ADFLG __AT (0x40045016);



// --------------------------------  Register Item: ADC_ADFLG  ------------------------------------
// SVD Line: 5801

//  <item> SFDITEM_REG__ADC_ADFLG
//    <name> ADFLG </name>
//    <i> [Bits 7..0] RW (@ 0x40045016) A/D flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADFLG >> 0) & 0xFFFFFFFF), ((ADC_ADFLG = (ADC_ADFLG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADNSMP  -------------------------------
// SVD Line: 5810

unsigned char ADC_ADNSMP __AT (0x4004500C);



// --------------------------------  Register Item: ADC_ADNSMP  -----------------------------------
// SVD Line: 5810

//  <item> SFDITEM_REG__ADC_ADNSMP
//    <name> ADNSMP </name>
//    <i> [Bits 7..0] RW (@ 0x4004500C) A/D sampling time control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADNSMP >> 0) & 0xFFFFFFFF), ((ADC_ADNSMP = (ADC_ADNSMP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: ADC_ADSMPWAIT  ------------------------------
// SVD Line: 5819

unsigned char ADC_ADSMPWAIT __AT (0x40045015);



// ------------------------------  Register Item: ADC_ADSMPWAIT  ----------------------------------
// SVD Line: 5819

//  <item> SFDITEM_REG__ADC_ADSMPWAIT
//    <name> ADSMPWAIT </name>
//    <i> [Bits 7..0] RW (@ 0x40045015) A/D sampling wait control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADSMPWAIT >> 0) & 0xFFFFFFFF), ((ADC_ADSMPWAIT = (ADC_ADSMPWAIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADNDIS  -------------------------------
// SVD Line: 5828

unsigned char ADC_ADNDIS __AT (0x40045011);



// --------------------------------  Register Item: ADC_ADNDIS  -----------------------------------
// SVD Line: 5828

//  <item> SFDITEM_REG__ADC_ADNDIS
//    <name> ADNDIS </name>
//    <i> [Bits 7..0] RW (@ 0x40045011) A/D charge/discharge control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADNDIS >> 0) & 0xFFFFFFFF), ((ADC_ADNDIS = (ADC_ADNDIS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_PGA0SH  -------------------------------
// SVD Line: 5837

unsigned short ADC_PGA0SH __AT (0x4004501E);



// ------------------------------  Field Item: ADC_PGA0SH_PGA0SH  ---------------------------------
// SVD Line: 5846

//  <item> SFDITEM_FIELD__ADC_PGA0SH_PGA0SH
//    <name> PGA0SH </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x4004501E) Sample and hold time selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_PGA0SH >> 0) & 0x3FF), ((ADC_PGA0SH = (ADC_PGA0SH & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC_PGA0SH_PGA0SHEN  --------------------------------
// SVD Line: 5852

//  <item> SFDITEM_FIELD__ADC_PGA0SH_PGA0SHEN
//    <name> PGA0SHEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004501E) Sample and hold function enable control </i>
//    <check> 
//      <loc> ( (unsigned short) ADC_PGA0SH ) </loc>
//      <o.15..15> PGA0SHEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: ADC_PGA0SH  -----------------------------------
// SVD Line: 5837

//  <rtree> SFDITEM_REG__ADC_PGA0SH
//    <name> PGA0SH </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004501E) PGA 0 sample and hold function register </i>
//    <loc> ( (unsigned short)((ADC_PGA0SH >> 0) & 0xFFFF), ((ADC_PGA0SH = (ADC_PGA0SH & ~(0x83FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x83FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_PGA0SH_PGA0SH </item>
//    <item> SFDITEM_FIELD__ADC_PGA0SH_PGA0SHEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: ADC  --------------------------------------
// SVD Line: 5556

//  <view> ADC
//    <name> ADC </name>
//    <item> SFDITEM_REG__ADC_ADM0 </item>
//    <item> SFDITEM_REG__ADC_ADM1 </item>
//    <item> SFDITEM_REG__ADC_ADM2 </item>
//    <item> SFDITEM_REG__ADC_ADTRG </item>
//    <item> SFDITEM_REG__ADC_ADS </item>
//    <item> SFDITEM_REG__ADC_ADCR </item>
//    <item> SFDITEM_REG__ADC_ADCRH </item>
//    <item> SFDITEM_REG__ADC_ADUL </item>
//    <item> SFDITEM_REG__ADC_ADLL </item>
//    <item> SFDITEM_REG__ADC_ADTES </item>
//    <item> SFDITEM_REG__ADC_ADFLG </item>
//    <item> SFDITEM_REG__ADC_ADNSMP </item>
//    <item> SFDITEM_REG__ADC_ADSMPWAIT </item>
//    <item> SFDITEM_REG__ADC_ADNDIS </item>
//    <item> SFDITEM_REG__ADC_PGA0SH </item>
//  </view>
//  


// ---------------------------  Register Item Address: CMP_COMPMDR  -------------------------------
// SVD Line: 5891

unsigned char CMP_COMPMDR __AT (0x40043840);



// ------------------------------  Field Item: CMP_COMPMDR_C0ENB  ---------------------------------
// SVD Line: 5899

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C0ENB
//    <name> C0ENB </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043840) Comparator 0 operation 1enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.0..0> C0ENB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPMDR_C0MON  ---------------------------------
// SVD Line: 5905

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C0MON
//    <name> C0MON </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043840) Comparator 0 monitor flag </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.3..3> C0MON
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPMDR_C1ENB  ---------------------------------
// SVD Line: 5911

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C1ENB
//    <name> C1ENB </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043840) Comparator 1 operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.4..4> C1ENB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPMDR_C1MON  ---------------------------------
// SVD Line: 5917

//  <item> SFDITEM_FIELD__CMP_COMPMDR_C1MON
//    <name> C1MON </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043840) Comparator 1 monitor flag </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPMDR ) </loc>
//      <o.7..7> C1MON
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_COMPMDR  ----------------------------------
// SVD Line: 5891

//  <rtree> SFDITEM_REG__CMP_COMPMDR
//    <name> COMPMDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043840) Comparator mode setting register </i>
//    <loc> ( (unsigned char)((CMP_COMPMDR >> 0) & 0xFF), ((CMP_COMPMDR = (CMP_COMPMDR & ~(0x99UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x99) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C0ENB </item>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C0MON </item>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C1ENB </item>
//    <item> SFDITEM_FIELD__CMP_COMPMDR_C1MON </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMP_COMPFIR  -------------------------------
// SVD Line: 5925

unsigned char CMP_COMPFIR __AT (0x40043841);



// ------------------------------  Field Item: CMP_COMPFIR_C0FCK  ---------------------------------
// SVD Line: 5933

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C0FCK
//    <name> C0FCK </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40043841) Comparator 0 filter selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_COMPFIR >> 0) & 0x3), ((CMP_COMPFIR = (CMP_COMPFIR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C0EPO  ---------------------------------
// SVD Line: 5939

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C0EPO
//    <name> C0EPO </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40043841) Comparator 0 edge polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.2..2> C0EPO
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C0EDG  ---------------------------------
// SVD Line: 5945

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C0EDG
//    <name> C0EDG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043841) Comparator 0 edge detection selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.3..3> C0EDG
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C1FCK  ---------------------------------
// SVD Line: 5951

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C1FCK
//    <name> C1FCK </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40043841) Comparator 1 filter selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_COMPFIR >> 4) & 0x3), ((CMP_COMPFIR = (CMP_COMPFIR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C1EPO  ---------------------------------
// SVD Line: 5957

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C1EPO
//    <name> C1EPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40043841) Comparator 1 edge polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.6..6> C1EPO
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPFIR_C1EDG  ---------------------------------
// SVD Line: 5963

//  <item> SFDITEM_FIELD__CMP_COMPFIR_C1EDG
//    <name> C1EDG </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043841) Comparator 1 edge detection selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPFIR ) </loc>
//      <o.7..7> C1EDG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_COMPFIR  ----------------------------------
// SVD Line: 5925

//  <rtree> SFDITEM_REG__CMP_COMPFIR
//    <name> COMPFIR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043841) Comparator filter control register </i>
//    <loc> ( (unsigned char)((CMP_COMPFIR >> 0) & 0xFF), ((CMP_COMPFIR = (CMP_COMPFIR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C0FCK </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C0EPO </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C0EDG </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C1FCK </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C1EPO </item>
//    <item> SFDITEM_FIELD__CMP_COMPFIR_C1EDG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMP_COMPOCR  -------------------------------
// SVD Line: 5971

unsigned char CMP_COMPOCR __AT (0x40043842);



// ------------------------------  Field Item: CMP_COMPOCR_C0IE  ----------------------------------
// SVD Line: 5979

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C0IE
//    <name> C0IE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043842) Comparator 0 interrupt request enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.0..0> C0IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C0OE  ----------------------------------
// SVD Line: 5985

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C0OE
//    <name> C0OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40043842) VOUT0 pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.1..1> C0OE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C0OP  ----------------------------------
// SVD Line: 5991

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C0OP
//    <name> C0OP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40043842) VOUT0 output polarity selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.2..2> C0OP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C1IE  ----------------------------------
// SVD Line: 5997

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1IE
//    <name> C1IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043842) Comparator 1 interrupt request enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.4..4> C1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C1OE  ----------------------------------
// SVD Line: 6003

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1OE
//    <name> C1OE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40043842) VOUT1 pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.5..5> C1OE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_COMPOCR_C1OP  ----------------------------------
// SVD Line: 6009

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1OP
//    <name> C1OP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40043842) VOUT1 output polarity selection </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.6..6> C1OP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMP_COMPOCR_C1OTWMD  --------------------------------
// SVD Line: 6015

//  <item> SFDITEM_FIELD__CMP_COMPOCR_C1OTWMD
//    <name> C1OTWMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043842) TIMER WINDOW output mode control bit of comparator 1 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_COMPOCR ) </loc>
//      <o.7..7> C1OTWMD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_COMPOCR  ----------------------------------
// SVD Line: 5971

//  <rtree> SFDITEM_REG__CMP_COMPOCR
//    <name> COMPOCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043842) Comparator output control register </i>
//    <loc> ( (unsigned char)((CMP_COMPOCR >> 0) & 0xFF), ((CMP_COMPOCR = (CMP_COMPOCR & ~(0xF7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C0IE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C0OE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C0OP </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1IE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1OE </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1OP </item>
//    <item> SFDITEM_FIELD__CMP_COMPOCR_C1OTWMD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMP_CVRCTL  -------------------------------
// SVD Line: 6023

unsigned char CMP_CVRCTL __AT (0x40043843);



// ------------------------------  Field Item: CMP_CVRCTL_CVRVS0  ---------------------------------
// SVD Line: 6031

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS0
//    <name> CVRVS0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40043843) Power supply selection bit for internal reference voltage </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.0..0> CVRVS0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_CVRCTL_CVRE0  ----------------------------------
// SVD Line: 6037

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE0
//    <name> CVRE0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40043843) Control bit for internal reference voltage 0 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.1..1> CVRE0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_CVRCTL_CVRVS1  ---------------------------------
// SVD Line: 6043

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS1
//    <name> CVRVS1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043843) Ground selection bit for internal reference voltage </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.4..4> CVRVS1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMP_CVRCTL_CVRE1  ----------------------------------
// SVD Line: 6049

//  <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE1
//    <name> CVRE1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40043843) Control bit for internal reference voltage 1 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CVRCTL ) </loc>
//      <o.5..5> CVRE1
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CVRCTL  -----------------------------------
// SVD Line: 6023

//  <rtree> SFDITEM_REG__CMP_CVRCTL
//    <name> CVRCTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043843) Comparator internal reference voltage control register </i>
//    <loc> ( (unsigned char)((CMP_CVRCTL >> 0) & 0xFF), ((CMP_CVRCTL = (CMP_CVRCTL & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS0 </item>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE0 </item>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRVS1 </item>
//    <item> SFDITEM_FIELD__CMP_CVRCTL_CVRE1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMP_C0RVM  --------------------------------
// SVD Line: 6057

unsigned char CMP_C0RVM __AT (0x40043844);



// --------------------------------  Register Item: CMP_C0RVM  ------------------------------------
// SVD Line: 6057

//  <item> SFDITEM_REG__CMP_C0RVM
//    <name> C0RVM </name>
//    <i> [Bits 7..0] RW (@ 0x40043844) Comparator internal reference voltage select register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_C0RVM >> 0) & 0xFFFFFFFF), ((CMP_C0RVM = (CMP_C0RVM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CMP_C1RVM  --------------------------------
// SVD Line: 6065

unsigned char CMP_C1RVM __AT (0x40043845);



// --------------------------------  Register Item: CMP_C1RVM  ------------------------------------
// SVD Line: 6065

//  <item> SFDITEM_REG__CMP_C1RVM
//    <name> C1RVM </name>
//    <i> [Bits 7..0] RW (@ 0x40043845) Comparator internal reference voltage select register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_C1RVM >> 0) & 0xFFFFFFFF), ((CMP_C1RVM = (CMP_C1RVM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CMP_CMPSEL0  -------------------------------
// SVD Line: 6071

unsigned char CMP_CMPSEL0 __AT (0x4004384A);



// -----------------------------  Field Item: CMP_CMPSEL0_C0REFS  ---------------------------------
// SVD Line: 6079

//  <item> SFDITEM_FIELD__CMP_CMPSEL0_C0REFS
//    <name> C0REFS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004384A) Selection of the input signal on the negative side of Comparator 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMPSEL0 >> 0) & 0x3), ((CMP_CMPSEL0 = (CMP_CMPSEL0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMP_CMPSEL0_CMP0SEL  --------------------------------
// SVD Line: 6085

//  <item> SFDITEM_FIELD__CMP_CMPSEL0_CMP0SEL
//    <name> CMP0SEL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004384A) Selection of the input signal on the positive side of Comparator 0 </i>
//    <check> 
//      <loc> ( (unsigned char) CMP_CMPSEL0 ) </loc>
//      <o.7..7> CMP0SEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CMPSEL0  ----------------------------------
// SVD Line: 6071

//  <rtree> SFDITEM_REG__CMP_CMPSEL0
//    <name> CMPSEL0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004384A) Comparator 0 input signal selection control register </i>
//    <loc> ( (unsigned char)((CMP_CMPSEL0 >> 0) & 0xFF), ((CMP_CMPSEL0 = (CMP_CMPSEL0 & ~(0x83UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x83) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CMPSEL0_C0REFS </item>
//    <item> SFDITEM_FIELD__CMP_CMPSEL0_CMP0SEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMP_CMPSEL1  -------------------------------
// SVD Line: 6093

unsigned char CMP_CMPSEL1 __AT (0x4004384B);



// -----------------------------  Field Item: CMP_CMPSEL1_C1REFS  ---------------------------------
// SVD Line: 6101

//  <item> SFDITEM_FIELD__CMP_CMPSEL1_C1REFS
//    <name> C1REFS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4004384B) Selection of the input signal on the negative side of Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMPSEL1 >> 0) & 0x7), ((CMP_CMPSEL1 = (CMP_CMPSEL1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMP_CMPSEL1_CMP1SEL  --------------------------------
// SVD Line: 6107

//  <item> SFDITEM_FIELD__CMP_CMPSEL1_CMP1SEL
//    <name> CMP1SEL </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4004384B) Selection of the input signal on the positive side of Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMPSEL1 >> 6) & 0x3), ((CMP_CMPSEL1 = (CMP_CMPSEL1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CMPSEL1  ----------------------------------
// SVD Line: 6093

//  <rtree> SFDITEM_REG__CMP_CMPSEL1
//    <name> CMPSEL1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004384B) Comparator 1 input signal selection control register </i>
//    <loc> ( (unsigned char)((CMP_CMPSEL1 >> 0) & 0xFF), ((CMP_CMPSEL1 = (CMP_CMPSEL1 & ~(0xC7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CMPSEL1_C1REFS </item>
//    <item> SFDITEM_FIELD__CMP_CMPSEL1_CMP1SEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMP_CMP0HY  -------------------------------
// SVD Line: 6115

unsigned char CMP_CMP0HY __AT (0x4004384E);



// -----------------------------  Field Item: CMP_CMP0HY_C0HYSLS  ---------------------------------
// SVD Line: 6123

//  <item> SFDITEM_FIELD__CMP_CMP0HY_C0HYSLS
//    <name> C0HYSLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004384E) Selection of the input hysteresis voltage level of Comparator 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMP0HY >> 0) & 0x3), ((CMP_CMP0HY = (CMP_CMP0HY & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMP_CMP0HY_C0HYSVS  ---------------------------------
// SVD Line: 6129

//  <item> SFDITEM_FIELD__CMP_CMP0HY_C0HYSVS
//    <name> C0HYSVS </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004384E) Selection of the input hysteresis voltage of Comparator 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMP0HY >> 4) & 0x3), ((CMP_CMP0HY = (CMP_CMP0HY & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CMP0HY  -----------------------------------
// SVD Line: 6115

//  <rtree> SFDITEM_REG__CMP_CMP0HY
//    <name> CMP0HY </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004384E) Comparator 0 input voltage hysteresis control register </i>
//    <loc> ( (unsigned char)((CMP_CMP0HY >> 0) & 0xFF), ((CMP_CMP0HY = (CMP_CMP0HY & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CMP0HY_C0HYSLS </item>
//    <item> SFDITEM_FIELD__CMP_CMP0HY_C0HYSVS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMP_CMP1HY  -------------------------------
// SVD Line: 6137

unsigned char CMP_CMP1HY __AT (0x4004384F);



// -----------------------------  Field Item: CMP_CMP1HY_C1HYSLS  ---------------------------------
// SVD Line: 6145

//  <item> SFDITEM_FIELD__CMP_CMP1HY_C1HYSLS
//    <name> C1HYSLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004384F) Selection of the input hysteresis voltage level of Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMP1HY >> 0) & 0x3), ((CMP_CMP1HY = (CMP_CMP1HY & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMP_CMP1HY_C1HYSVS  ---------------------------------
// SVD Line: 6151

//  <item> SFDITEM_FIELD__CMP_CMP1HY_C1HYSVS
//    <name> C1HYSVS </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004384F) Selection of the input hysteresis voltage of Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMP_CMP1HY >> 4) & 0x3), ((CMP_CMP1HY = (CMP_CMP1HY & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMP_CMP1HY  -----------------------------------
// SVD Line: 6137

//  <rtree> SFDITEM_REG__CMP_CMP1HY
//    <name> CMP1HY </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004384F) Comparator 1 input voltage hysteresis control register </i>
//    <loc> ( (unsigned char)((CMP_CMP1HY >> 0) & 0xFF), ((CMP_CMP1HY = (CMP_CMP1HY & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMP_CMP1HY_C1HYSLS </item>
//    <item> SFDITEM_FIELD__CMP_CMP1HY_C1HYSVS </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CMP  --------------------------------------
// SVD Line: 5863

//  <view> CMP
//    <name> CMP </name>
//    <item> SFDITEM_REG__CMP_COMPMDR </item>
//    <item> SFDITEM_REG__CMP_COMPFIR </item>
//    <item> SFDITEM_REG__CMP_COMPOCR </item>
//    <item> SFDITEM_REG__CMP_CVRCTL </item>
//    <item> SFDITEM_REG__CMP_C0RVM </item>
//    <item> SFDITEM_REG__CMP_C1RVM </item>
//    <item> SFDITEM_REG__CMP_CMPSEL0 </item>
//    <item> SFDITEM_REG__CMP_CMPSEL1 </item>
//    <item> SFDITEM_REG__CMP_CMP0HY </item>
//    <item> SFDITEM_REG__CMP_CMP1HY </item>
//  </view>
//  


// ---------------------------  Register Item Address: PGA_PGA0CTL  -------------------------------
// SVD Line: 6180

unsigned char PGA_PGA0CTL __AT (0x40043846);



// ------------------------------  Field Item: PGA_PGA0CTL_PGAVG  ---------------------------------
// SVD Line: 6188

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAVG
//    <name> PGAVG </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40043846) Programmable gain amplifier amplification factor selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((PGA_PGA0CTL >> 0) & 0x7), ((PGA_PGA0CTL = (PGA_PGA0CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: PGA_PGA0CTL_PGA0R1_N  --------------------------------
// SVD Line: 6194

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PGA0R1_N
//    <name> PGA0R1_N </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40043846) Differential or single-ended input selection of the programmable gain amplifier </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA0CTL ) </loc>
//      <o.3..3> PGA0R1_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PGA_PGA0CTL_PGA0INHL  --------------------------------
// SVD Line: 6200

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PGA0INHL
//    <name> PGA0INHL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40043846) PGA0IN and PGA0GNA input selection of the programmable gain amplifier </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA0CTL ) </loc>
//      <o.4..4> PGA0INHL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PGA_PGA0CTL_PGAEN  ---------------------------------
// SVD Line: 6206

//  <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAEN
//    <name> PGAEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40043846) Programmable gain amplifier operation control </i>
//    <check> 
//      <loc> ( (unsigned char) PGA_PGA0CTL ) </loc>
//      <o.7..7> PGAEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PGA_PGA0CTL  ----------------------------------
// SVD Line: 6180

//  <rtree> SFDITEM_REG__PGA_PGA0CTL
//    <name> PGA0CTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40043846) PGA 0 control register </i>
//    <loc> ( (unsigned char)((PGA_PGA0CTL >> 0) & 0xFF), ((PGA_PGA0CTL = (PGA_PGA0CTL & ~(0x9FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x9F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAVG </item>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PGA0R1_N </item>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PGA0INHL </item>
//    <item> SFDITEM_FIELD__PGA_PGA0CTL_PGAEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PGA  --------------------------------------
// SVD Line: 6163

//  <view> PGA
//    <name> PGA </name>
//    <item> SFDITEM_REG__PGA_PGA0CTL </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI0_SSR00  -------------------------------
// SVD Line: 6284

unsigned short SCI0_SSR00 __AT (0x40041000);



// -------------------------------  Field Item: SCI0_SSR00_OVF  -----------------------------------
// SVD Line: 6292

//  <item> SFDITEM_FIELD__SCI0_SSR00_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041000) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_PEF  -----------------------------------
// SVD Line: 6298

//  <item> SFDITEM_FIELD__SCI0_SSR00_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041000) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_FEF  -----------------------------------
// SVD Line: 6304

//  <item> SFDITEM_FIELD__SCI0_SSR00_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041000) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_BFF  -----------------------------------
// SVD Line: 6310

//  <item> SFDITEM_FIELD__SCI0_SSR00_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041000) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_TSF  -----------------------------------
// SVD Line: 6316

//  <item> SFDITEM_FIELD__SCI0_SSR00_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041000) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR00  -----------------------------------
// SVD Line: 6284

//  <rtree> SFDITEM_REG__SCI0_SSR00
//    <name> SSR00 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041000) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR00 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR00_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR01  -------------------------------
// SVD Line: 6324

unsigned short SCI0_SSR01 __AT (0x40041002);



// -------------------------------  Field Item: SCI0_SSR01_OVF  -----------------------------------
// SVD Line: 6292

//  <item> SFDITEM_FIELD__SCI0_SSR01_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041002) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_PEF  -----------------------------------
// SVD Line: 6298

//  <item> SFDITEM_FIELD__SCI0_SSR01_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041002) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_FEF  -----------------------------------
// SVD Line: 6304

//  <item> SFDITEM_FIELD__SCI0_SSR01_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041002) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_BFF  -----------------------------------
// SVD Line: 6310

//  <item> SFDITEM_FIELD__SCI0_SSR01_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041002) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_TSF  -----------------------------------
// SVD Line: 6316

//  <item> SFDITEM_FIELD__SCI0_SSR01_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041002) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR01  -----------------------------------
// SVD Line: 6324

//  <rtree> SFDITEM_REG__SCI0_SSR01
//    <name> SSR01 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041002) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR01 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR01_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR00  -------------------------------
// SVD Line: 6330

unsigned short SCI0_SIR00 __AT (0x40041004);



// -------------------------------  Field Item: SCI0_SIR00_OVCT  ----------------------------------
// SVD Line: 6338

//  <item> SFDITEM_FIELD__SCI0_SIR00_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041004) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR00_PECT  ----------------------------------
// SVD Line: 6344

//  <item> SFDITEM_FIELD__SCI0_SIR00_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041004) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR00_FECT  ----------------------------------
// SVD Line: 6350

//  <item> SFDITEM_FIELD__SCI0_SIR00_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041004) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR00  -----------------------------------
// SVD Line: 6330

//  <rtree> SFDITEM_REG__SCI0_SIR00
//    <name> SIR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041004) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR00 >> 0) & 0xFFFF), ((SCI0_SIR00 = (SCI0_SIR00 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR00_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR00_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR00_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR01  -------------------------------
// SVD Line: 6358

unsigned short SCI0_SIR01 __AT (0x40041006);



// -------------------------------  Field Item: SCI0_SIR01_OVCT  ----------------------------------
// SVD Line: 6338

//  <item> SFDITEM_FIELD__SCI0_SIR01_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041006) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR01_PECT  ----------------------------------
// SVD Line: 6344

//  <item> SFDITEM_FIELD__SCI0_SIR01_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041006) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR01_FECT  ----------------------------------
// SVD Line: 6350

//  <item> SFDITEM_FIELD__SCI0_SIR01_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041006) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR01  -----------------------------------
// SVD Line: 6358

//  <rtree> SFDITEM_REG__SCI0_SIR01
//    <name> SIR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041006) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR01 >> 0) & 0xFFFF), ((SCI0_SIR01 = (SCI0_SIR01 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR01_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR01_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR01_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR00  -------------------------------
// SVD Line: 6364

unsigned short SCI0_SMR00 __AT (0x40041008);



// --------------------------------  Field Item: SCI0_SMR00_MD  -----------------------------------
// SVD Line: 6372

//  <item> SFDITEM_FIELD__SCI0_SMR00_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40041008) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR00 >> 0) & 0x7), ((SCI0_SMR00 = (SCI0_SMR00 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_SIS  -----------------------------------
// SVD Line: 6378

//  <item> SFDITEM_FIELD__SCI0_SMR00_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041008) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_STS  -----------------------------------
// SVD Line: 6384

//  <item> SFDITEM_FIELD__SCI0_SMR00_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041008) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_CCS  -----------------------------------
// SVD Line: 6390

//  <item> SFDITEM_FIELD__SCI0_SMR00_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041008) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_CKS  -----------------------------------
// SVD Line: 6396

//  <item> SFDITEM_FIELD__SCI0_SMR00_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041008) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR00  -----------------------------------
// SVD Line: 6364

//  <rtree> SFDITEM_REG__SCI0_SMR00
//    <name> SMR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041008) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR00 >> 0) & 0xFFFF), ((SCI0_SMR00 = (SCI0_SMR00 & ~(0xC147UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC147) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR00_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR01  -------------------------------
// SVD Line: 6404

unsigned short SCI0_SMR01 __AT (0x4004100A);



// --------------------------------  Field Item: SCI0_SMR01_MD  -----------------------------------
// SVD Line: 6372

//  <item> SFDITEM_FIELD__SCI0_SMR01_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4004100A) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR01 >> 0) & 0x7), ((SCI0_SMR01 = (SCI0_SMR01 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_SIS  -----------------------------------
// SVD Line: 6378

//  <item> SFDITEM_FIELD__SCI0_SMR01_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4004100A) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_STS  -----------------------------------
// SVD Line: 6384

//  <item> SFDITEM_FIELD__SCI0_SMR01_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4004100A) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_CCS  -----------------------------------
// SVD Line: 6390

//  <item> SFDITEM_FIELD__SCI0_SMR01_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004100A) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_CKS  -----------------------------------
// SVD Line: 6396

//  <item> SFDITEM_FIELD__SCI0_SMR01_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004100A) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR01  -----------------------------------
// SVD Line: 6404

//  <rtree> SFDITEM_REG__SCI0_SMR01
//    <name> SMR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004100A) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR01 >> 0) & 0xFFFF), ((SCI0_SMR01 = (SCI0_SMR01 & ~(0xC147UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC147) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR01_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR00  -------------------------------
// SVD Line: 6410

unsigned short SCI0_SCR00 __AT (0x4004100C);



// -------------------------------  Field Item: SCI0_SCR00_DLS  -----------------------------------
// SVD Line: 6419

//  <item> SFDITEM_FIELD__SCI0_SCR00_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004100C) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 0) & 0xF), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_SLC  -----------------------------------
// SVD Line: 6425

//  <item> SFDITEM_FIELD__SCI0_SCR00_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004100C) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 4) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_DIR  -----------------------------------
// SVD Line: 6431

//  <item> SFDITEM_FIELD__SCI0_SCR00_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004100C) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_PTC  -----------------------------------
// SVD Line: 6437

//  <item> SFDITEM_FIELD__SCI0_SCR00_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004100C) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 8) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_EOC  -----------------------------------
// SVD Line: 6443

//  <item> SFDITEM_FIELD__SCI0_SCR00_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004100C) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_CKP  -----------------------------------
// SVD Line: 6449

//  <item> SFDITEM_FIELD__SCI0_SCR00_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004100C) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_DAP  -----------------------------------
// SVD Line: 6455

//  <item> SFDITEM_FIELD__SCI0_SCR00_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004100C) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_RXE  -----------------------------------
// SVD Line: 6461

//  <item> SFDITEM_FIELD__SCI0_SCR00_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004100C) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_TXE  -----------------------------------
// SVD Line: 6467

//  <item> SFDITEM_FIELD__SCI0_SCR00_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004100C) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR00  -----------------------------------
// SVD Line: 6410

//  <rtree> SFDITEM_REG__SCI0_SCR00
//    <name> SCR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004100C) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR00 >> 0) & 0xFFFF), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0xF7BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR01  -------------------------------
// SVD Line: 6475

unsigned short SCI0_SCR01 __AT (0x4004100E);



// -------------------------------  Field Item: SCI0_SCR01_DLS  -----------------------------------
// SVD Line: 6419

//  <item> SFDITEM_FIELD__SCI0_SCR01_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004100E) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 0) & 0xF), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_SLC  -----------------------------------
// SVD Line: 6425

//  <item> SFDITEM_FIELD__SCI0_SCR01_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004100E) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 4) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_DIR  -----------------------------------
// SVD Line: 6431

//  <item> SFDITEM_FIELD__SCI0_SCR01_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004100E) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_PTC  -----------------------------------
// SVD Line: 6437

//  <item> SFDITEM_FIELD__SCI0_SCR01_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004100E) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 8) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_EOC  -----------------------------------
// SVD Line: 6443

//  <item> SFDITEM_FIELD__SCI0_SCR01_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004100E) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_CKP  -----------------------------------
// SVD Line: 6449

//  <item> SFDITEM_FIELD__SCI0_SCR01_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004100E) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_DAP  -----------------------------------
// SVD Line: 6455

//  <item> SFDITEM_FIELD__SCI0_SCR01_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004100E) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_RXE  -----------------------------------
// SVD Line: 6461

//  <item> SFDITEM_FIELD__SCI0_SCR01_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004100E) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_TXE  -----------------------------------
// SVD Line: 6467

//  <item> SFDITEM_FIELD__SCI0_SCR01_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004100E) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR01  -----------------------------------
// SVD Line: 6475

//  <rtree> SFDITEM_REG__SCI0_SCR01
//    <name> SCR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004100E) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR01 >> 0) & 0xFFFF), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0xF7BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SE0  --------------------------------
// SVD Line: 6481

unsigned short SCI0_SE0 __AT (0x40041010);



// --------------------------------  Field Item: SCI0_SE0_SE00  -----------------------------------
// SVD Line: 6490

//  <item> SFDITEM_FIELD__SCI0_SE0_SE00
//    <name> SE00 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041010) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.0..0> SE00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE01  -----------------------------------
// SVD Line: 6496

//  <item> SFDITEM_FIELD__SCI0_SE0_SE01
//    <name> SE01 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041010) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.1..1> SE01
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SE0  ------------------------------------
// SVD Line: 6481

//  <rtree> SFDITEM_REG__SCI0_SE0
//    <name> SE0 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041010) Serial channel enable status register m </i>
//    <loc> ( (unsigned short)((SCI0_SE0 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE00 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE01 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SS0  --------------------------------
// SVD Line: 6504

unsigned short SCI0_SS0 __AT (0x40041012);



// --------------------------------  Field Item: SCI0_SS0_SS00  -----------------------------------
// SVD Line: 6513

//  <item> SFDITEM_FIELD__SCI0_SS0_SS00
//    <name> SS00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041012) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.0..0> SS00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS01  -----------------------------------
// SVD Line: 6519

//  <item> SFDITEM_FIELD__SCI0_SS0_SS01
//    <name> SS01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041012) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.1..1> SS01
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SS0  ------------------------------------
// SVD Line: 6504

//  <rtree> SFDITEM_REG__SCI0_SS0
//    <name> SS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041012) Serial channel start register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SS0 >> 0) & 0xFFFF), ((SCI0_SS0 = (SCI0_SS0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS00 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS01 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_ST0  --------------------------------
// SVD Line: 6527

unsigned short SCI0_ST0 __AT (0x40041014);



// --------------------------------  Field Item: SCI0_ST0_ST00  -----------------------------------
// SVD Line: 6536

//  <item> SFDITEM_FIELD__SCI0_ST0_ST00
//    <name> ST00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041014) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.0..0> ST00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST01  -----------------------------------
// SVD Line: 6542

//  <item> SFDITEM_FIELD__SCI0_ST0_ST01
//    <name> ST01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041014) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.1..1> ST01
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_ST0  ------------------------------------
// SVD Line: 6527

//  <rtree> SFDITEM_REG__SCI0_ST0
//    <name> ST0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041014) Serial channel stop register 0 </i>
//    <loc> ( (unsigned short)((SCI0_ST0 >> 0) & 0xFFFF), ((SCI0_ST0 = (SCI0_ST0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST00 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST01 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SPS0  --------------------------------
// SVD Line: 6550

unsigned short SCI0_SPS0 __AT (0x40041016);



// -------------------------------  Field Item: SCI0_SPS0_PRS00  ----------------------------------
// SVD Line: 6559

//  <item> SFDITEM_FIELD__SCI0_SPS0_PRS00
//    <name> PRS00 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041016) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SPS0 >> 0) & 0xF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SPS0_PRS01  ----------------------------------
// SVD Line: 6565

//  <item> SFDITEM_FIELD__SCI0_SPS0_PRS01
//    <name> PRS01 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041016) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SPS0 >> 4) & 0xF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SPS0  -----------------------------------
// SVD Line: 6550

//  <rtree> SFDITEM_REG__SCI0_SPS0
//    <name> SPS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041016) Serial clock select register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SPS0 >> 0) & 0xFFFF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SPS0_PRS00 </item>
//    <item> SFDITEM_FIELD__SCI0_SPS0_PRS01 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SO0  --------------------------------
// SVD Line: 6573

unsigned short SCI0_SO0 __AT (0x40041018);



// --------------------------------  Field Item: SCI0_SO0_SO00  -----------------------------------
// SVD Line: 6582

//  <item> SFDITEM_FIELD__SCI0_SO0_SO00
//    <name> SO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041018) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.0..0> SO00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO01  -----------------------------------
// SVD Line: 6588

//  <item> SFDITEM_FIELD__SCI0_SO0_SO01
//    <name> SO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041018) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.1..1> SO01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO00  -----------------------------------
// SVD Line: 6594

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO00
//    <name> CKO00 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041018) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.8..8> CKO00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO01  -----------------------------------
// SVD Line: 6600

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO01
//    <name> CKO01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041018) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.9..9> CKO01
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SO0  ------------------------------------
// SVD Line: 6573

//  <rtree> SFDITEM_REG__SCI0_SO0
//    <name> SO0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041018) Serial output register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SO0 >> 0) & 0xFFFF), ((SCI0_SO0 = (SCI0_SO0 & ~(0x303UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x303) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO00 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO01 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO00 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO01 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SOE0  --------------------------------
// SVD Line: 6608

unsigned short SCI0_SOE0 __AT (0x4004101A);



// -------------------------------  Field Item: SCI0_SOE0_SOE00  ----------------------------------
// SVD Line: 6617

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE00
//    <name> SOE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004101A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.0..0> SOE00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE01  ----------------------------------
// SVD Line: 6623

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE01
//    <name> SOE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004101A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.1..1> SOE01
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SOE0  -----------------------------------
// SVD Line: 6608

//  <rtree> SFDITEM_REG__SCI0_SOE0
//    <name> SOE0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004101A) Serial output enable register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SOE0 >> 0) & 0xFFFF), ((SCI0_SOE0 = (SCI0_SOE0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE00 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE01 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SOL0  --------------------------------
// SVD Line: 6631

unsigned short SCI0_SOL0 __AT (0x40041020);



// -------------------------------  Field Item: SCI0_SOL0_SOL00  ----------------------------------
// SVD Line: 6640

//  <item> SFDITEM_FIELD__SCI0_SOL0_SOL00
//    <name> SOL00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041020) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOL0 ) </loc>
//      <o.0..0> SOL00
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SOL0  -----------------------------------
// SVD Line: 6631

//  <rtree> SFDITEM_REG__SCI0_SOL0
//    <name> SOL0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041020) Serial output level register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SOL0 >> 0) & 0xFFFF), ((SCI0_SOL0 = (SCI0_SOL0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SOL0_SOL00 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR00  --------------------------
// SVD Line: 6648

unsigned short SCI0_SDR0_SDR0_SDR00 __AT (0x40041110);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR00  ------------------------------
// SVD Line: 6648

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR00
//    <name> SDR00 </name>
//    <i> [Bits 15..0] RW (@ 0x40041110) Serial data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR00 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR00 = (SCI0_SDR0_SDR0_SDR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR01  --------------------------
// SVD Line: 6648

unsigned short SCI0_SDR0_SDR0_SDR01 __AT (0x40041112);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR01  ------------------------------
// SVD Line: 6648

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR01
//    <name> SDR01 </name>
//    <i> [Bits 15..0] RW (@ 0x40041112) Serial data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR01 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR01 = (SCI0_SDR0_SDR0_SDR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO00  -------------------------------
// SVD Line: 6660

unsigned char SCI0_SIO00 __AT (0x40041110);



// --------------------------------  Register Item: SCI0_SIO00  -----------------------------------
// SVD Line: 6660

//  <item> SFDITEM_REG__SCI0_SIO00
//    <name> SIO00 </name>
//    <i> [Bits 7..0] RW (@ 0x40041110) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO00 >> 0) & 0xFFFFFFFF), ((SCI0_SIO00 = (SCI0_SIO00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO01  -------------------------------
// SVD Line: 6668

unsigned char SCI0_SIO01 __AT (0x40041112);



// --------------------------------  Register Item: SCI0_SIO01  -----------------------------------
// SVD Line: 6668

//  <item> SFDITEM_REG__SCI0_SIO01
//    <name> SIO01 </name>
//    <i> [Bits 7..0] RW (@ 0x40041112) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO01 >> 0) & 0xFFFFFFFF), ((SCI0_SIO01 = (SCI0_SIO01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_TXD0  --------------------------------
// SVD Line: 6676

unsigned char SCI0_TXD0 __AT (0x40041110);



// --------------------------------  Register Item: SCI0_TXD0  ------------------------------------
// SVD Line: 6676

//  <item> SFDITEM_REG__SCI0_TXD0
//    <name> TXD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041110) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_TXD0 >> 0) & 0xFFFFFFFF), ((SCI0_TXD0 = (SCI0_TXD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_RXD0  --------------------------------
// SVD Line: 6684

unsigned char SCI0_RXD0 __AT (0x40041112);



// --------------------------------  Register Item: SCI0_RXD0  ------------------------------------
// SVD Line: 6684

//  <item> SFDITEM_REG__SCI0_RXD0
//    <name> RXD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041112) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_RXD0 >> 0) & 0xFFFFFFFF), ((SCI0_RXD0 = (SCI0_RXD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI0  -------------------------------------
// SVD Line: 6226

//  <view> SCI0
//    <name> SCI0 </name>
//    <item> SFDITEM_REG__SCI0_SSR00 </item>
//    <item> SFDITEM_REG__SCI0_SSR01 </item>
//    <item> SFDITEM_REG__SCI0_SIR00 </item>
//    <item> SFDITEM_REG__SCI0_SIR01 </item>
//    <item> SFDITEM_REG__SCI0_SMR00 </item>
//    <item> SFDITEM_REG__SCI0_SMR01 </item>
//    <item> SFDITEM_REG__SCI0_SCR00 </item>
//    <item> SFDITEM_REG__SCI0_SCR01 </item>
//    <item> SFDITEM_REG__SCI0_SE0 </item>
//    <item> SFDITEM_REG__SCI0_SS0 </item>
//    <item> SFDITEM_REG__SCI0_ST0 </item>
//    <item> SFDITEM_REG__SCI0_SPS0 </item>
//    <item> SFDITEM_REG__SCI0_SO0 </item>
//    <item> SFDITEM_REG__SCI0_SOE0 </item>
//    <item> SFDITEM_REG__SCI0_SOL0 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR00 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR01 </item>
//    <item> SFDITEM_REG__SCI0_SIO00 </item>
//    <item> SFDITEM_REG__SCI0_SIO01 </item>
//    <item> SFDITEM_REG__SCI0_TXD0 </item>
//    <item> SFDITEM_REG__SCI0_RXD0 </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI1_SSR10  -------------------------------
// SVD Line: 6753

unsigned short SCI1_SSR10 __AT (0x40041200);



// -------------------------------  Field Item: SCI1_SSR10_OVF  -----------------------------------
// SVD Line: 6761

//  <item> SFDITEM_FIELD__SCI1_SSR10_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041200) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_PEF  -----------------------------------
// SVD Line: 6767

//  <item> SFDITEM_FIELD__SCI1_SSR10_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041200) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_FEF  -----------------------------------
// SVD Line: 6773

//  <item> SFDITEM_FIELD__SCI1_SSR10_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041200) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_BFF  -----------------------------------
// SVD Line: 6779

//  <item> SFDITEM_FIELD__SCI1_SSR10_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041200) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_TSF  -----------------------------------
// SVD Line: 6785

//  <item> SFDITEM_FIELD__SCI1_SSR10_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041200) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SSR10  -----------------------------------
// SVD Line: 6753

//  <rtree> SFDITEM_REG__SCI1_SSR10
//    <name> SSR10 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041200) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI1_SSR10 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SSR10_OVF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_PEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_FEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_BFF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SSR11  -------------------------------
// SVD Line: 6793

unsigned short SCI1_SSR11 __AT (0x40041202);



// -------------------------------  Field Item: SCI1_SSR11_OVF  -----------------------------------
// SVD Line: 6761

//  <item> SFDITEM_FIELD__SCI1_SSR11_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041202) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_PEF  -----------------------------------
// SVD Line: 6767

//  <item> SFDITEM_FIELD__SCI1_SSR11_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041202) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_FEF  -----------------------------------
// SVD Line: 6773

//  <item> SFDITEM_FIELD__SCI1_SSR11_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041202) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_BFF  -----------------------------------
// SVD Line: 6779

//  <item> SFDITEM_FIELD__SCI1_SSR11_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041202) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_TSF  -----------------------------------
// SVD Line: 6785

//  <item> SFDITEM_FIELD__SCI1_SSR11_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041202) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SSR11  -----------------------------------
// SVD Line: 6793

//  <rtree> SFDITEM_REG__SCI1_SSR11
//    <name> SSR11 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041202) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI1_SSR11 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SSR11_OVF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_PEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_FEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_BFF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SIR10  -------------------------------
// SVD Line: 6799

unsigned short SCI1_SIR10 __AT (0x40041204);



// -------------------------------  Field Item: SCI1_SIR10_OVCT  ----------------------------------
// SVD Line: 6807

//  <item> SFDITEM_FIELD__SCI1_SIR10_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041204) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR10_PECT  ----------------------------------
// SVD Line: 6813

//  <item> SFDITEM_FIELD__SCI1_SIR10_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041204) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR10_FECT  ----------------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__SCI1_SIR10_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041204) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SIR10  -----------------------------------
// SVD Line: 6799

//  <rtree> SFDITEM_REG__SCI1_SIR10
//    <name> SIR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041204) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI1_SIR10 >> 0) & 0xFFFF), ((SCI1_SIR10 = (SCI1_SIR10 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SIR10_OVCT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR10_PECT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR10_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SIR11  -------------------------------
// SVD Line: 6827

unsigned short SCI1_SIR11 __AT (0x40041206);



// -------------------------------  Field Item: SCI1_SIR11_OVCT  ----------------------------------
// SVD Line: 6807

//  <item> SFDITEM_FIELD__SCI1_SIR11_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041206) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR11_PECT  ----------------------------------
// SVD Line: 6813

//  <item> SFDITEM_FIELD__SCI1_SIR11_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041206) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR11_FECT  ----------------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__SCI1_SIR11_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041206) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SIR11  -----------------------------------
// SVD Line: 6827

//  <rtree> SFDITEM_REG__SCI1_SIR11
//    <name> SIR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041206) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI1_SIR11 >> 0) & 0xFFFF), ((SCI1_SIR11 = (SCI1_SIR11 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SIR11_OVCT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR11_PECT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR11_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SMR10  -------------------------------
// SVD Line: 6833

unsigned short SCI1_SMR10 __AT (0x40041208);



// --------------------------------  Field Item: SCI1_SMR10_MD  -----------------------------------
// SVD Line: 6841

//  <item> SFDITEM_FIELD__SCI1_SMR10_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40041208) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SMR10 >> 0) & 0x7), ((SCI1_SMR10 = (SCI1_SMR10 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_SIS  -----------------------------------
// SVD Line: 6847

//  <item> SFDITEM_FIELD__SCI1_SMR10_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041208) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_STS  -----------------------------------
// SVD Line: 6853

//  <item> SFDITEM_FIELD__SCI1_SMR10_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041208) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_CCS  -----------------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__SCI1_SMR10_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041208) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_CKS  -----------------------------------
// SVD Line: 6865

//  <item> SFDITEM_FIELD__SCI1_SMR10_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041208) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SMR10  -----------------------------------
// SVD Line: 6833

//  <rtree> SFDITEM_REG__SCI1_SMR10
//    <name> SMR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041208) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI1_SMR10 >> 0) & 0xFFFF), ((SCI1_SMR10 = (SCI1_SMR10 & ~(0xC147UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC147) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SMR10_MD </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_SIS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_STS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_CCS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SMR11  -------------------------------
// SVD Line: 6873

unsigned short SCI1_SMR11 __AT (0x4004120A);



// --------------------------------  Field Item: SCI1_SMR11_MD  -----------------------------------
// SVD Line: 6841

//  <item> SFDITEM_FIELD__SCI1_SMR11_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4004120A) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SMR11 >> 0) & 0x7), ((SCI1_SMR11 = (SCI1_SMR11 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_SIS  -----------------------------------
// SVD Line: 6847

//  <item> SFDITEM_FIELD__SCI1_SMR11_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4004120A) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_STS  -----------------------------------
// SVD Line: 6853

//  <item> SFDITEM_FIELD__SCI1_SMR11_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4004120A) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_CCS  -----------------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__SCI1_SMR11_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004120A) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_CKS  -----------------------------------
// SVD Line: 6865

//  <item> SFDITEM_FIELD__SCI1_SMR11_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004120A) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SMR11  -----------------------------------
// SVD Line: 6873

//  <rtree> SFDITEM_REG__SCI1_SMR11
//    <name> SMR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004120A) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI1_SMR11 >> 0) & 0xFFFF), ((SCI1_SMR11 = (SCI1_SMR11 & ~(0xC147UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC147) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SMR11_MD </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_SIS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_STS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_CCS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SCR10  -------------------------------
// SVD Line: 6879

unsigned short SCI1_SCR10 __AT (0x4004120C);



// -------------------------------  Field Item: SCI1_SCR10_DLS  -----------------------------------
// SVD Line: 6888

//  <item> SFDITEM_FIELD__SCI1_SCR10_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004120C) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 0) & 0xF), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_SLC  -----------------------------------
// SVD Line: 6894

//  <item> SFDITEM_FIELD__SCI1_SCR10_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004120C) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 4) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_DIR  -----------------------------------
// SVD Line: 6900

//  <item> SFDITEM_FIELD__SCI1_SCR10_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004120C) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_PTC  -----------------------------------
// SVD Line: 6906

//  <item> SFDITEM_FIELD__SCI1_SCR10_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004120C) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 8) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_EOC  -----------------------------------
// SVD Line: 6912

//  <item> SFDITEM_FIELD__SCI1_SCR10_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004120C) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_CKP  -----------------------------------
// SVD Line: 6918

//  <item> SFDITEM_FIELD__SCI1_SCR10_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004120C) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_DAP  -----------------------------------
// SVD Line: 6924

//  <item> SFDITEM_FIELD__SCI1_SCR10_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004120C) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_RXE  -----------------------------------
// SVD Line: 6930

//  <item> SFDITEM_FIELD__SCI1_SCR10_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004120C) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_TXE  -----------------------------------
// SVD Line: 6936

//  <item> SFDITEM_FIELD__SCI1_SCR10_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004120C) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SCR10  -----------------------------------
// SVD Line: 6879

//  <rtree> SFDITEM_REG__SCI1_SCR10
//    <name> SCR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004120C) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI1_SCR10 >> 0) & 0xFFFF), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0xF7BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DLS </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_SLC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DIR </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_PTC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_EOC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_CKP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DAP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_RXE </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SCR11  -------------------------------
// SVD Line: 6944

unsigned short SCI1_SCR11 __AT (0x4004120E);



// -------------------------------  Field Item: SCI1_SCR11_DLS  -----------------------------------
// SVD Line: 6888

//  <item> SFDITEM_FIELD__SCI1_SCR11_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004120E) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 0) & 0xF), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_SLC  -----------------------------------
// SVD Line: 6894

//  <item> SFDITEM_FIELD__SCI1_SCR11_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004120E) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 4) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_DIR  -----------------------------------
// SVD Line: 6900

//  <item> SFDITEM_FIELD__SCI1_SCR11_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004120E) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_PTC  -----------------------------------
// SVD Line: 6906

//  <item> SFDITEM_FIELD__SCI1_SCR11_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004120E) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 8) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_EOC  -----------------------------------
// SVD Line: 6912

//  <item> SFDITEM_FIELD__SCI1_SCR11_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004120E) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_CKP  -----------------------------------
// SVD Line: 6918

//  <item> SFDITEM_FIELD__SCI1_SCR11_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004120E) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_DAP  -----------------------------------
// SVD Line: 6924

//  <item> SFDITEM_FIELD__SCI1_SCR11_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004120E) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_RXE  -----------------------------------
// SVD Line: 6930

//  <item> SFDITEM_FIELD__SCI1_SCR11_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004120E) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_TXE  -----------------------------------
// SVD Line: 6936

//  <item> SFDITEM_FIELD__SCI1_SCR11_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004120E) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SCR11  -----------------------------------
// SVD Line: 6944

//  <rtree> SFDITEM_REG__SCI1_SCR11
//    <name> SCR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004120E) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI1_SCR11 >> 0) & 0xFFFF), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0xF7BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DLS </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_SLC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DIR </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_PTC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_EOC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_CKP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DAP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_RXE </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SE1  --------------------------------
// SVD Line: 6950

unsigned short SCI1_SE1 __AT (0x40041210);



// --------------------------------  Field Item: SCI1_SE1_SE10  -----------------------------------
// SVD Line: 6959

//  <item> SFDITEM_FIELD__SCI1_SE1_SE10
//    <name> SE10 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041210) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SE1 ) </loc>
//      <o.0..0> SE10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SE1_SE11  -----------------------------------
// SVD Line: 6965

//  <item> SFDITEM_FIELD__SCI1_SE1_SE11
//    <name> SE11 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041210) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SE1 ) </loc>
//      <o.1..1> SE11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SE1  ------------------------------------
// SVD Line: 6950

//  <rtree> SFDITEM_REG__SCI1_SE1
//    <name> SE1 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041210) Serial channel enable status register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SE1 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SE1_SE10 </item>
//    <item> SFDITEM_FIELD__SCI1_SE1_SE11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SS1  --------------------------------
// SVD Line: 6973

unsigned short SCI1_SS1 __AT (0x40041212);



// --------------------------------  Field Item: SCI1_SS1_SS10  -----------------------------------
// SVD Line: 6982

//  <item> SFDITEM_FIELD__SCI1_SS1_SS10
//    <name> SS10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041212) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SS1 ) </loc>
//      <o.0..0> SS10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SS1_SS11  -----------------------------------
// SVD Line: 6988

//  <item> SFDITEM_FIELD__SCI1_SS1_SS11
//    <name> SS11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041212) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SS1 ) </loc>
//      <o.1..1> SS11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SS1  ------------------------------------
// SVD Line: 6973

//  <rtree> SFDITEM_REG__SCI1_SS1
//    <name> SS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041212) Serial channel start register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SS1 >> 0) & 0xFFFF), ((SCI1_SS1 = (SCI1_SS1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SS1_SS10 </item>
//    <item> SFDITEM_FIELD__SCI1_SS1_SS11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_ST1  --------------------------------
// SVD Line: 6996

unsigned short SCI1_ST1 __AT (0x40041214);



// --------------------------------  Field Item: SCI1_ST1_ST10  -----------------------------------
// SVD Line: 7005

//  <item> SFDITEM_FIELD__SCI1_ST1_ST10
//    <name> ST10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041214) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_ST1 ) </loc>
//      <o.0..0> ST10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_ST1_ST11  -----------------------------------
// SVD Line: 7011

//  <item> SFDITEM_FIELD__SCI1_ST1_ST11
//    <name> ST11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041214) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_ST1 ) </loc>
//      <o.1..1> ST11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_ST1  ------------------------------------
// SVD Line: 6996

//  <rtree> SFDITEM_REG__SCI1_ST1
//    <name> ST1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041214) Serial channel stop register 1 </i>
//    <loc> ( (unsigned short)((SCI1_ST1 >> 0) & 0xFFFF), ((SCI1_ST1 = (SCI1_ST1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_ST1_ST10 </item>
//    <item> SFDITEM_FIELD__SCI1_ST1_ST11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SPS1  --------------------------------
// SVD Line: 7019

unsigned short SCI1_SPS1 __AT (0x40041216);



// -------------------------------  Field Item: SCI1_SPS1_PRS10  ----------------------------------
// SVD Line: 7028

//  <item> SFDITEM_FIELD__SCI1_SPS1_PRS10
//    <name> PRS10 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041216) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SPS1 >> 0) & 0xF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SPS1_PRS11  ----------------------------------
// SVD Line: 7034

//  <item> SFDITEM_FIELD__SCI1_SPS1_PRS11
//    <name> PRS11 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041216) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SPS1 >> 4) & 0xF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SPS1  -----------------------------------
// SVD Line: 7019

//  <rtree> SFDITEM_REG__SCI1_SPS1
//    <name> SPS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041216) Serial clock select register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SPS1 >> 0) & 0xFFFF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SPS1_PRS10 </item>
//    <item> SFDITEM_FIELD__SCI1_SPS1_PRS11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SO1  --------------------------------
// SVD Line: 7042

unsigned short SCI1_SO1 __AT (0x40041218);



// --------------------------------  Field Item: SCI1_SO1_SO10  -----------------------------------
// SVD Line: 7051

//  <item> SFDITEM_FIELD__SCI1_SO1_SO10
//    <name> SO10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041218) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.0..0> SO10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SO1_SO11  -----------------------------------
// SVD Line: 7057

//  <item> SFDITEM_FIELD__SCI1_SO1_SO11
//    <name> SO11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041218) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.1..1> SO11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SO1_CKO10  -----------------------------------
// SVD Line: 7063

//  <item> SFDITEM_FIELD__SCI1_SO1_CKO10
//    <name> CKO10 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041218) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.8..8> CKO10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SO1_CKO11  -----------------------------------
// SVD Line: 7069

//  <item> SFDITEM_FIELD__SCI1_SO1_CKO11
//    <name> CKO11 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041218) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.9..9> CKO11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SO1  ------------------------------------
// SVD Line: 7042

//  <rtree> SFDITEM_REG__SCI1_SO1
//    <name> SO1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041218) Serial output register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SO1 >> 0) & 0xFFFF), ((SCI1_SO1 = (SCI1_SO1 & ~(0x303UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x303) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SO1_SO10 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_SO11 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_CKO10 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_CKO11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SOE1  --------------------------------
// SVD Line: 7077

unsigned short SCI1_SOE1 __AT (0x4004121A);



// -------------------------------  Field Item: SCI1_SOE1_SOE10  ----------------------------------
// SVD Line: 7086

//  <item> SFDITEM_FIELD__SCI1_SOE1_SOE10
//    <name> SOE10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004121A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOE1 ) </loc>
//      <o.0..0> SOE10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SOE1_SOE11  ----------------------------------
// SVD Line: 7092

//  <item> SFDITEM_FIELD__SCI1_SOE1_SOE11
//    <name> SOE11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004121A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOE1 ) </loc>
//      <o.1..1> SOE11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SOE1  -----------------------------------
// SVD Line: 7077

//  <rtree> SFDITEM_REG__SCI1_SOE1
//    <name> SOE1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004121A) Serial output enable register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SOE1 >> 0) & 0xFFFF), ((SCI1_SOE1 = (SCI1_SOE1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SOE1_SOE10 </item>
//    <item> SFDITEM_FIELD__SCI1_SOE1_SOE11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SOL1  --------------------------------
// SVD Line: 7100

unsigned short SCI1_SOL1 __AT (0x40041220);



// -------------------------------  Field Item: SCI1_SOL1_SOL10  ----------------------------------
// SVD Line: 7109

//  <item> SFDITEM_FIELD__SCI1_SOL1_SOL10
//    <name> SOL10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041220) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOL1 ) </loc>
//      <o.0..0> SOL10
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SOL1  -----------------------------------
// SVD Line: 7100

//  <rtree> SFDITEM_REG__SCI1_SOL1
//    <name> SOL1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041220) Serial output level register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SOL1 >> 0) & 0xFFFF), ((SCI1_SOL1 = (SCI1_SOL1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SOL1_SOL10 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI1_SDR1_SDR1_SDR10  --------------------------
// SVD Line: 7117

unsigned short SCI1_SDR1_SDR1_SDR10 __AT (0x40041310);



// ---------------------------  Register Item: SCI1_SDR1_SDR1_SDR10  ------------------------------
// SVD Line: 7117

//  <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR10
//    <name> SDR10 </name>
//    <i> [Bits 15..0] RW (@ 0x40041310) Serial data register 10 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI1_SDR1_SDR1_SDR10 >> 0) & 0xFFFFFFFF), ((SCI1_SDR1_SDR1_SDR10 = (SCI1_SDR1_SDR1_SDR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI1_SDR1_SDR1_SDR11  --------------------------
// SVD Line: 7117

unsigned short SCI1_SDR1_SDR1_SDR11 __AT (0x40041312);



// ---------------------------  Register Item: SCI1_SDR1_SDR1_SDR11  ------------------------------
// SVD Line: 7117

//  <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR11
//    <name> SDR11 </name>
//    <i> [Bits 15..0] RW (@ 0x40041312) Serial data register 11 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI1_SDR1_SDR1_SDR11 >> 0) & 0xFFFFFFFF), ((SCI1_SDR1_SDR1_SDR11 = (SCI1_SDR1_SDR1_SDR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_SIO10  -------------------------------
// SVD Line: 7129

unsigned char SCI1_SIO10 __AT (0x40041310);



// --------------------------------  Register Item: SCI1_SIO10  -----------------------------------
// SVD Line: 7129

//  <item> SFDITEM_REG__SCI1_SIO10
//    <name> SIO10 </name>
//    <i> [Bits 7..0] RW (@ 0x40041310) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SIO10 >> 0) & 0xFFFFFFFF), ((SCI1_SIO10 = (SCI1_SIO10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_SIO11  -------------------------------
// SVD Line: 7137

unsigned char SCI1_SIO11 __AT (0x40041312);



// --------------------------------  Register Item: SCI1_SIO11  -----------------------------------
// SVD Line: 7137

//  <item> SFDITEM_REG__SCI1_SIO11
//    <name> SIO11 </name>
//    <i> [Bits 7..0] RW (@ 0x40041312) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SIO11 >> 0) & 0xFFFFFFFF), ((SCI1_SIO11 = (SCI1_SIO11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_TXD1  --------------------------------
// SVD Line: 7145

unsigned char SCI1_TXD1 __AT (0x40041310);



// --------------------------------  Register Item: SCI1_TXD1  ------------------------------------
// SVD Line: 7145

//  <item> SFDITEM_REG__SCI1_TXD1
//    <name> TXD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40041310) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_TXD1 >> 0) & 0xFFFFFFFF), ((SCI1_TXD1 = (SCI1_TXD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_RXD1  --------------------------------
// SVD Line: 7153

unsigned char SCI1_RXD1 __AT (0x40041312);



// --------------------------------  Register Item: SCI1_RXD1  ------------------------------------
// SVD Line: 7153

//  <item> SFDITEM_REG__SCI1_RXD1
//    <name> RXD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40041312) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_RXD1 >> 0) & 0xFFFFFFFF), ((SCI1_RXD1 = (SCI1_RXD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI1  -------------------------------------
// SVD Line: 6695

//  <view> SCI1
//    <name> SCI1 </name>
//    <item> SFDITEM_REG__SCI1_SSR10 </item>
//    <item> SFDITEM_REG__SCI1_SSR11 </item>
//    <item> SFDITEM_REG__SCI1_SIR10 </item>
//    <item> SFDITEM_REG__SCI1_SIR11 </item>
//    <item> SFDITEM_REG__SCI1_SMR10 </item>
//    <item> SFDITEM_REG__SCI1_SMR11 </item>
//    <item> SFDITEM_REG__SCI1_SCR10 </item>
//    <item> SFDITEM_REG__SCI1_SCR11 </item>
//    <item> SFDITEM_REG__SCI1_SE1 </item>
//    <item> SFDITEM_REG__SCI1_SS1 </item>
//    <item> SFDITEM_REG__SCI1_ST1 </item>
//    <item> SFDITEM_REG__SCI1_SPS1 </item>
//    <item> SFDITEM_REG__SCI1_SO1 </item>
//    <item> SFDITEM_REG__SCI1_SOE1 </item>
//    <item> SFDITEM_REG__SCI1_SOL1 </item>
//    <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR10 </item>
//    <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR11 </item>
//    <item> SFDITEM_REG__SCI1_SIO10 </item>
//    <item> SFDITEM_REG__SCI1_SIO11 </item>
//    <item> SFDITEM_REG__SCI1_TXD1 </item>
//    <item> SFDITEM_REG__SCI1_RXD1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI2_SSR20  -------------------------------
// SVD Line: 7224

unsigned short SCI2_SSR20 __AT (0x40041400);



// -------------------------------  Field Item: SCI2_SSR20_OVF  -----------------------------------
// SVD Line: 7232

//  <item> SFDITEM_FIELD__SCI2_SSR20_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041400) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR20 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR20_PEF  -----------------------------------
// SVD Line: 7238

//  <item> SFDITEM_FIELD__SCI2_SSR20_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041400) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR20 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR20_FEF  -----------------------------------
// SVD Line: 7244

//  <item> SFDITEM_FIELD__SCI2_SSR20_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041400) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR20 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR20_BFF  -----------------------------------
// SVD Line: 7250

//  <item> SFDITEM_FIELD__SCI2_SSR20_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041400) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR20 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR20_TSF  -----------------------------------
// SVD Line: 7256

//  <item> SFDITEM_FIELD__SCI2_SSR20_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041400) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR20 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SSR20  -----------------------------------
// SVD Line: 7224

//  <rtree> SFDITEM_REG__SCI2_SSR20
//    <name> SSR20 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041400) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI2_SSR20 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI2_SSR20_OVF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR20_PEF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR20_FEF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR20_BFF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR20_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SSR21  -------------------------------
// SVD Line: 7264

unsigned short SCI2_SSR21 __AT (0x40041402);



// -------------------------------  Field Item: SCI2_SSR21_OVF  -----------------------------------
// SVD Line: 7232

//  <item> SFDITEM_FIELD__SCI2_SSR21_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041402) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR21 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR21_PEF  -----------------------------------
// SVD Line: 7238

//  <item> SFDITEM_FIELD__SCI2_SSR21_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041402) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR21 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR21_FEF  -----------------------------------
// SVD Line: 7244

//  <item> SFDITEM_FIELD__SCI2_SSR21_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041402) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR21 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR21_BFF  -----------------------------------
// SVD Line: 7250

//  <item> SFDITEM_FIELD__SCI2_SSR21_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041402) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR21 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SSR21_TSF  -----------------------------------
// SVD Line: 7256

//  <item> SFDITEM_FIELD__SCI2_SSR21_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041402) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SSR21 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SSR21  -----------------------------------
// SVD Line: 7264

//  <rtree> SFDITEM_REG__SCI2_SSR21
//    <name> SSR21 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041402) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI2_SSR21 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI2_SSR21_OVF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR21_PEF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR21_FEF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR21_BFF </item>
//    <item> SFDITEM_FIELD__SCI2_SSR21_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SIR20  -------------------------------
// SVD Line: 7270

unsigned short SCI2_SIR20 __AT (0x40041404);



// -------------------------------  Field Item: SCI2_SIR20_OVCT  ----------------------------------
// SVD Line: 7278

//  <item> SFDITEM_FIELD__SCI2_SIR20_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041404) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SIR20 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SIR20_PECT  ----------------------------------
// SVD Line: 7284

//  <item> SFDITEM_FIELD__SCI2_SIR20_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041404) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SIR20 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SIR20_FECT  ----------------------------------
// SVD Line: 7290

//  <item> SFDITEM_FIELD__SCI2_SIR20_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041404) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SIR20 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SIR20  -----------------------------------
// SVD Line: 7270

//  <rtree> SFDITEM_REG__SCI2_SIR20
//    <name> SIR20 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041404) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI2_SIR20 >> 0) & 0xFFFF), ((SCI2_SIR20 = (SCI2_SIR20 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SIR20_OVCT </item>
//    <item> SFDITEM_FIELD__SCI2_SIR20_PECT </item>
//    <item> SFDITEM_FIELD__SCI2_SIR20_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SIR21  -------------------------------
// SVD Line: 7298

unsigned short SCI2_SIR21 __AT (0x40041406);



// -------------------------------  Field Item: SCI2_SIR21_OVCT  ----------------------------------
// SVD Line: 7278

//  <item> SFDITEM_FIELD__SCI2_SIR21_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041406) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SIR21 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SIR21_PECT  ----------------------------------
// SVD Line: 7284

//  <item> SFDITEM_FIELD__SCI2_SIR21_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041406) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SIR21 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SIR21_FECT  ----------------------------------
// SVD Line: 7290

//  <item> SFDITEM_FIELD__SCI2_SIR21_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041406) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SIR21 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SIR21  -----------------------------------
// SVD Line: 7298

//  <rtree> SFDITEM_REG__SCI2_SIR21
//    <name> SIR21 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041406) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI2_SIR21 >> 0) & 0xFFFF), ((SCI2_SIR21 = (SCI2_SIR21 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SIR21_OVCT </item>
//    <item> SFDITEM_FIELD__SCI2_SIR21_PECT </item>
//    <item> SFDITEM_FIELD__SCI2_SIR21_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SMR20  -------------------------------
// SVD Line: 7304

unsigned short SCI2_SMR20 __AT (0x40041408);



// --------------------------------  Field Item: SCI2_SMR20_MD  -----------------------------------
// SVD Line: 7312

//  <item> SFDITEM_FIELD__SCI2_SMR20_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40041408) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SMR20 >> 0) & 0x7), ((SCI2_SMR20 = (SCI2_SMR20 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR20_SIS  -----------------------------------
// SVD Line: 7318

//  <item> SFDITEM_FIELD__SCI2_SMR20_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041408) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR20 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR20_STS  -----------------------------------
// SVD Line: 7324

//  <item> SFDITEM_FIELD__SCI2_SMR20_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041408) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR20 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR20_CCS  -----------------------------------
// SVD Line: 7330

//  <item> SFDITEM_FIELD__SCI2_SMR20_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041408) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR20 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR20_CKS  -----------------------------------
// SVD Line: 7336

//  <item> SFDITEM_FIELD__SCI2_SMR20_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041408) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR20 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SMR20  -----------------------------------
// SVD Line: 7304

//  <rtree> SFDITEM_REG__SCI2_SMR20
//    <name> SMR20 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041408) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI2_SMR20 >> 0) & 0xFFFF), ((SCI2_SMR20 = (SCI2_SMR20 & ~(0xC147UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC147) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SMR20_MD </item>
//    <item> SFDITEM_FIELD__SCI2_SMR20_SIS </item>
//    <item> SFDITEM_FIELD__SCI2_SMR20_STS </item>
//    <item> SFDITEM_FIELD__SCI2_SMR20_CCS </item>
//    <item> SFDITEM_FIELD__SCI2_SMR20_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SMR21  -------------------------------
// SVD Line: 7344

unsigned short SCI2_SMR21 __AT (0x4004140A);



// --------------------------------  Field Item: SCI2_SMR21_MD  -----------------------------------
// SVD Line: 7312

//  <item> SFDITEM_FIELD__SCI2_SMR21_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4004140A) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SMR21 >> 0) & 0x7), ((SCI2_SMR21 = (SCI2_SMR21 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR21_SIS  -----------------------------------
// SVD Line: 7318

//  <item> SFDITEM_FIELD__SCI2_SMR21_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4004140A) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR21 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR21_STS  -----------------------------------
// SVD Line: 7324

//  <item> SFDITEM_FIELD__SCI2_SMR21_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4004140A) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR21 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR21_CCS  -----------------------------------
// SVD Line: 7330

//  <item> SFDITEM_FIELD__SCI2_SMR21_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004140A) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR21 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SMR21_CKS  -----------------------------------
// SVD Line: 7336

//  <item> SFDITEM_FIELD__SCI2_SMR21_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004140A) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SMR21 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SMR21  -----------------------------------
// SVD Line: 7344

//  <rtree> SFDITEM_REG__SCI2_SMR21
//    <name> SMR21 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004140A) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI2_SMR21 >> 0) & 0xFFFF), ((SCI2_SMR21 = (SCI2_SMR21 & ~(0xC147UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC147) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SMR21_MD </item>
//    <item> SFDITEM_FIELD__SCI2_SMR21_SIS </item>
//    <item> SFDITEM_FIELD__SCI2_SMR21_STS </item>
//    <item> SFDITEM_FIELD__SCI2_SMR21_CCS </item>
//    <item> SFDITEM_FIELD__SCI2_SMR21_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SCR20  -------------------------------
// SVD Line: 7350

unsigned short SCI2_SCR20 __AT (0x4004140C);



// -------------------------------  Field Item: SCI2_SCR20_DLS  -----------------------------------
// SVD Line: 7359

//  <item> SFDITEM_FIELD__SCI2_SCR20_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004140C) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SCR20 >> 0) & 0xF), ((SCI2_SCR20 = (SCI2_SCR20 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_SLC  -----------------------------------
// SVD Line: 7365

//  <item> SFDITEM_FIELD__SCI2_SCR20_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004140C) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SCR20 >> 4) & 0x3), ((SCI2_SCR20 = (SCI2_SCR20 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_DIR  -----------------------------------
// SVD Line: 7371

//  <item> SFDITEM_FIELD__SCI2_SCR20_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004140C) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR20 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_PTC  -----------------------------------
// SVD Line: 7377

//  <item> SFDITEM_FIELD__SCI2_SCR20_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004140C) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SCR20 >> 8) & 0x3), ((SCI2_SCR20 = (SCI2_SCR20 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_EOC  -----------------------------------
// SVD Line: 7383

//  <item> SFDITEM_FIELD__SCI2_SCR20_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004140C) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR20 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_CKP  -----------------------------------
// SVD Line: 7389

//  <item> SFDITEM_FIELD__SCI2_SCR20_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004140C) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR20 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_DAP  -----------------------------------
// SVD Line: 7395

//  <item> SFDITEM_FIELD__SCI2_SCR20_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004140C) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR20 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_RXE  -----------------------------------
// SVD Line: 7401

//  <item> SFDITEM_FIELD__SCI2_SCR20_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004140C) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR20 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR20_TXE  -----------------------------------
// SVD Line: 7407

//  <item> SFDITEM_FIELD__SCI2_SCR20_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004140C) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR20 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SCR20  -----------------------------------
// SVD Line: 7350

//  <rtree> SFDITEM_REG__SCI2_SCR20
//    <name> SCR20 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004140C) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI2_SCR20 >> 0) & 0xFFFF), ((SCI2_SCR20 = (SCI2_SCR20 & ~(0xF7BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SCR20_DLS </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_SLC </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_DIR </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_PTC </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_EOC </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_CKP </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_DAP </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_RXE </item>
//    <item> SFDITEM_FIELD__SCI2_SCR20_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SCR21  -------------------------------
// SVD Line: 7415

unsigned short SCI2_SCR21 __AT (0x4004140E);



// -------------------------------  Field Item: SCI2_SCR21_DLS  -----------------------------------
// SVD Line: 7359

//  <item> SFDITEM_FIELD__SCI2_SCR21_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004140E) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SCR21 >> 0) & 0xF), ((SCI2_SCR21 = (SCI2_SCR21 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_SLC  -----------------------------------
// SVD Line: 7365

//  <item> SFDITEM_FIELD__SCI2_SCR21_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004140E) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SCR21 >> 4) & 0x3), ((SCI2_SCR21 = (SCI2_SCR21 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_DIR  -----------------------------------
// SVD Line: 7371

//  <item> SFDITEM_FIELD__SCI2_SCR21_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004140E) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR21 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_PTC  -----------------------------------
// SVD Line: 7377

//  <item> SFDITEM_FIELD__SCI2_SCR21_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004140E) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SCR21 >> 8) & 0x3), ((SCI2_SCR21 = (SCI2_SCR21 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_EOC  -----------------------------------
// SVD Line: 7383

//  <item> SFDITEM_FIELD__SCI2_SCR21_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004140E) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR21 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_CKP  -----------------------------------
// SVD Line: 7389

//  <item> SFDITEM_FIELD__SCI2_SCR21_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004140E) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR21 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_DAP  -----------------------------------
// SVD Line: 7395

//  <item> SFDITEM_FIELD__SCI2_SCR21_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004140E) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR21 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_RXE  -----------------------------------
// SVD Line: 7401

//  <item> SFDITEM_FIELD__SCI2_SCR21_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004140E) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR21 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SCR21_TXE  -----------------------------------
// SVD Line: 7407

//  <item> SFDITEM_FIELD__SCI2_SCR21_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004140E) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SCR21 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI2_SCR21  -----------------------------------
// SVD Line: 7415

//  <rtree> SFDITEM_REG__SCI2_SCR21
//    <name> SCR21 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004140E) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI2_SCR21 >> 0) & 0xFFFF), ((SCI2_SCR21 = (SCI2_SCR21 & ~(0xF7BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SCR21_DLS </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_SLC </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_DIR </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_PTC </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_EOC </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_CKP </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_DAP </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_RXE </item>
//    <item> SFDITEM_FIELD__SCI2_SCR21_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI2_SE2  --------------------------------
// SVD Line: 7421

unsigned short SCI2_SE2 __AT (0x40041410);



// --------------------------------  Field Item: SCI2_SE2_SE20  -----------------------------------
// SVD Line: 7430

//  <item> SFDITEM_FIELD__SCI2_SE2_SE20
//    <name> SE20 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041410) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SE2 ) </loc>
//      <o.0..0> SE20
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI2_SE2_SE21  -----------------------------------
// SVD Line: 7436

//  <item> SFDITEM_FIELD__SCI2_SE2_SE21
//    <name> SE21 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041410) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SE2 ) </loc>
//      <o.1..1> SE21
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_SE2  ------------------------------------
// SVD Line: 7421

//  <rtree> SFDITEM_REG__SCI2_SE2
//    <name> SE2 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041410) Serial channel enable status register 2 </i>
//    <loc> ( (unsigned short)((SCI2_SE2 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI2_SE2_SE20 </item>
//    <item> SFDITEM_FIELD__SCI2_SE2_SE21 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI2_SS2  --------------------------------
// SVD Line: 7444

unsigned short SCI2_SS2 __AT (0x40041412);



// --------------------------------  Field Item: SCI2_SS2_SS20  -----------------------------------
// SVD Line: 7453

//  <item> SFDITEM_FIELD__SCI2_SS2_SS20
//    <name> SS20 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041412) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SS2 ) </loc>
//      <o.0..0> SS20
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI2_SS2_SS21  -----------------------------------
// SVD Line: 7459

//  <item> SFDITEM_FIELD__SCI2_SS2_SS21
//    <name> SS21 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041412) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SS2 ) </loc>
//      <o.1..1> SS21
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_SS2  ------------------------------------
// SVD Line: 7444

//  <rtree> SFDITEM_REG__SCI2_SS2
//    <name> SS2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041412) Serial channel start register 2 </i>
//    <loc> ( (unsigned short)((SCI2_SS2 >> 0) & 0xFFFF), ((SCI2_SS2 = (SCI2_SS2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SS2_SS20 </item>
//    <item> SFDITEM_FIELD__SCI2_SS2_SS21 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI2_ST2  --------------------------------
// SVD Line: 7467

unsigned short SCI2_ST2 __AT (0x40041414);



// --------------------------------  Field Item: SCI2_ST2_ST20  -----------------------------------
// SVD Line: 7476

//  <item> SFDITEM_FIELD__SCI2_ST2_ST20
//    <name> ST20 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041414) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_ST2 ) </loc>
//      <o.0..0> ST20
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI2_ST2_ST21  -----------------------------------
// SVD Line: 7482

//  <item> SFDITEM_FIELD__SCI2_ST2_ST21
//    <name> ST21 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041414) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_ST2 ) </loc>
//      <o.1..1> ST21
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_ST2  ------------------------------------
// SVD Line: 7467

//  <rtree> SFDITEM_REG__SCI2_ST2
//    <name> ST2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041414) Serial channel stop register 2 </i>
//    <loc> ( (unsigned short)((SCI2_ST2 >> 0) & 0xFFFF), ((SCI2_ST2 = (SCI2_ST2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_ST2_ST20 </item>
//    <item> SFDITEM_FIELD__SCI2_ST2_ST21 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SPS2  --------------------------------
// SVD Line: 7490

unsigned short SCI2_SPS2 __AT (0x40041416);



// -------------------------------  Field Item: SCI2_SPS2_PRS20  ----------------------------------
// SVD Line: 7499

//  <item> SFDITEM_FIELD__SCI2_SPS2_PRS20
//    <name> PRS20 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041416) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SPS2 >> 0) & 0xF), ((SCI2_SPS2 = (SCI2_SPS2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SPS2_PRS21  ----------------------------------
// SVD Line: 7505

//  <item> SFDITEM_FIELD__SCI2_SPS2_PRS21
//    <name> PRS21 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041416) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SPS2 >> 4) & 0xF), ((SCI2_SPS2 = (SCI2_SPS2 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_SPS2  -----------------------------------
// SVD Line: 7490

//  <rtree> SFDITEM_REG__SCI2_SPS2
//    <name> SPS2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041416) Serial clock select register 0 </i>
//    <loc> ( (unsigned short)((SCI2_SPS2 >> 0) & 0xFFFF), ((SCI2_SPS2 = (SCI2_SPS2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SPS2_PRS20 </item>
//    <item> SFDITEM_FIELD__SCI2_SPS2_PRS21 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI2_SO2  --------------------------------
// SVD Line: 7513

unsigned short SCI2_SO2 __AT (0x40041418);



// --------------------------------  Field Item: SCI2_SO2_SO20  -----------------------------------
// SVD Line: 7522

//  <item> SFDITEM_FIELD__SCI2_SO2_SO20
//    <name> SO20 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041418) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SO2 ) </loc>
//      <o.0..0> SO20
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI2_SO2_SO21  -----------------------------------
// SVD Line: 7528

//  <item> SFDITEM_FIELD__SCI2_SO2_SO21
//    <name> SO21 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041418) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SO2 ) </loc>
//      <o.1..1> SO21
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SO2_CKO20  -----------------------------------
// SVD Line: 7534

//  <item> SFDITEM_FIELD__SCI2_SO2_CKO20
//    <name> CKO20 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041418) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SO2 ) </loc>
//      <o.8..8> CKO20
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SO2_CKO11  -----------------------------------
// SVD Line: 7540

//  <item> SFDITEM_FIELD__SCI2_SO2_CKO11
//    <name> CKO11 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041418) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SO2 ) </loc>
//      <o.9..9> CKO11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_SO2  ------------------------------------
// SVD Line: 7513

//  <rtree> SFDITEM_REG__SCI2_SO2
//    <name> SO2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041418) Serial output register 0 </i>
//    <loc> ( (unsigned short)((SCI2_SO2 >> 0) & 0xFFFF), ((SCI2_SO2 = (SCI2_SO2 & ~(0x303UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x303) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SO2_SO20 </item>
//    <item> SFDITEM_FIELD__SCI2_SO2_SO21 </item>
//    <item> SFDITEM_FIELD__SCI2_SO2_CKO20 </item>
//    <item> SFDITEM_FIELD__SCI2_SO2_CKO11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SOE2  --------------------------------
// SVD Line: 7548

unsigned short SCI2_SOE2 __AT (0x4004141A);



// -------------------------------  Field Item: SCI2_SOE2_SOE20  ----------------------------------
// SVD Line: 7557

//  <item> SFDITEM_FIELD__SCI2_SOE2_SOE20
//    <name> SOE20 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004141A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SOE2 ) </loc>
//      <o.0..0> SOE20
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI2_SOE2_SOE21  ----------------------------------
// SVD Line: 7563

//  <item> SFDITEM_FIELD__SCI2_SOE2_SOE21
//    <name> SOE21 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004141A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SOE2 ) </loc>
//      <o.1..1> SOE21
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_SOE2  -----------------------------------
// SVD Line: 7548

//  <rtree> SFDITEM_REG__SCI2_SOE2
//    <name> SOE2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004141A) Serial output enable register 2 </i>
//    <loc> ( (unsigned short)((SCI2_SOE2 >> 0) & 0xFFFF), ((SCI2_SOE2 = (SCI2_SOE2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SOE2_SOE20 </item>
//    <item> SFDITEM_FIELD__SCI2_SOE2_SOE21 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI2_SOL2  --------------------------------
// SVD Line: 7571

unsigned short SCI2_SOL2 __AT (0x40041420);



// -------------------------------  Field Item: SCI2_SOL2_SOL20  ----------------------------------
// SVD Line: 7580

//  <item> SFDITEM_FIELD__SCI2_SOL2_SOL20
//    <name> SOL20 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041420) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI2_SOL2 ) </loc>
//      <o.0..0> SOL20
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI2_SOL2  -----------------------------------
// SVD Line: 7571

//  <rtree> SFDITEM_REG__SCI2_SOL2
//    <name> SOL2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041420) Serial output level register 2 </i>
//    <loc> ( (unsigned short)((SCI2_SOL2 >> 0) & 0xFFFF), ((SCI2_SOL2 = (SCI2_SOL2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI2_SOL2_SOL20 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI2_SDR2_SDR2_SDR20  --------------------------
// SVD Line: 7588

unsigned short SCI2_SDR2_SDR2_SDR20 __AT (0x40041510);



// ---------------------------  Register Item: SCI2_SDR2_SDR2_SDR20  ------------------------------
// SVD Line: 7588

//  <item> SFDITEM_REG__SCI2_SDR2_SDR2_SDR20
//    <name> SDR20 </name>
//    <i> [Bits 15..0] RW (@ 0x40041510) Serial data register 20 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI2_SDR2_SDR2_SDR20 >> 0) & 0xFFFFFFFF), ((SCI2_SDR2_SDR2_SDR20 = (SCI2_SDR2_SDR2_SDR20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI2_SDR2_SDR2_SDR21  --------------------------
// SVD Line: 7588

unsigned short SCI2_SDR2_SDR2_SDR21 __AT (0x40041512);



// ---------------------------  Register Item: SCI2_SDR2_SDR2_SDR21  ------------------------------
// SVD Line: 7588

//  <item> SFDITEM_REG__SCI2_SDR2_SDR2_SDR21
//    <name> SDR21 </name>
//    <i> [Bits 15..0] RW (@ 0x40041512) Serial data register 21 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI2_SDR2_SDR2_SDR21 >> 0) & 0xFFFFFFFF), ((SCI2_SDR2_SDR2_SDR21 = (SCI2_SDR2_SDR2_SDR21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI2_SIO20  -------------------------------
// SVD Line: 7600

unsigned char SCI2_SIO20 __AT (0x40041510);



// --------------------------------  Register Item: SCI2_SIO20  -----------------------------------
// SVD Line: 7600

//  <item> SFDITEM_REG__SCI2_SIO20
//    <name> SIO20 </name>
//    <i> [Bits 7..0] RW (@ 0x40041510) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SIO20 >> 0) & 0xFFFFFFFF), ((SCI2_SIO20 = (SCI2_SIO20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI2_SIO21  -------------------------------
// SVD Line: 7608

unsigned char SCI2_SIO21 __AT (0x40041512);



// --------------------------------  Register Item: SCI2_SIO21  -----------------------------------
// SVD Line: 7608

//  <item> SFDITEM_REG__SCI2_SIO21
//    <name> SIO21 </name>
//    <i> [Bits 7..0] RW (@ 0x40041512) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_SIO21 >> 0) & 0xFFFFFFFF), ((SCI2_SIO21 = (SCI2_SIO21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI2_TXD2  --------------------------------
// SVD Line: 7616

unsigned char SCI2_TXD2 __AT (0x40041510);



// --------------------------------  Register Item: SCI2_TXD2  ------------------------------------
// SVD Line: 7616

//  <item> SFDITEM_REG__SCI2_TXD2
//    <name> TXD2 </name>
//    <i> [Bits 7..0] RW (@ 0x40041510) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_TXD2 >> 0) & 0xFFFFFFFF), ((SCI2_TXD2 = (SCI2_TXD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI2_RXD2  --------------------------------
// SVD Line: 7624

unsigned char SCI2_RXD2 __AT (0x40041512);



// --------------------------------  Register Item: SCI2_RXD2  ------------------------------------
// SVD Line: 7624

//  <item> SFDITEM_REG__SCI2_RXD2
//    <name> RXD2 </name>
//    <i> [Bits 7..0] RW (@ 0x40041512) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI2_RXD2 >> 0) & 0xFFFFFFFF), ((SCI2_RXD2 = (SCI2_RXD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI2  -------------------------------------
// SVD Line: 7164

//  <view> SCI2
//    <name> SCI2 </name>
//    <item> SFDITEM_REG__SCI2_SSR20 </item>
//    <item> SFDITEM_REG__SCI2_SSR21 </item>
//    <item> SFDITEM_REG__SCI2_SIR20 </item>
//    <item> SFDITEM_REG__SCI2_SIR21 </item>
//    <item> SFDITEM_REG__SCI2_SMR20 </item>
//    <item> SFDITEM_REG__SCI2_SMR21 </item>
//    <item> SFDITEM_REG__SCI2_SCR20 </item>
//    <item> SFDITEM_REG__SCI2_SCR21 </item>
//    <item> SFDITEM_REG__SCI2_SE2 </item>
//    <item> SFDITEM_REG__SCI2_SS2 </item>
//    <item> SFDITEM_REG__SCI2_ST2 </item>
//    <item> SFDITEM_REG__SCI2_SPS2 </item>
//    <item> SFDITEM_REG__SCI2_SO2 </item>
//    <item> SFDITEM_REG__SCI2_SOE2 </item>
//    <item> SFDITEM_REG__SCI2_SOL2 </item>
//    <item> SFDITEM_REG__SCI2_SDR2_SDR2_SDR20 </item>
//    <item> SFDITEM_REG__SCI2_SDR2_SDR2_SDR21 </item>
//    <item> SFDITEM_REG__SCI2_SIO20 </item>
//    <item> SFDITEM_REG__SCI2_SIO21 </item>
//    <item> SFDITEM_REG__SCI2_TXD2 </item>
//    <item> SFDITEM_REG__SCI2_RXD2 </item>
//  </view>
//  


// ---------------------------  Register Item Address: SPIHS0_SPIM0  ------------------------------
// SVD Line: 7659

unsigned int SPIHS0_SPIM0 __AT (0x40042400);



// -----------------------------  Field Item: SPIHS0_SPIM0_RECMD  ---------------------------------
// SVD Line: 7667

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_RECMD
//    <name> RECMD </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042400) Receive mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.1..1> RECMD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIM0_DLS  ----------------------------------
// SVD Line: 7673

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042400) data length control </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.2..2> DLS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPIHS0_SPIM0_INTMD  ---------------------------------
// SVD Line: 7679

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_INTMD
//    <name> INTMD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042400) interrupt source select </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.3..3> INTMD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIM0_DIR  ----------------------------------
// SVD Line: 7685

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042400) MSB of LSB mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIM0_NSSE  ---------------------------------
// SVD Line: 7691

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_NSSE
//    <name> NSSE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042400) NSS pin enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.5..5> NSSE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIM0_TRMD  ---------------------------------
// SVD Line: 7697

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_TRMD
//    <name> TRMD </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042400) Transfer and Receive mode </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.6..6> TRMD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIM0_SPIE  ---------------------------------
// SVD Line: 7703

//  <item> SFDITEM_FIELD__SPIHS0_SPIM0_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042400) SPI operation enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIM0 ) </loc>
//      <o.7..7> SPIE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPIHS0_SPIM0  ----------------------------------
// SVD Line: 7659

//  <rtree> SFDITEM_REG__SPIHS0_SPIM0
//    <name> SPIM0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042400) SPI mode control register </i>
//    <loc> ( (unsigned int)((SPIHS0_SPIM0 >> 0) & 0xFFFFFFFF), ((SPIHS0_SPIM0 = (SPIHS0_SPIM0 & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_RECMD </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_DLS </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_INTMD </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_DIR </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_NSSE </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_TRMD </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIM0_SPIE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPIHS0_SPIC0  ------------------------------
// SVD Line: 7711

unsigned int SPIHS0_SPIC0 __AT (0x40042404);



// ------------------------------  Field Item: SPIHS0_SPIC0_CKS  ----------------------------------
// SVD Line: 7719

//  <item> SFDITEM_FIELD__SPIHS0_SPIC0_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042404) Operation clock control </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPIHS0_SPIC0 >> 0) & 0x7), ((SPIHS0_SPIC0 = (SPIHS0_SPIC0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIC0_DAP  ----------------------------------
// SVD Line: 7726

//  <item> SFDITEM_FIELD__SPIHS0_SPIC0_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042404) Selection of data phase for SPI </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIC0 ) </loc>
//      <o.3..3> DAP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS0_SPIC0_CKP  ----------------------------------
// SVD Line: 7733

//  <item> SFDITEM_FIELD__SPIHS0_SPIC0_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042404) Selection of clock phase for SPI </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIC0 ) </loc>
//      <o.4..4> CKP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPIHS0_SPIC0  ----------------------------------
// SVD Line: 7711

//  <rtree> SFDITEM_REG__SPIHS0_SPIC0
//    <name> SPIC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042404) SPI control register </i>
//    <loc> ( (unsigned int)((SPIHS0_SPIC0 >> 0) & 0xFFFFFFFF), ((SPIHS0_SPIC0 = (SPIHS0_SPIC0 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPIHS0_SPIC0_CKS </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIC0_DAP </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIC0_CKP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPIHS0_SDRO0  ------------------------------
// SVD Line: 7742

unsigned int SPIHS0_SDRO0 __AT (0x40042408);



// -------------------------------  Register Item: SPIHS0_SDRO0  ----------------------------------
// SVD Line: 7742

//  <item> SFDITEM_REG__SPIHS0_SDRO0
//    <name> SDRO0 </name>
//    <i> [Bits 31..0] RW (@ 0x40042408) Data buffer of transmission </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPIHS0_SDRO0 >> 0) & 0xFFFFFFFF), ((SPIHS0_SDRO0 = (SPIHS0_SDRO0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SPIHS0_SDRI0  ------------------------------
// SVD Line: 7750

unsigned int SPIHS0_SDRI0 __AT (0x4004240C);



// -------------------------------  Register Item: SPIHS0_SDRI0  ----------------------------------
// SVD Line: 7750

//  <item> SFDITEM_REG__SPIHS0_SDRI0
//    <name> SDRI0 </name>
//    <i> [Bits 31..0] RW (@ 0x4004240C) Data buffer of reception </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPIHS0_SDRI0 >> 0) & 0xFFFFFFFF), ((SPIHS0_SDRI0 = (SPIHS0_SDRI0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SPIHS0_SPIS0  ------------------------------
// SVD Line: 7758

unsigned int SPIHS0_SPIS0 __AT (0x40042410);



// ------------------------------  Field Item: SPIHS0_SPIS0_SPTF  ---------------------------------
// SVD Line: 7766

//  <item> SFDITEM_FIELD__SPIHS0_SPIS0_SPTF
//    <name> SPTF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042410) SPI transmission status flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIS0 ) </loc>
//      <o.0..0> SPTF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPIHS0_SPIS0_SDRIF  ---------------------------------
// SVD Line: 7772

//  <item> SFDITEM_FIELD__SPIHS0_SPIS0_SDRIF
//    <name> SDRIF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042410) Receive buffer non-empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS0_SPIS0 ) </loc>
//      <o.1..1> SDRIF
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPIHS0_SPIS0  ----------------------------------
// SVD Line: 7758

//  <rtree> SFDITEM_REG__SPIHS0_SPIS0
//    <name> SPIS0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042410) SPI status register </i>
//    <loc> ( (unsigned int)((SPIHS0_SPIS0 >> 0) & 0xFFFFFFFF), ((SPIHS0_SPIS0 = (SPIHS0_SPIS0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPIHS0_SPIS0_SPTF </item>
//    <item> SFDITEM_FIELD__SPIHS0_SPIS0_SDRIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: SPIHS0  ------------------------------------
// SVD Line: 7635

//  <view> SPIHS0
//    <name> SPIHS0 </name>
//    <item> SFDITEM_REG__SPIHS0_SPIM0 </item>
//    <item> SFDITEM_REG__SPIHS0_SPIC0 </item>
//    <item> SFDITEM_REG__SPIHS0_SDRO0 </item>
//    <item> SFDITEM_REG__SPIHS0_SDRI0 </item>
//    <item> SFDITEM_REG__SPIHS0_SPIS0 </item>
//  </view>
//  


// ---------------------------  Register Item Address: SPIHS1_SPIM1  ------------------------------
// SVD Line: 7807

unsigned int SPIHS1_SPIM1 __AT (0x40042800);



// -----------------------------  Field Item: SPIHS1_SPIM1_RECMD  ---------------------------------
// SVD Line: 7815

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_RECMD
//    <name> RECMD </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042800) Receive mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.1..1> RECMD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIM1_DLS  ----------------------------------
// SVD Line: 7821

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042800) data length control </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.2..2> DLS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPIHS1_SPIM1_INTMD  ---------------------------------
// SVD Line: 7827

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_INTMD
//    <name> INTMD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042800) interrupt source select </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.3..3> INTMD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIM1_DIR  ----------------------------------
// SVD Line: 7833

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042800) MSB of LSB mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIM1_NSSE  ---------------------------------
// SVD Line: 7839

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_NSSE
//    <name> NSSE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042800) NSS pin enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.5..5> NSSE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIM1_TRMD  ---------------------------------
// SVD Line: 7845

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_TRMD
//    <name> TRMD </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042800) Transfer and Receive mode </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.6..6> TRMD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIM1_SPIE  ---------------------------------
// SVD Line: 7851

//  <item> SFDITEM_FIELD__SPIHS1_SPIM1_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042800) SPI operation enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIM1 ) </loc>
//      <o.7..7> SPIE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPIHS1_SPIM1  ----------------------------------
// SVD Line: 7807

//  <rtree> SFDITEM_REG__SPIHS1_SPIM1
//    <name> SPIM1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042800) SPI mode control register </i>
//    <loc> ( (unsigned int)((SPIHS1_SPIM1 >> 0) & 0xFFFFFFFF), ((SPIHS1_SPIM1 = (SPIHS1_SPIM1 & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_RECMD </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_DLS </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_INTMD </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_DIR </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_NSSE </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_TRMD </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIM1_SPIE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPIHS1_SPIC1  ------------------------------
// SVD Line: 7859

unsigned int SPIHS1_SPIC1 __AT (0x40042804);



// ------------------------------  Field Item: SPIHS1_SPIC1_CKS  ----------------------------------
// SVD Line: 7867

//  <item> SFDITEM_FIELD__SPIHS1_SPIC1_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042804) Operation clock control </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPIHS1_SPIC1 >> 0) & 0x7), ((SPIHS1_SPIC1 = (SPIHS1_SPIC1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIC1_DAP  ----------------------------------
// SVD Line: 7874

//  <item> SFDITEM_FIELD__SPIHS1_SPIC1_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042804) Selection of data phase for SPI </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIC1 ) </loc>
//      <o.3..3> DAP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPIHS1_SPIC1_CKP  ----------------------------------
// SVD Line: 7881

//  <item> SFDITEM_FIELD__SPIHS1_SPIC1_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042804) Selection of clock phase for SPI </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIC1 ) </loc>
//      <o.4..4> CKP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPIHS1_SPIC1  ----------------------------------
// SVD Line: 7859

//  <rtree> SFDITEM_REG__SPIHS1_SPIC1
//    <name> SPIC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042804) SPI control register </i>
//    <loc> ( (unsigned int)((SPIHS1_SPIC1 >> 0) & 0xFFFFFFFF), ((SPIHS1_SPIC1 = (SPIHS1_SPIC1 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPIHS1_SPIC1_CKS </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIC1_DAP </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIC1_CKP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPIHS1_SDRO1  ------------------------------
// SVD Line: 7890

unsigned int SPIHS1_SDRO1 __AT (0x40042808);



// -------------------------------  Register Item: SPIHS1_SDRO1  ----------------------------------
// SVD Line: 7890

//  <item> SFDITEM_REG__SPIHS1_SDRO1
//    <name> SDRO1 </name>
//    <i> [Bits 31..0] RW (@ 0x40042808) Data buffer of transmission </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPIHS1_SDRO1 >> 0) & 0xFFFFFFFF), ((SPIHS1_SDRO1 = (SPIHS1_SDRO1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SPIHS1_SDRI1  ------------------------------
// SVD Line: 7898

unsigned int SPIHS1_SDRI1 __AT (0x4004280C);



// -------------------------------  Register Item: SPIHS1_SDRI1  ----------------------------------
// SVD Line: 7898

//  <item> SFDITEM_REG__SPIHS1_SDRI1
//    <name> SDRI1 </name>
//    <i> [Bits 31..0] RW (@ 0x4004280C) Data buffer of reception </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPIHS1_SDRI1 >> 0) & 0xFFFFFFFF), ((SPIHS1_SDRI1 = (SPIHS1_SDRI1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SPIHS1_SPIS1  ------------------------------
// SVD Line: 7906

unsigned int SPIHS1_SPIS1 __AT (0x40042810);



// ------------------------------  Field Item: SPIHS1_SPIS1_SPTF  ---------------------------------
// SVD Line: 7914

//  <item> SFDITEM_FIELD__SPIHS1_SPIS1_SPTF
//    <name> SPTF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042810) SPI transmission status flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIS1 ) </loc>
//      <o.0..0> SPTF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SPIHS1_SPIS1_SDRIF  ---------------------------------
// SVD Line: 7920

//  <item> SFDITEM_FIELD__SPIHS1_SPIS1_SDRIF
//    <name> SDRIF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042810) Receive buffer non-empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPIHS1_SPIS1 ) </loc>
//      <o.1..1> SDRIF
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SPIHS1_SPIS1  ----------------------------------
// SVD Line: 7906

//  <rtree> SFDITEM_REG__SPIHS1_SPIS1
//    <name> SPIS1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042810) SPI status register </i>
//    <loc> ( (unsigned int)((SPIHS1_SPIS1 >> 0) & 0xFFFFFFFF), ((SPIHS1_SPIS1 = (SPIHS1_SPIS1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPIHS1_SPIS1_SPTF </item>
//    <item> SFDITEM_FIELD__SPIHS1_SPIS1_SDRIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: SPIHS1  ------------------------------------
// SVD Line: 7783

//  <view> SPIHS1
//    <name> SPIHS1 </name>
//    <item> SFDITEM_REG__SPIHS1_SPIM1 </item>
//    <item> SFDITEM_REG__SPIHS1_SPIC1 </item>
//    <item> SFDITEM_REG__SPIHS1_SDRO1 </item>
//    <item> SFDITEM_REG__SPIHS1_SDRI1 </item>
//    <item> SFDITEM_REG__SPIHS1_SPIS1 </item>
//  </view>
//  


// --------------------------  Register Item Address: IICA0_IICCTL00  -----------------------------
// SVD Line: 7953

unsigned char IICA0_IICCTL00 __AT (0x40041A30);



// -----------------------------  Field Item: IICA0_IICCTL00_SPT  ---------------------------------
// SVD Line: 7961

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_SPT
//    <name> SPT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041A30) Stop condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.0..0> SPT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_STT  ---------------------------------
// SVD Line: 7967

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_STT
//    <name> STT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041A30) Start condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.1..1> STT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_ACKE  --------------------------------
// SVD Line: 7973

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_ACKE
//    <name> ACKE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041A30) Acknowledgment control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.2..2> ACKE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_WTIM  --------------------------------
// SVD Line: 7979

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_WTIM
//    <name> WTIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041A30) Control of wait and interrupt request generation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.3..3> WTIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_SPIE  --------------------------------
// SVD Line: 7985

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40041A30) Enable generation of interrupt request when stop condition is detected </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.4..4> SPIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_WREL  --------------------------------
// SVD Line: 7991

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_WREL
//    <name> WREL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40041A30) Wait cancellation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.5..5> WREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_LREL  --------------------------------
// SVD Line: 7997

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_LREL
//    <name> LREL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041A30) Exit from communications </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.6..6> LREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL00_IICE  --------------------------------
// SVD Line: 8003

//  <item> SFDITEM_FIELD__IICA0_IICCTL00_IICE
//    <name> IICE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041A30) I2C operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL00 ) </loc>
//      <o.7..7> IICE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: IICA0_IICCTL00  ---------------------------------
// SVD Line: 7953

//  <rtree> SFDITEM_REG__IICA0_IICCTL00
//    <name> IICCTL00 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041A30) IICA0 control register 0 </i>
//    <loc> ( (unsigned char)((IICA0_IICCTL00 >> 0) & 0xFF), ((IICA0_IICCTL00 = (IICA0_IICCTL00 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_SPT </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_STT </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_ACKE </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_WTIM </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_SPIE </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_WREL </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_LREL </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL00_IICE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: IICA0_IICCTL01  -----------------------------
// SVD Line: 8011

unsigned char IICA0_IICCTL01 __AT (0x40041A31);



// -----------------------------  Field Item: IICA0_IICCTL01_PRS  ---------------------------------
// SVD Line: 8019

//  <item> SFDITEM_FIELD__IICA0_IICCTL01_PRS
//    <name> PRS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041A31) Operation clock (fMCK) contro </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL01 ) </loc>
//      <o.0..0> PRS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL01_DFC  ---------------------------------
// SVD Line: 8026

//  <item> SFDITEM_FIELD__IICA0_IICCTL01_DFC
//    <name> DFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041A31) Digital filter operation control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL01 ) </loc>
//      <o.2..2> DFC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL01_SMC  ---------------------------------
// SVD Line: 8033

//  <item> SFDITEM_FIELD__IICA0_IICCTL01_SMC
//    <name> SMC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041A31) Operation mode switching </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL01 ) </loc>
//      <o.3..3> SMC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL01_DAD  ---------------------------------
// SVD Line: 8040

//  <item> SFDITEM_FIELD__IICA0_IICCTL01_DAD
//    <name> DAD </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40041A31) Detection of SDAAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL01 ) </loc>
//      <o.4..4> DAD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL01_CLD  ---------------------------------
// SVD Line: 8047

//  <item> SFDITEM_FIELD__IICA0_IICCTL01_CLD
//    <name> CLD </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041A31) Detection of SCLAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL01 ) </loc>
//      <o.5..5> CLD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICCTL01_WUP  ---------------------------------
// SVD Line: 8054

//  <item> SFDITEM_FIELD__IICA0_IICCTL01_WUP
//    <name> WUP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041A31) Control of address match wakeup </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICCTL01 ) </loc>
//      <o.7..7> WUP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: IICA0_IICCTL01  ---------------------------------
// SVD Line: 8011

//  <rtree> SFDITEM_REG__IICA0_IICCTL01
//    <name> IICCTL01 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041A31) IICA0 control register 1 </i>
//    <loc> ( (unsigned char)((IICA0_IICCTL01 >> 0) & 0xFF), ((IICA0_IICCTL01 = (IICA0_IICCTL01 & ~(0x8DUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA0_IICCTL01_PRS </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL01_DFC </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL01_SMC </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL01_DAD </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL01_CLD </item>
//    <item> SFDITEM_FIELD__IICA0_IICCTL01_WUP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IICA0_IICWL0  ------------------------------
// SVD Line: 8063

unsigned char IICA0_IICWL0 __AT (0x40041A32);



// -------------------------------  Register Item: IICA0_IICWL0  ----------------------------------
// SVD Line: 8063

//  <item> SFDITEM_REG__IICA0_IICWL0
//    <name> IICWL0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A32) IICA0 low-level width setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA0_IICWL0 >> 0) & 0xFFFFFFFF), ((IICA0_IICWL0 = (IICA0_IICWL0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA0_IICWH0  ------------------------------
// SVD Line: 8071

unsigned char IICA0_IICWH0 __AT (0x40041A33);



// -------------------------------  Register Item: IICA0_IICWH0  ----------------------------------
// SVD Line: 8071

//  <item> SFDITEM_REG__IICA0_IICWH0
//    <name> IICWH0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A33) IICA0 high-level width setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA0_IICWH0 >> 0) & 0xFFFFFFFF), ((IICA0_IICWH0 = (IICA0_IICWH0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA0_SVA0  -------------------------------
// SVD Line: 8079

unsigned char IICA0_SVA0 __AT (0x40041A34);



// --------------------------------  Register Item: IICA0_SVA0  -----------------------------------
// SVD Line: 8079

//  <item> SFDITEM_REG__IICA0_SVA0
//    <name> SVA0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A34) Slave address register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA0_SVA0 >> 0) & 0xFFFFFFFF), ((IICA0_SVA0 = (IICA0_SVA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA0_IICA0  -------------------------------
// SVD Line: 8087

unsigned char IICA0_IICA0 __AT (0x40041B50);



// -------------------------------  Register Item: IICA0_IICA0  -----------------------------------
// SVD Line: 8087

//  <item> SFDITEM_REG__IICA0_IICA0
//    <name> IICA0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041B50) IICA0 shift register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA0_IICA0 >> 0) & 0xFFFFFFFF), ((IICA0_IICA0 = (IICA0_IICA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA0_IICS0  -------------------------------
// SVD Line: 8095

unsigned char IICA0_IICS0 __AT (0x40041B51);



// ------------------------------  Field Item: IICA0_IICS0_MSTS  ----------------------------------
// SVD Line: 8104

//  <item> SFDITEM_FIELD__IICA0_IICS0_MSTS
//    <name> MSTS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40041B51) Master status check flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.7..7> MSTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA0_IICS0_ALD  ----------------------------------
// SVD Line: 8110

//  <item> SFDITEM_FIELD__IICA0_IICS0_ALD
//    <name> ALD </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041B51) Detection of arbitration loss </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.6..6> ALD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA0_IICS0_EXC  ----------------------------------
// SVD Line: 8116

//  <item> SFDITEM_FIELD__IICA0_IICS0_EXC
//    <name> EXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041B51) Detection of extension code reception </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.5..5> EXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA0_IICS0_COI  ----------------------------------
// SVD Line: 8122

//  <item> SFDITEM_FIELD__IICA0_IICS0_COI
//    <name> COI </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40041B51) Detection of matching addresses </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.4..4> COI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA0_IICS0_TRC  ----------------------------------
// SVD Line: 8128

//  <item> SFDITEM_FIELD__IICA0_IICS0_TRC
//    <name> TRC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041B51) Detection of transmit/receive status </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.3..3> TRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA0_IICS0_ACKD  ----------------------------------
// SVD Line: 8134

//  <item> SFDITEM_FIELD__IICA0_IICS0_ACKD
//    <name> ACKD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041B51) Detection of acknowledge (ACK) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.2..2> ACKD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA0_IICS0_STD  ----------------------------------
// SVD Line: 8140

//  <item> SFDITEM_FIELD__IICA0_IICS0_STD
//    <name> STD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041B51) Detection of start condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.1..1> STD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA0_IICS0_SPD  ----------------------------------
// SVD Line: 8146

//  <item> SFDITEM_FIELD__IICA0_IICS0_SPD
//    <name> SPD </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041B51) Detection of stop condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICS0 ) </loc>
//      <o.0..0> SPD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA0_IICS0  ----------------------------------
// SVD Line: 8095

//  <rtree> SFDITEM_REG__IICA0_IICS0
//    <name> IICS0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40041B51) IICA0 status register </i>
//    <loc> ( (unsigned char)((IICA0_IICS0 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__IICA0_IICS0_MSTS </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_ALD </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_EXC </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_COI </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_TRC </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_ACKD </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_STD </item>
//    <item> SFDITEM_FIELD__IICA0_IICS0_SPD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IICA0_IICF0  -------------------------------
// SVD Line: 8154

unsigned char IICA0_IICF0 __AT (0x40041B52);



// ------------------------------  Field Item: IICA0_IICF0_STCF  ----------------------------------
// SVD Line: 8163

//  <item> SFDITEM_FIELD__IICA0_IICF0_STCF
//    <name> STCF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40041B52) STT clear flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICF0 ) </loc>
//      <o.7..7> STCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICF0_IICBSY  ---------------------------------
// SVD Line: 8170

//  <item> SFDITEM_FIELD__IICA0_IICF0_IICBSY
//    <name> IICBSY </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041B52) I2C bus status flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICF0 ) </loc>
//      <o.6..6> IICBSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA0_IICF0_STCEN  ---------------------------------
// SVD Line: 8177

//  <item> SFDITEM_FIELD__IICA0_IICF0_STCEN
//    <name> STCEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041B52) Initial start enable trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICF0 ) </loc>
//      <o.1..1> STCEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA0_IICF0_IICRSV  ---------------------------------
// SVD Line: 8184

//  <item> SFDITEM_FIELD__IICA0_IICF0_IICRSV
//    <name> IICRSV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041B52) Communication reservation function disable bit </i>
//    <check> 
//      <loc> ( (unsigned char) IICA0_IICF0 ) </loc>
//      <o.0..0> IICRSV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA0_IICF0  ----------------------------------
// SVD Line: 8154

//  <rtree> SFDITEM_REG__IICA0_IICF0
//    <name> IICF0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041B52) IICA0 flag register </i>
//    <loc> ( (unsigned char)((IICA0_IICF0 >> 0) & 0xFF), ((IICA0_IICF0 = (IICA0_IICF0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA0_IICF0_STCF </item>
//    <item> SFDITEM_FIELD__IICA0_IICF0_IICBSY </item>
//    <item> SFDITEM_FIELD__IICA0_IICF0_STCEN </item>
//    <item> SFDITEM_FIELD__IICA0_IICF0_IICRSV </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: IICA0  -------------------------------------
// SVD Line: 7931

//  <view> IICA0
//    <name> IICA0 </name>
//    <item> SFDITEM_REG__IICA0_IICCTL00 </item>
//    <item> SFDITEM_REG__IICA0_IICCTL01 </item>
//    <item> SFDITEM_REG__IICA0_IICWL0 </item>
//    <item> SFDITEM_REG__IICA0_IICWH0 </item>
//    <item> SFDITEM_REG__IICA0_SVA0 </item>
//    <item> SFDITEM_REG__IICA0_IICA0 </item>
//    <item> SFDITEM_REG__IICA0_IICS0 </item>
//    <item> SFDITEM_REG__IICA0_IICF0 </item>
//  </view>
//  


// --------------------------  Register Item Address: IICA1_IICCTL10  -----------------------------
// SVD Line: 8218

unsigned char IICA1_IICCTL10 __AT (0x40042E30);



// -----------------------------  Field Item: IICA1_IICCTL10_SPT  ---------------------------------
// SVD Line: 8226

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_SPT
//    <name> SPT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042E30) Stop condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.0..0> SPT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_STT  ---------------------------------
// SVD Line: 8232

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_STT
//    <name> STT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042E30) Start condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.1..1> STT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_ACKE  --------------------------------
// SVD Line: 8238

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_ACKE
//    <name> ACKE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042E30) Acknowledgment control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.2..2> ACKE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_WTIM  --------------------------------
// SVD Line: 8244

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_WTIM
//    <name> WTIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042E30) Control of wait and interrupt request generation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.3..3> WTIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_SPIE  --------------------------------
// SVD Line: 8250

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042E30) Enable generation of interrupt request when stop condition is detected </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.4..4> SPIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_WREL  --------------------------------
// SVD Line: 8256

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_WREL
//    <name> WREL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042E30) Wait cancellation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.5..5> WREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_LREL  --------------------------------
// SVD Line: 8262

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_LREL
//    <name> LREL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042E30) Exit from communications </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.6..6> LREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL10_IICE  --------------------------------
// SVD Line: 8268

//  <item> SFDITEM_FIELD__IICA1_IICCTL10_IICE
//    <name> IICE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042E30) I2C operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL10 ) </loc>
//      <o.7..7> IICE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: IICA1_IICCTL10  ---------------------------------
// SVD Line: 8218

//  <rtree> SFDITEM_REG__IICA1_IICCTL10
//    <name> IICCTL10 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042E30) IICA1 control register 0 </i>
//    <loc> ( (unsigned char)((IICA1_IICCTL10 >> 0) & 0xFF), ((IICA1_IICCTL10 = (IICA1_IICCTL10 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_SPT </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_STT </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_ACKE </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_WTIM </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_SPIE </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_WREL </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_LREL </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL10_IICE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: IICA1_IICCTL11  -----------------------------
// SVD Line: 8276

unsigned char IICA1_IICCTL11 __AT (0x40042E31);



// -----------------------------  Field Item: IICA1_IICCTL11_PRS  ---------------------------------
// SVD Line: 8284

//  <item> SFDITEM_FIELD__IICA1_IICCTL11_PRS
//    <name> PRS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042E31) Operation clock (fMCK) contro </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL11 ) </loc>
//      <o.0..0> PRS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL11_DFC  ---------------------------------
// SVD Line: 8291

//  <item> SFDITEM_FIELD__IICA1_IICCTL11_DFC
//    <name> DFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042E31) Digital filter operation control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL11 ) </loc>
//      <o.2..2> DFC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL11_SMC  ---------------------------------
// SVD Line: 8298

//  <item> SFDITEM_FIELD__IICA1_IICCTL11_SMC
//    <name> SMC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042E31) Operation mode switching </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL11 ) </loc>
//      <o.3..3> SMC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL11_DAD  ---------------------------------
// SVD Line: 8305

//  <item> SFDITEM_FIELD__IICA1_IICCTL11_DAD
//    <name> DAD </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40042E31) Detection of SDAAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL11 ) </loc>
//      <o.4..4> DAD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL11_CLD  ---------------------------------
// SVD Line: 8312

//  <item> SFDITEM_FIELD__IICA1_IICCTL11_CLD
//    <name> CLD </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40042E31) Detection of SCLAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL11 ) </loc>
//      <o.5..5> CLD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICCTL11_WUP  ---------------------------------
// SVD Line: 8319

//  <item> SFDITEM_FIELD__IICA1_IICCTL11_WUP
//    <name> WUP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042E31) Control of address match wakeup </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICCTL11 ) </loc>
//      <o.7..7> WUP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: IICA1_IICCTL11  ---------------------------------
// SVD Line: 8276

//  <rtree> SFDITEM_REG__IICA1_IICCTL11
//    <name> IICCTL11 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042E31) IICA1 control register 1 </i>
//    <loc> ( (unsigned char)((IICA1_IICCTL11 >> 0) & 0xFF), ((IICA1_IICCTL11 = (IICA1_IICCTL11 & ~(0x8DUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA1_IICCTL11_PRS </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL11_DFC </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL11_SMC </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL11_DAD </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL11_CLD </item>
//    <item> SFDITEM_FIELD__IICA1_IICCTL11_WUP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IICA1_IICWL1  ------------------------------
// SVD Line: 8328

unsigned char IICA1_IICWL1 __AT (0x40042E32);



// -------------------------------  Register Item: IICA1_IICWL1  ----------------------------------
// SVD Line: 8328

//  <item> SFDITEM_REG__IICA1_IICWL1
//    <name> IICWL1 </name>
//    <i> [Bits 7..0] RW (@ 0x40042E32) IICA1 low-level width setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA1_IICWL1 >> 0) & 0xFFFFFFFF), ((IICA1_IICWL1 = (IICA1_IICWL1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA1_IICWH1  ------------------------------
// SVD Line: 8336

unsigned char IICA1_IICWH1 __AT (0x40042E33);



// -------------------------------  Register Item: IICA1_IICWH1  ----------------------------------
// SVD Line: 8336

//  <item> SFDITEM_REG__IICA1_IICWH1
//    <name> IICWH1 </name>
//    <i> [Bits 7..0] RW (@ 0x40042E33) IICA1 high-level width setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA1_IICWH1 >> 0) & 0xFFFFFFFF), ((IICA1_IICWH1 = (IICA1_IICWH1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA1_SVA1  -------------------------------
// SVD Line: 8344

unsigned char IICA1_SVA1 __AT (0x40042E34);



// --------------------------------  Register Item: IICA1_SVA1  -----------------------------------
// SVD Line: 8344

//  <item> SFDITEM_REG__IICA1_SVA1
//    <name> SVA1 </name>
//    <i> [Bits 7..0] RW (@ 0x40042E34) Slave address register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA1_SVA1 >> 0) & 0xFFFFFFFF), ((IICA1_SVA1 = (IICA1_SVA1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA1_IICA1  -------------------------------
// SVD Line: 8352

unsigned char IICA1_IICA1 __AT (0x40042F50);



// -------------------------------  Register Item: IICA1_IICA1  -----------------------------------
// SVD Line: 8352

//  <item> SFDITEM_REG__IICA1_IICA1
//    <name> IICA1 </name>
//    <i> [Bits 7..0] RW (@ 0x40042F50) IICA1 shift register </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA1_IICA1 >> 0) & 0xFFFFFFFF), ((IICA1_IICA1 = (IICA1_IICA1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA1_IICS1  -------------------------------
// SVD Line: 8360

unsigned char IICA1_IICS1 __AT (0x40042F51);



// ------------------------------  Field Item: IICA1_IICS1_MSTS  ----------------------------------
// SVD Line: 8369

//  <item> SFDITEM_FIELD__IICA1_IICS1_MSTS
//    <name> MSTS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40042F51) Master status check flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.7..7> MSTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA1_IICS1_ALD  ----------------------------------
// SVD Line: 8375

//  <item> SFDITEM_FIELD__IICA1_IICS1_ALD
//    <name> ALD </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40042F51) Detection of arbitration loss </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.6..6> ALD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA1_IICS1_EXC  ----------------------------------
// SVD Line: 8381

//  <item> SFDITEM_FIELD__IICA1_IICS1_EXC
//    <name> EXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40042F51) Detection of extension code reception </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.5..5> EXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA1_IICS1_COI  ----------------------------------
// SVD Line: 8387

//  <item> SFDITEM_FIELD__IICA1_IICS1_COI
//    <name> COI </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40042F51) Detection of matching addresses </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.4..4> COI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA1_IICS1_TRC  ----------------------------------
// SVD Line: 8393

//  <item> SFDITEM_FIELD__IICA1_IICS1_TRC
//    <name> TRC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40042F51) Detection of transmit/receive status </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.3..3> TRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA1_IICS1_ACKD  ----------------------------------
// SVD Line: 8399

//  <item> SFDITEM_FIELD__IICA1_IICS1_ACKD
//    <name> ACKD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40042F51) Detection of acknowledge (ACK) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.2..2> ACKD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA1_IICS1_STD  ----------------------------------
// SVD Line: 8405

//  <item> SFDITEM_FIELD__IICA1_IICS1_STD
//    <name> STD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40042F51) Detection of start condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.1..1> STD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA1_IICS1_SPD  ----------------------------------
// SVD Line: 8411

//  <item> SFDITEM_FIELD__IICA1_IICS1_SPD
//    <name> SPD </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40042F51) Detection of stop condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICS1 ) </loc>
//      <o.0..0> SPD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA1_IICS1  ----------------------------------
// SVD Line: 8360

//  <rtree> SFDITEM_REG__IICA1_IICS1
//    <name> IICS1 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40042F51) IICA1 status register </i>
//    <loc> ( (unsigned char)((IICA1_IICS1 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__IICA1_IICS1_MSTS </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_ALD </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_EXC </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_COI </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_TRC </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_ACKD </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_STD </item>
//    <item> SFDITEM_FIELD__IICA1_IICS1_SPD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IICA1_IICF1  -------------------------------
// SVD Line: 8419

unsigned char IICA1_IICF1 __AT (0x40042F52);



// ------------------------------  Field Item: IICA1_IICF1_STCF  ----------------------------------
// SVD Line: 8428

//  <item> SFDITEM_FIELD__IICA1_IICF1_STCF
//    <name> STCF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40042F52) STT clear flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICF1 ) </loc>
//      <o.7..7> STCF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICF1_IICBSY  ---------------------------------
// SVD Line: 8435

//  <item> SFDITEM_FIELD__IICA1_IICF1_IICBSY
//    <name> IICBSY </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40042F52) I2C bus status flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICF1 ) </loc>
//      <o.6..6> IICBSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA1_IICF1_STCEN  ---------------------------------
// SVD Line: 8442

//  <item> SFDITEM_FIELD__IICA1_IICF1_STCEN
//    <name> STCEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042F52) Initial start enable trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICF1 ) </loc>
//      <o.1..1> STCEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA1_IICF1_IICRSV  ---------------------------------
// SVD Line: 8449

//  <item> SFDITEM_FIELD__IICA1_IICF1_IICRSV
//    <name> IICRSV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042F52) Communication reservation function disable bit </i>
//    <check> 
//      <loc> ( (unsigned char) IICA1_IICF1 ) </loc>
//      <o.0..0> IICRSV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA1_IICF1  ----------------------------------
// SVD Line: 8419

//  <rtree> SFDITEM_REG__IICA1_IICF1
//    <name> IICF1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40042F52) IICA1 flag register </i>
//    <loc> ( (unsigned char)((IICA1_IICF1 >> 0) & 0xFF), ((IICA1_IICF1 = (IICA1_IICF1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA1_IICF1_STCF </item>
//    <item> SFDITEM_FIELD__IICA1_IICF1_IICBSY </item>
//    <item> SFDITEM_FIELD__IICA1_IICF1_STCEN </item>
//    <item> SFDITEM_FIELD__IICA1_IICF1_IICRSV </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: IICA1  -------------------------------------
// SVD Line: 8196

//  <view> IICA1
//    <name> IICA1 </name>
//    <item> SFDITEM_REG__IICA1_IICCTL10 </item>
//    <item> SFDITEM_REG__IICA1_IICCTL11 </item>
//    <item> SFDITEM_REG__IICA1_IICWL1 </item>
//    <item> SFDITEM_REG__IICA1_IICWH1 </item>
//    <item> SFDITEM_REG__IICA1_SVA1 </item>
//    <item> SFDITEM_REG__IICA1_IICA1 </item>
//    <item> SFDITEM_REG__IICA1_IICS1 </item>
//    <item> SFDITEM_REG__IICA1_IICF1 </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN0  -------------------------
// SVD Line: 8531

unsigned char DMA_DMAEN_DMAEN_DMAEN0 __AT (0x40005000);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN0  -----------------------------
// SVD Line: 8531

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN0
//    <name> DMAEN0 </name>
//    <i> [Bits 7..0] RW (@ 0x40005000) DMA activation enable register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN0 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN0 = (DMA_DMAEN_DMAEN_DMAEN0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN1  -------------------------
// SVD Line: 8531

unsigned char DMA_DMAEN_DMAEN_DMAEN1 __AT (0x40005001);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN1  -----------------------------
// SVD Line: 8531

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN1
//    <name> DMAEN1 </name>
//    <i> [Bits 7..0] RW (@ 0x40005001) DMA activation enable register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN1 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN1 = (DMA_DMAEN_DMAEN_DMAEN1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN2  -------------------------
// SVD Line: 8531

unsigned char DMA_DMAEN_DMAEN_DMAEN2 __AT (0x40005002);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN2  -----------------------------
// SVD Line: 8531

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN2
//    <name> DMAEN2 </name>
//    <i> [Bits 7..0] RW (@ 0x40005002) DMA activation enable register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN2 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN2 = (DMA_DMAEN_DMAEN_DMAEN2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN3  -------------------------
// SVD Line: 8531

unsigned char DMA_DMAEN_DMAEN_DMAEN3 __AT (0x40005003);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN3  -----------------------------
// SVD Line: 8531

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN3
//    <name> DMAEN3 </name>
//    <i> [Bits 7..0] RW (@ 0x40005003) DMA activation enable register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN3 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN3 = (DMA_DMAEN_DMAEN_DMAEN3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN4  -------------------------
// SVD Line: 8531

unsigned char DMA_DMAEN_DMAEN_DMAEN4 __AT (0x40005004);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN4  -----------------------------
// SVD Line: 8531

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN4
//    <name> DMAEN4 </name>
//    <i> [Bits 7..0] RW (@ 0x40005004) DMA activation enable register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN4 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN4 = (DMA_DMAEN_DMAEN_DMAEN4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA_DMABAR  -------------------------------
// SVD Line: 8543

unsigned int DMA_DMABAR __AT (0x40005008);



// --------------------------------  Register Item: DMA_DMABAR  -----------------------------------
// SVD Line: 8543

//  <item> SFDITEM_REG__DMA_DMABAR
//    <name> DMABAR </name>
//    <i> [Bits 31..0] RW (@ 0x40005008) DMA base address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_DMABAR >> 0) & 0xFFFFFFFF), ((DMA_DMABAR = (DMA_DMABAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA_IFPRCR  -------------------------------
// SVD Line: 8552

unsigned int DMA_IFPRCR __AT (0x4000500C);



// --------------------------------  Register Item: DMA_IFPRCR  -----------------------------------
// SVD Line: 8552

//  <item> SFDITEM_REG__DMA_IFPRCR
//    <name> IFPRCR </name>
//    <i> [Bits 31..0] RW (@ 0x4000500C) DMA Trigger Protect register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_IFPRCR >> 0) & 0xFFFFFFFF), ((DMA_IFPRCR = (DMA_IFPRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF0  -------------------------
// SVD Line: 8561

unsigned char DMA_DMAIF_DMAIF_DMAIF0 __AT (0x40005010);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF0  -----------------------------
// SVD Line: 8561

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF0
//    <name> DMAIF0 </name>
//    <i> [Bits 7..0] RW (@ 0x40005010) DMA Trigger enable register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF0 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF0 = (DMA_DMAIF_DMAIF_DMAIF0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF1  -------------------------
// SVD Line: 8561

unsigned char DMA_DMAIF_DMAIF_DMAIF1 __AT (0x40005011);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF1  -----------------------------
// SVD Line: 8561

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF1
//    <name> DMAIF1 </name>
//    <i> [Bits 7..0] RW (@ 0x40005011) DMA Trigger enable register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF1 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF1 = (DMA_DMAIF_DMAIF_DMAIF1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF2  -------------------------
// SVD Line: 8561

unsigned char DMA_DMAIF_DMAIF_DMAIF2 __AT (0x40005012);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF2  -----------------------------
// SVD Line: 8561

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF2
//    <name> DMAIF2 </name>
//    <i> [Bits 7..0] RW (@ 0x40005012) DMA Trigger enable register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF2 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF2 = (DMA_DMAIF_DMAIF_DMAIF2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF3  -------------------------
// SVD Line: 8561

unsigned char DMA_DMAIF_DMAIF_DMAIF3 __AT (0x40005013);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF3  -----------------------------
// SVD Line: 8561

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF3
//    <name> DMAIF3 </name>
//    <i> [Bits 7..0] RW (@ 0x40005013) DMA Trigger enable register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF3 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF3 = (DMA_DMAIF_DMAIF_DMAIF3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF4  -------------------------
// SVD Line: 8561

unsigned char DMA_DMAIF_DMAIF_DMAIF4 __AT (0x40005014);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF4  -----------------------------
// SVD Line: 8561

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF4
//    <name> DMAIF4 </name>
//    <i> [Bits 7..0] RW (@ 0x40005014) DMA Trigger enable register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF4 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF4 = (DMA_DMAIF_DMAIF_DMAIF4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA  --------------------------------------
// SVD Line: 8515

//  <view> DMA
//    <name> DMA </name>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN0 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN1 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN2 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN3 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN4 </item>
//    <item> SFDITEM_REG__DMA_DMABAR </item>
//    <item> SFDITEM_REG__DMA_IFPRCR </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF0 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF1 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF2 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF3 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF4 </item>
//  </view>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC0  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC0 __AT (0x20000000);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC0  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC0
//    <name> [0] </name>
//    <i> [Bits 7..0] RW (@ 0x20000000) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC0 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC0 = (DMAVEC_VEC_VEC_VEC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC1  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC1 __AT (0x20000001);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC1  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC1
//    <name> [1] </name>
//    <i> [Bits 7..0] RW (@ 0x20000001) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC1 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC1 = (DMAVEC_VEC_VEC_VEC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC2  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC2 __AT (0x20000002);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC2  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC2
//    <name> [2] </name>
//    <i> [Bits 7..0] RW (@ 0x20000002) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC2 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC2 = (DMAVEC_VEC_VEC_VEC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC3  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC3 __AT (0x20000003);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC3  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC3
//    <name> [3] </name>
//    <i> [Bits 7..0] RW (@ 0x20000003) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC3 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC3 = (DMAVEC_VEC_VEC_VEC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC4  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC4 __AT (0x20000004);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC4  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC4
//    <name> [4] </name>
//    <i> [Bits 7..0] RW (@ 0x20000004) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC4 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC4 = (DMAVEC_VEC_VEC_VEC4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC5  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC5 __AT (0x20000005);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC5  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC5
//    <name> [5] </name>
//    <i> [Bits 7..0] RW (@ 0x20000005) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC5 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC5 = (DMAVEC_VEC_VEC_VEC5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC6  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC6 __AT (0x20000006);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC6  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC6
//    <name> [6] </name>
//    <i> [Bits 7..0] RW (@ 0x20000006) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC6 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC6 = (DMAVEC_VEC_VEC_VEC6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC7  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC7 __AT (0x20000007);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC7  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC7
//    <name> [7] </name>
//    <i> [Bits 7..0] RW (@ 0x20000007) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC7 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC7 = (DMAVEC_VEC_VEC_VEC7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC8  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC8 __AT (0x20000008);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC8  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC8
//    <name> [8] </name>
//    <i> [Bits 7..0] RW (@ 0x20000008) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC8 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC8 = (DMAVEC_VEC_VEC_VEC8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC9  ------------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC9 __AT (0x20000009);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC9  ----------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC9
//    <name> [9] </name>
//    <i> [Bits 7..0] RW (@ 0x20000009) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC9 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC9 = (DMAVEC_VEC_VEC_VEC9 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC10  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC10 __AT (0x2000000A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC10  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC10
//    <name> [10] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC10 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC10 = (DMAVEC_VEC_VEC_VEC10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC11  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC11 __AT (0x2000000B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC11  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC11
//    <name> [11] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC11 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC11 = (DMAVEC_VEC_VEC_VEC11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC12  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC12 __AT (0x2000000C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC12  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC12
//    <name> [12] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC12 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC12 = (DMAVEC_VEC_VEC_VEC12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC13  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC13 __AT (0x2000000D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC13  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC13
//    <name> [13] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC13 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC13 = (DMAVEC_VEC_VEC_VEC13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC14  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC14 __AT (0x2000000E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC14  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC14
//    <name> [14] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC14 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC14 = (DMAVEC_VEC_VEC_VEC14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC15  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC15 __AT (0x2000000F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC15  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC15
//    <name> [15] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC15 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC15 = (DMAVEC_VEC_VEC_VEC15 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC16  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC16 __AT (0x20000010);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC16  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC16
//    <name> [16] </name>
//    <i> [Bits 7..0] RW (@ 0x20000010) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC16 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC16 = (DMAVEC_VEC_VEC_VEC16 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC17  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC17 __AT (0x20000011);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC17  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC17
//    <name> [17] </name>
//    <i> [Bits 7..0] RW (@ 0x20000011) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC17 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC17 = (DMAVEC_VEC_VEC_VEC17 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC18  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC18 __AT (0x20000012);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC18  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC18
//    <name> [18] </name>
//    <i> [Bits 7..0] RW (@ 0x20000012) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC18 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC18 = (DMAVEC_VEC_VEC_VEC18 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC19  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC19 __AT (0x20000013);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC19  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC19
//    <name> [19] </name>
//    <i> [Bits 7..0] RW (@ 0x20000013) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC19 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC19 = (DMAVEC_VEC_VEC_VEC19 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC20  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC20 __AT (0x20000014);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC20  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC20
//    <name> [20] </name>
//    <i> [Bits 7..0] RW (@ 0x20000014) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC20 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC20 = (DMAVEC_VEC_VEC_VEC20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC21  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC21 __AT (0x20000015);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC21  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC21
//    <name> [21] </name>
//    <i> [Bits 7..0] RW (@ 0x20000015) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC21 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC21 = (DMAVEC_VEC_VEC_VEC21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC22  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC22 __AT (0x20000016);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC22  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC22
//    <name> [22] </name>
//    <i> [Bits 7..0] RW (@ 0x20000016) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC22 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC22 = (DMAVEC_VEC_VEC_VEC22 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC23  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC23 __AT (0x20000017);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC23  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC23
//    <name> [23] </name>
//    <i> [Bits 7..0] RW (@ 0x20000017) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC23 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC23 = (DMAVEC_VEC_VEC_VEC23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC24  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC24 __AT (0x20000018);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC24  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC24
//    <name> [24] </name>
//    <i> [Bits 7..0] RW (@ 0x20000018) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC24 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC24 = (DMAVEC_VEC_VEC_VEC24 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC25  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC25 __AT (0x20000019);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC25  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC25
//    <name> [25] </name>
//    <i> [Bits 7..0] RW (@ 0x20000019) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC25 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC25 = (DMAVEC_VEC_VEC_VEC25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC26  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC26 __AT (0x2000001A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC26  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC26
//    <name> [26] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC26 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC26 = (DMAVEC_VEC_VEC_VEC26 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC27  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC27 __AT (0x2000001B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC27  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC27
//    <name> [27] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC27 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC27 = (DMAVEC_VEC_VEC_VEC27 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC28  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC28 __AT (0x2000001C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC28  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC28
//    <name> [28] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC28 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC28 = (DMAVEC_VEC_VEC_VEC28 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC29  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC29 __AT (0x2000001D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC29  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC29
//    <name> [29] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC29 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC29 = (DMAVEC_VEC_VEC_VEC29 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC30  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC30 __AT (0x2000001E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC30  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC30
//    <name> [30] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC30 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC30 = (DMAVEC_VEC_VEC_VEC30 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC31  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC31 __AT (0x2000001F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC31  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC31
//    <name> [31] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC31 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC31 = (DMAVEC_VEC_VEC_VEC31 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC32  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC32 __AT (0x20000020);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC32  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC32
//    <name> [32] </name>
//    <i> [Bits 7..0] RW (@ 0x20000020) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC32 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC32 = (DMAVEC_VEC_VEC_VEC32 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC33  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC33 __AT (0x20000021);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC33  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC33
//    <name> [33] </name>
//    <i> [Bits 7..0] RW (@ 0x20000021) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC33 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC33 = (DMAVEC_VEC_VEC_VEC33 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC34  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC34 __AT (0x20000022);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC34  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC34
//    <name> [34] </name>
//    <i> [Bits 7..0] RW (@ 0x20000022) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC34 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC34 = (DMAVEC_VEC_VEC_VEC34 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC35  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC35 __AT (0x20000023);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC35  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC35
//    <name> [35] </name>
//    <i> [Bits 7..0] RW (@ 0x20000023) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC35 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC35 = (DMAVEC_VEC_VEC_VEC35 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC36  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC36 __AT (0x20000024);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC36  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC36
//    <name> [36] </name>
//    <i> [Bits 7..0] RW (@ 0x20000024) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC36 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC36 = (DMAVEC_VEC_VEC_VEC36 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC37  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC37 __AT (0x20000025);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC37  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC37
//    <name> [37] </name>
//    <i> [Bits 7..0] RW (@ 0x20000025) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC37 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC37 = (DMAVEC_VEC_VEC_VEC37 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC38  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC38 __AT (0x20000026);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC38  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC38
//    <name> [38] </name>
//    <i> [Bits 7..0] RW (@ 0x20000026) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC38 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC38 = (DMAVEC_VEC_VEC_VEC38 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC39  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC39 __AT (0x20000027);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC39  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC39
//    <name> [39] </name>
//    <i> [Bits 7..0] RW (@ 0x20000027) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC39 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC39 = (DMAVEC_VEC_VEC_VEC39 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC40  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC40 __AT (0x20000028);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC40  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC40
//    <name> [40] </name>
//    <i> [Bits 7..0] RW (@ 0x20000028) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC40 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC40 = (DMAVEC_VEC_VEC_VEC40 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC41  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC41 __AT (0x20000029);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC41  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC41
//    <name> [41] </name>
//    <i> [Bits 7..0] RW (@ 0x20000029) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC41 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC41 = (DMAVEC_VEC_VEC_VEC41 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC42  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC42 __AT (0x2000002A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC42  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC42
//    <name> [42] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC42 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC42 = (DMAVEC_VEC_VEC_VEC42 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC43  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC43 __AT (0x2000002B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC43  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC43
//    <name> [43] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC43 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC43 = (DMAVEC_VEC_VEC_VEC43 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC44  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC44 __AT (0x2000002C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC44  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC44
//    <name> [44] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC44 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC44 = (DMAVEC_VEC_VEC_VEC44 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC45  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC45 __AT (0x2000002D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC45  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC45
//    <name> [45] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC45 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC45 = (DMAVEC_VEC_VEC_VEC45 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC46  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC46 __AT (0x2000002E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC46  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC46
//    <name> [46] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC46 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC46 = (DMAVEC_VEC_VEC_VEC46 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC47  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC47 __AT (0x2000002F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC47  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC47
//    <name> [47] </name>
//    <i> [Bits 7..0] RW (@ 0x2000002F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC47 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC47 = (DMAVEC_VEC_VEC_VEC47 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC48  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC48 __AT (0x20000030);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC48  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC48
//    <name> [48] </name>
//    <i> [Bits 7..0] RW (@ 0x20000030) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC48 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC48 = (DMAVEC_VEC_VEC_VEC48 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC49  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC49 __AT (0x20000031);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC49  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC49
//    <name> [49] </name>
//    <i> [Bits 7..0] RW (@ 0x20000031) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC49 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC49 = (DMAVEC_VEC_VEC_VEC49 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC50  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC50 __AT (0x20000032);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC50  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC50
//    <name> [50] </name>
//    <i> [Bits 7..0] RW (@ 0x20000032) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC50 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC50 = (DMAVEC_VEC_VEC_VEC50 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC51  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC51 __AT (0x20000033);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC51  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC51
//    <name> [51] </name>
//    <i> [Bits 7..0] RW (@ 0x20000033) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC51 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC51 = (DMAVEC_VEC_VEC_VEC51 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC52  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC52 __AT (0x20000034);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC52  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC52
//    <name> [52] </name>
//    <i> [Bits 7..0] RW (@ 0x20000034) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC52 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC52 = (DMAVEC_VEC_VEC_VEC52 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC53  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC53 __AT (0x20000035);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC53  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC53
//    <name> [53] </name>
//    <i> [Bits 7..0] RW (@ 0x20000035) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC53 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC53 = (DMAVEC_VEC_VEC_VEC53 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC54  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC54 __AT (0x20000036);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC54  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC54
//    <name> [54] </name>
//    <i> [Bits 7..0] RW (@ 0x20000036) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC54 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC54 = (DMAVEC_VEC_VEC_VEC54 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC55  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC55 __AT (0x20000037);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC55  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC55
//    <name> [55] </name>
//    <i> [Bits 7..0] RW (@ 0x20000037) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC55 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC55 = (DMAVEC_VEC_VEC_VEC55 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC56  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC56 __AT (0x20000038);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC56  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC56
//    <name> [56] </name>
//    <i> [Bits 7..0] RW (@ 0x20000038) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC56 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC56 = (DMAVEC_VEC_VEC_VEC56 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC57  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC57 __AT (0x20000039);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC57  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC57
//    <name> [57] </name>
//    <i> [Bits 7..0] RW (@ 0x20000039) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC57 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC57 = (DMAVEC_VEC_VEC_VEC57 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC58  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC58 __AT (0x2000003A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC58  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC58
//    <name> [58] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC58 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC58 = (DMAVEC_VEC_VEC_VEC58 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC59  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC59 __AT (0x2000003B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC59  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC59
//    <name> [59] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC59 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC59 = (DMAVEC_VEC_VEC_VEC59 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC60  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC60 __AT (0x2000003C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC60  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC60
//    <name> [60] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC60 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC60 = (DMAVEC_VEC_VEC_VEC60 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC61  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC61 __AT (0x2000003D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC61  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC61
//    <name> [61] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC61 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC61 = (DMAVEC_VEC_VEC_VEC61 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC62  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC62 __AT (0x2000003E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC62  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC62
//    <name> [62] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC62 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC62 = (DMAVEC_VEC_VEC_VEC62 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC63  -----------------------
// SVD Line: 8594

unsigned char DMAVEC_VEC_VEC_VEC63 __AT (0x2000003F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC63  ---------------------------
// SVD Line: 8594

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC63
//    <name> [63] </name>
//    <i> [Bits 7..0] RW (@ 0x2000003F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC63 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC63 = (DMAVEC_VEC_VEC_VEC63 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Array ITree: DMAVEC_VEC  --------------------------------
// SVD Line: 8594

//  <itree> SFDITEM_REG__DMAVEC_VEC
//    <name> VEC </name>
//    <i> DMA vector area </i>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC0 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC1 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC2 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC3 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC4 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC5 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC6 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC7 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC8 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC9 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC10 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC11 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC12 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC13 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC14 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC15 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC16 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC17 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC18 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC19 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC20 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC21 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC22 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC23 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC24 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC25 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC26 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC27 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC28 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC29 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC30 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC31 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC32 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC33 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC34 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC35 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC36 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC37 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC38 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC39 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC40 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC41 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC42 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC43 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC44 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC45 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC46 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC47 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC48 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC49 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC50 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC51 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC52 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC53 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC54 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC55 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC56 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC57 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC58 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC59 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC60 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC61 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC62 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC63 </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMACR __AT (0x20000040);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000040) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000040) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000040) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000040) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000040) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000040) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000040) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000040) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL0_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000040) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMACR = (DMAVEC_CTRL_CTRL_CTRL0_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMBLS __AT (0x20000042);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000042) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMBLS = (DMAVEC_CTRL_CTRL_CTRL0_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMACT __AT (0x20000044);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000044) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMACT = (DMAVEC_CTRL_CTRL_CTRL0_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMRLD __AT (0x20000046);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000046) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMRLD = (DMAVEC_CTRL_CTRL_CTRL0_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL0_DMSAR __AT (0x20000048);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000048) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL0_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMSAR = (DMAVEC_CTRL_CTRL_CTRL0_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL0_DMDAR __AT (0x2000004C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000004C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL0_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMDAR = (DMAVEC_CTRL_CTRL_CTRL0_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL0  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL0
//    <name> [0] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMACR __AT (0x20000050);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000050) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000050) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000050) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000050) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000050) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000050) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000050) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000050) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL1_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000050) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMACR = (DMAVEC_CTRL_CTRL_CTRL1_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMBLS __AT (0x20000052);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000052) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMBLS = (DMAVEC_CTRL_CTRL_CTRL1_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMACT __AT (0x20000054);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000054) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMACT = (DMAVEC_CTRL_CTRL_CTRL1_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMRLD __AT (0x20000056);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000056) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMRLD = (DMAVEC_CTRL_CTRL_CTRL1_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL1_DMSAR __AT (0x20000058);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000058) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL1_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMSAR = (DMAVEC_CTRL_CTRL_CTRL1_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL1_DMDAR __AT (0x2000005C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000005C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL1_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMDAR = (DMAVEC_CTRL_CTRL_CTRL1_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL1  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL1
//    <name> [1] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMACR __AT (0x20000060);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000060) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000060) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000060) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000060) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000060) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000060) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000060) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000060) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL2_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000060) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMACR = (DMAVEC_CTRL_CTRL_CTRL2_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMBLS __AT (0x20000062);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000062) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMBLS = (DMAVEC_CTRL_CTRL_CTRL2_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMACT __AT (0x20000064);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000064) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMACT = (DMAVEC_CTRL_CTRL_CTRL2_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMRLD __AT (0x20000066);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000066) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMRLD = (DMAVEC_CTRL_CTRL_CTRL2_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL2_DMSAR __AT (0x20000068);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000068) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL2_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMSAR = (DMAVEC_CTRL_CTRL_CTRL2_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL2_DMDAR __AT (0x2000006C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000006C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL2_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMDAR = (DMAVEC_CTRL_CTRL_CTRL2_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL2  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL2
//    <name> [2] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMACR __AT (0x20000070);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000070) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000070) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000070) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000070) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000070) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000070) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000070) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000070) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL3_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000070) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMACR = (DMAVEC_CTRL_CTRL_CTRL3_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMBLS __AT (0x20000072);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000072) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMBLS = (DMAVEC_CTRL_CTRL_CTRL3_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMACT __AT (0x20000074);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000074) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMACT = (DMAVEC_CTRL_CTRL_CTRL3_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMRLD __AT (0x20000076);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000076) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMRLD = (DMAVEC_CTRL_CTRL_CTRL3_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL3_DMSAR __AT (0x20000078);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000078) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL3_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMSAR = (DMAVEC_CTRL_CTRL_CTRL3_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL3_DMDAR __AT (0x2000007C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000007C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL3_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMDAR = (DMAVEC_CTRL_CTRL_CTRL3_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL3  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL3
//    <name> [3] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMACR __AT (0x20000080);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000080) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000080) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000080) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000080) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000080) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000080) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000080) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000080) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL4_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000080) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMACR = (DMAVEC_CTRL_CTRL_CTRL4_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMBLS __AT (0x20000082);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000082) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMBLS = (DMAVEC_CTRL_CTRL_CTRL4_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMACT __AT (0x20000084);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000084) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMACT = (DMAVEC_CTRL_CTRL_CTRL4_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMRLD __AT (0x20000086);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000086) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMRLD = (DMAVEC_CTRL_CTRL_CTRL4_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL4_DMSAR __AT (0x20000088);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000088) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL4_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMSAR = (DMAVEC_CTRL_CTRL_CTRL4_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL4_DMDAR __AT (0x2000008C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000008C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL4_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMDAR = (DMAVEC_CTRL_CTRL_CTRL4_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL4  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL4
//    <name> [4] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMACR __AT (0x20000090);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000090) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000090) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000090) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000090) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000090) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000090) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000090) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000090) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL5_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000090) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMACR = (DMAVEC_CTRL_CTRL_CTRL5_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMBLS __AT (0x20000092);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000092) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMBLS = (DMAVEC_CTRL_CTRL_CTRL5_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMACT __AT (0x20000094);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000094) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMACT = (DMAVEC_CTRL_CTRL_CTRL5_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMRLD __AT (0x20000096);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000096) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMRLD = (DMAVEC_CTRL_CTRL_CTRL5_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL5_DMSAR __AT (0x20000098);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000098) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL5_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMSAR = (DMAVEC_CTRL_CTRL_CTRL5_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL5_DMDAR __AT (0x2000009C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000009C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL5_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMDAR = (DMAVEC_CTRL_CTRL_CTRL5_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL5  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL5
//    <name> [5] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMACR __AT (0x200000A0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200000A0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL6_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMACR = (DMAVEC_CTRL_CTRL_CTRL6_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMBLS __AT (0x200000A2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMBLS = (DMAVEC_CTRL_CTRL_CTRL6_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMACT __AT (0x200000A4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMACT = (DMAVEC_CTRL_CTRL_CTRL6_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMRLD __AT (0x200000A6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMRLD = (DMAVEC_CTRL_CTRL_CTRL6_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL6_DMSAR __AT (0x200000A8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL6_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMSAR = (DMAVEC_CTRL_CTRL_CTRL6_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL6_DMDAR __AT (0x200000AC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL6_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMDAR = (DMAVEC_CTRL_CTRL_CTRL6_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL6  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL6
//    <name> [6] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMACR __AT (0x200000B0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200000B0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL7_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMACR = (DMAVEC_CTRL_CTRL_CTRL7_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMBLS __AT (0x200000B2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMBLS = (DMAVEC_CTRL_CTRL_CTRL7_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMACT __AT (0x200000B4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMACT = (DMAVEC_CTRL_CTRL_CTRL7_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMRLD __AT (0x200000B6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMRLD = (DMAVEC_CTRL_CTRL_CTRL7_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL7_DMSAR __AT (0x200000B8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL7_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMSAR = (DMAVEC_CTRL_CTRL_CTRL7_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL7_DMDAR __AT (0x200000BC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL7_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMDAR = (DMAVEC_CTRL_CTRL_CTRL7_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL7  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL7
//    <name> [7] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMACR __AT (0x200000C0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200000C0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000C0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000C0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000C0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000C0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000C0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000C0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000C0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL8_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000C0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMACR = (DMAVEC_CTRL_CTRL_CTRL8_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMBLS __AT (0x200000C2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000C2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMBLS = (DMAVEC_CTRL_CTRL_CTRL8_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMACT __AT (0x200000C4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000C4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMACT = (DMAVEC_CTRL_CTRL_CTRL8_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMRLD __AT (0x200000C6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000C6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMRLD = (DMAVEC_CTRL_CTRL_CTRL8_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL8_DMSAR __AT (0x200000C8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000C8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL8_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMSAR = (DMAVEC_CTRL_CTRL_CTRL8_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL8_DMDAR __AT (0x200000CC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000CC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL8_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMDAR = (DMAVEC_CTRL_CTRL_CTRL8_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL8  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL8
//    <name> [8] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMACR __AT (0x200000D0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200000D0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000D0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000D0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000D0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD  -------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000D0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD  -------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000D0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000D0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000D0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL9_DMACR  --------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000D0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMACR = (DMAVEC_CTRL_CTRL_CTRL9_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMBLS __AT (0x200000D2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000D2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMBLS = (DMAVEC_CTRL_CTRL_CTRL9_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMACT __AT (0x200000D4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000D4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMACT = (DMAVEC_CTRL_CTRL_CTRL9_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMRLD __AT (0x200000D6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000D6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMRLD = (DMAVEC_CTRL_CTRL_CTRL9_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL9_DMSAR __AT (0x200000D8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000D8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL9_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMSAR = (DMAVEC_CTRL_CTRL_CTRL9_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL9_DMDAR __AT (0x200000DC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000DC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL9_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMDAR = (DMAVEC_CTRL_CTRL_CTRL9_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL9  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL9
//    <name> [9] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMACR __AT (0x200000E0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200000E0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000E0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000E0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000E0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000E0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000E0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000E0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000E0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL10_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000E0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMACR = (DMAVEC_CTRL_CTRL_CTRL10_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMBLS __AT (0x200000E2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000E2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMBLS = (DMAVEC_CTRL_CTRL_CTRL10_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMACT __AT (0x200000E4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000E4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMACT = (DMAVEC_CTRL_CTRL_CTRL10_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMRLD __AT (0x200000E6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000E6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMRLD = (DMAVEC_CTRL_CTRL_CTRL10_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL10_DMSAR __AT (0x200000E8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000E8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL10_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMSAR = (DMAVEC_CTRL_CTRL_CTRL10_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL10_DMDAR __AT (0x200000EC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000EC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL10_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMDAR = (DMAVEC_CTRL_CTRL_CTRL10_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL10  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL10
//    <name> [10] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMACR __AT (0x200000F0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200000F0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000F0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000F0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000F0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000F0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000F0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000F0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000F0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL11_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000F0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMACR = (DMAVEC_CTRL_CTRL_CTRL11_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMBLS __AT (0x200000F2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000F2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMBLS = (DMAVEC_CTRL_CTRL_CTRL11_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMACT __AT (0x200000F4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000F4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMACT = (DMAVEC_CTRL_CTRL_CTRL11_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMRLD __AT (0x200000F6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000F6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMRLD = (DMAVEC_CTRL_CTRL_CTRL11_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL11_DMSAR __AT (0x200000F8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000F8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL11_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMSAR = (DMAVEC_CTRL_CTRL_CTRL11_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL11_DMDAR __AT (0x200000FC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000FC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL11_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMDAR = (DMAVEC_CTRL_CTRL_CTRL11_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL11  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL11
//    <name> [11] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMACR __AT (0x20000100);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000100) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000100) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000100) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000100) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000100) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000100) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000100) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000100) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL12_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000100) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMACR = (DMAVEC_CTRL_CTRL_CTRL12_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMBLS __AT (0x20000102);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000102) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMBLS = (DMAVEC_CTRL_CTRL_CTRL12_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMACT __AT (0x20000104);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000104) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMACT = (DMAVEC_CTRL_CTRL_CTRL12_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMRLD __AT (0x20000106);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000106) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMRLD = (DMAVEC_CTRL_CTRL_CTRL12_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL12_DMSAR __AT (0x20000108);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000108) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL12_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMSAR = (DMAVEC_CTRL_CTRL_CTRL12_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL12_DMDAR __AT (0x2000010C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000010C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL12_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMDAR = (DMAVEC_CTRL_CTRL_CTRL12_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL12  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL12
//    <name> [12] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMACR __AT (0x20000110);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000110) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000110) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000110) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000110) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000110) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000110) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000110) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000110) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL13_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000110) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMACR = (DMAVEC_CTRL_CTRL_CTRL13_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMBLS __AT (0x20000112);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000112) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMBLS = (DMAVEC_CTRL_CTRL_CTRL13_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMACT __AT (0x20000114);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000114) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMACT = (DMAVEC_CTRL_CTRL_CTRL13_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMRLD __AT (0x20000116);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000116) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMRLD = (DMAVEC_CTRL_CTRL_CTRL13_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL13_DMSAR __AT (0x20000118);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000118) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL13_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMSAR = (DMAVEC_CTRL_CTRL_CTRL13_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL13_DMDAR __AT (0x2000011C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000011C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL13_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMDAR = (DMAVEC_CTRL_CTRL_CTRL13_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL13  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL13
//    <name> [13] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMACR __AT (0x20000120);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000120) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000120) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000120) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000120) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000120) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000120) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000120) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000120) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL14_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000120) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMACR = (DMAVEC_CTRL_CTRL_CTRL14_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMBLS __AT (0x20000122);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000122) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMBLS = (DMAVEC_CTRL_CTRL_CTRL14_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMACT __AT (0x20000124);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000124) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMACT = (DMAVEC_CTRL_CTRL_CTRL14_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMRLD __AT (0x20000126);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000126) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMRLD = (DMAVEC_CTRL_CTRL_CTRL14_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL14_DMSAR __AT (0x20000128);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000128) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL14_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMSAR = (DMAVEC_CTRL_CTRL_CTRL14_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL14_DMDAR __AT (0x2000012C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000012C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL14_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMDAR = (DMAVEC_CTRL_CTRL_CTRL14_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL14  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL14
//    <name> [14] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMACR __AT (0x20000130);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000130) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000130) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000130) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000130) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000130) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000130) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000130) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000130) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL15_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000130) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMACR = (DMAVEC_CTRL_CTRL_CTRL15_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMBLS __AT (0x20000132);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000132) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMBLS = (DMAVEC_CTRL_CTRL_CTRL15_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMACT __AT (0x20000134);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000134) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMACT = (DMAVEC_CTRL_CTRL_CTRL15_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMRLD __AT (0x20000136);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000136) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMRLD = (DMAVEC_CTRL_CTRL_CTRL15_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL15_DMSAR __AT (0x20000138);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000138) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL15_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMSAR = (DMAVEC_CTRL_CTRL_CTRL15_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL15_DMDAR __AT (0x2000013C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000013C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL15_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMDAR = (DMAVEC_CTRL_CTRL_CTRL15_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL15  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL15
//    <name> [15] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMACR __AT (0x20000140);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000140) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000140) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000140) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000140) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000140) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000140) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000140) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000140) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL16_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000140) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMACR = (DMAVEC_CTRL_CTRL_CTRL16_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMBLS __AT (0x20000142);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000142) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMBLS = (DMAVEC_CTRL_CTRL_CTRL16_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMACT __AT (0x20000144);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000144) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMACT = (DMAVEC_CTRL_CTRL_CTRL16_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMRLD __AT (0x20000146);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000146) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMRLD = (DMAVEC_CTRL_CTRL_CTRL16_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL16_DMSAR __AT (0x20000148);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000148) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL16_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMSAR = (DMAVEC_CTRL_CTRL_CTRL16_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL16_DMDAR __AT (0x2000014C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000014C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL16_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMDAR = (DMAVEC_CTRL_CTRL_CTRL16_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL16  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL16
//    <name> [16] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMACR __AT (0x20000150);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000150) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000150) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000150) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000150) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000150) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000150) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000150) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000150) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL17_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000150) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMACR = (DMAVEC_CTRL_CTRL_CTRL17_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMBLS __AT (0x20000152);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000152) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMBLS = (DMAVEC_CTRL_CTRL_CTRL17_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMACT __AT (0x20000154);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000154) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMACT = (DMAVEC_CTRL_CTRL_CTRL17_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMRLD __AT (0x20000156);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000156) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMRLD = (DMAVEC_CTRL_CTRL_CTRL17_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL17_DMSAR __AT (0x20000158);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000158) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL17_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMSAR = (DMAVEC_CTRL_CTRL_CTRL17_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL17_DMDAR __AT (0x2000015C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000015C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL17_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMDAR = (DMAVEC_CTRL_CTRL_CTRL17_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL17  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL17
//    <name> [17] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMACR __AT (0x20000160);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000160) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000160) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000160) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000160) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000160) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000160) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000160) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000160) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL18_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000160) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMACR = (DMAVEC_CTRL_CTRL_CTRL18_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMBLS __AT (0x20000162);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000162) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMBLS = (DMAVEC_CTRL_CTRL_CTRL18_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMACT __AT (0x20000164);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000164) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMACT = (DMAVEC_CTRL_CTRL_CTRL18_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMRLD __AT (0x20000166);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000166) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMRLD = (DMAVEC_CTRL_CTRL_CTRL18_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL18_DMSAR __AT (0x20000168);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000168) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL18_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMSAR = (DMAVEC_CTRL_CTRL_CTRL18_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL18_DMDAR __AT (0x2000016C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000016C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL18_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMDAR = (DMAVEC_CTRL_CTRL_CTRL18_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL18  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL18
//    <name> [18] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMACR __AT (0x20000170);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000170) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000170) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000170) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000170) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000170) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000170) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000170) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000170) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL19_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000170) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMACR = (DMAVEC_CTRL_CTRL_CTRL19_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMBLS __AT (0x20000172);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000172) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMBLS = (DMAVEC_CTRL_CTRL_CTRL19_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMACT __AT (0x20000174);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000174) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMACT = (DMAVEC_CTRL_CTRL_CTRL19_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMRLD __AT (0x20000176);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000176) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMRLD = (DMAVEC_CTRL_CTRL_CTRL19_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL19_DMSAR __AT (0x20000178);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000178) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL19_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMSAR = (DMAVEC_CTRL_CTRL_CTRL19_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL19_DMDAR __AT (0x2000017C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000017C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL19_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMDAR = (DMAVEC_CTRL_CTRL_CTRL19_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL19  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL19
//    <name> [19] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMACR __AT (0x20000180);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000180) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000180) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000180) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000180) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000180) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000180) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000180) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000180) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL20_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000180) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMACR = (DMAVEC_CTRL_CTRL_CTRL20_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMBLS __AT (0x20000182);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000182) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMBLS = (DMAVEC_CTRL_CTRL_CTRL20_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMACT __AT (0x20000184);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000184) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMACT = (DMAVEC_CTRL_CTRL_CTRL20_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMRLD __AT (0x20000186);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000186) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMRLD = (DMAVEC_CTRL_CTRL_CTRL20_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL20_DMSAR __AT (0x20000188);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000188) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL20_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMSAR = (DMAVEC_CTRL_CTRL_CTRL20_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL20_DMDAR __AT (0x2000018C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000018C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL20_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMDAR = (DMAVEC_CTRL_CTRL_CTRL20_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL20  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL20
//    <name> [20] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMACR __AT (0x20000190);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000190) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000190) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000190) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000190) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000190) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000190) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000190) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000190) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL21_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000190) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMACR = (DMAVEC_CTRL_CTRL_CTRL21_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMBLS __AT (0x20000192);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000192) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMBLS = (DMAVEC_CTRL_CTRL_CTRL21_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMACT __AT (0x20000194);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000194) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMACT = (DMAVEC_CTRL_CTRL_CTRL21_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMRLD __AT (0x20000196);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000196) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMRLD = (DMAVEC_CTRL_CTRL_CTRL21_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL21_DMSAR __AT (0x20000198);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000198) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL21_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMSAR = (DMAVEC_CTRL_CTRL_CTRL21_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL21_DMDAR __AT (0x2000019C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000019C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL21_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMDAR = (DMAVEC_CTRL_CTRL_CTRL21_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL21  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL21
//    <name> [21] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMACR __AT (0x200001A0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200001A0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL22_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMACR = (DMAVEC_CTRL_CTRL_CTRL22_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMBLS __AT (0x200001A2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMBLS = (DMAVEC_CTRL_CTRL_CTRL22_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMACT __AT (0x200001A4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMACT = (DMAVEC_CTRL_CTRL_CTRL22_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMRLD __AT (0x200001A6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMRLD = (DMAVEC_CTRL_CTRL_CTRL22_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL22_DMSAR __AT (0x200001A8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL22_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMSAR = (DMAVEC_CTRL_CTRL_CTRL22_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL22_DMDAR __AT (0x200001AC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL22_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMDAR = (DMAVEC_CTRL_CTRL_CTRL22_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL22  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL22
//    <name> [22] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMACR __AT (0x200001B0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200001B0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL23_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMACR = (DMAVEC_CTRL_CTRL_CTRL23_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMBLS __AT (0x200001B2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMBLS = (DMAVEC_CTRL_CTRL_CTRL23_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMACT __AT (0x200001B4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMACT = (DMAVEC_CTRL_CTRL_CTRL23_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMRLD __AT (0x200001B6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMRLD = (DMAVEC_CTRL_CTRL_CTRL23_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL23_DMSAR __AT (0x200001B8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL23_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMSAR = (DMAVEC_CTRL_CTRL_CTRL23_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL23_DMDAR __AT (0x200001BC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL23_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMDAR = (DMAVEC_CTRL_CTRL_CTRL23_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL23  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL23
//    <name> [23] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMACR __AT (0x200001C0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200001C0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001C0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001C0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001C0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001C0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001C0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001C0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL24_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001C0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL24_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL24_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001C0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMACR = (DMAVEC_CTRL_CTRL_CTRL24_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL24_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMBLS __AT (0x200001C2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001C2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMBLS = (DMAVEC_CTRL_CTRL_CTRL24_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMACT __AT (0x200001C4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001C4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMACT = (DMAVEC_CTRL_CTRL_CTRL24_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL24_DMRLD __AT (0x200001C6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001C6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL24_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMRLD = (DMAVEC_CTRL_CTRL_CTRL24_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL24_DMSAR __AT (0x200001C8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001C8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL24_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMSAR = (DMAVEC_CTRL_CTRL_CTRL24_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL24_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL24_DMDAR __AT (0x200001CC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL24_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001CC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL24_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL24_DMDAR = (DMAVEC_CTRL_CTRL_CTRL24_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL24  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL24
//    <name> [24] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL24_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMACR __AT (0x200001D0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200001D0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001D0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001D0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001D0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001D0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001D0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001D0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL25_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001D0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL25_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL25_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001D0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMACR = (DMAVEC_CTRL_CTRL_CTRL25_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL25_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMBLS __AT (0x200001D2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001D2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMBLS = (DMAVEC_CTRL_CTRL_CTRL25_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMACT __AT (0x200001D4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001D4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMACT = (DMAVEC_CTRL_CTRL_CTRL25_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL25_DMRLD __AT (0x200001D6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001D6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL25_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMRLD = (DMAVEC_CTRL_CTRL_CTRL25_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL25_DMSAR __AT (0x200001D8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001D8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL25_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMSAR = (DMAVEC_CTRL_CTRL_CTRL25_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL25_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL25_DMDAR __AT (0x200001DC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL25_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001DC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL25_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL25_DMDAR = (DMAVEC_CTRL_CTRL_CTRL25_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL25  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL25
//    <name> [25] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL25_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMACR __AT (0x200001E0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200001E0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001E0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001E0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001E0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001E0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001E0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001E0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL26_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001E0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL26_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL26_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001E0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMACR = (DMAVEC_CTRL_CTRL_CTRL26_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL26_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMBLS __AT (0x200001E2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001E2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMBLS = (DMAVEC_CTRL_CTRL_CTRL26_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMACT __AT (0x200001E4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001E4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMACT = (DMAVEC_CTRL_CTRL_CTRL26_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL26_DMRLD __AT (0x200001E6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001E6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL26_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMRLD = (DMAVEC_CTRL_CTRL_CTRL26_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL26_DMSAR __AT (0x200001E8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001E8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL26_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMSAR = (DMAVEC_CTRL_CTRL_CTRL26_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL26_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL26_DMDAR __AT (0x200001EC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL26_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001EC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL26_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL26_DMDAR = (DMAVEC_CTRL_CTRL_CTRL26_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL26  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL26
//    <name> [26] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL26_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMACR __AT (0x200001F0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200001F0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200001F0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200001F0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200001F0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200001F0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200001F0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200001F0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL27_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200001F0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL27_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL27_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200001F0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMACR = (DMAVEC_CTRL_CTRL_CTRL27_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL27_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMBLS __AT (0x200001F2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200001F2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMBLS = (DMAVEC_CTRL_CTRL_CTRL27_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMACT __AT (0x200001F4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200001F4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMACT = (DMAVEC_CTRL_CTRL_CTRL27_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL27_DMRLD __AT (0x200001F6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200001F6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL27_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMRLD = (DMAVEC_CTRL_CTRL_CTRL27_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL27_DMSAR __AT (0x200001F8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001F8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL27_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMSAR = (DMAVEC_CTRL_CTRL_CTRL27_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL27_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL27_DMDAR __AT (0x200001FC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL27_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200001FC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL27_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL27_DMDAR = (DMAVEC_CTRL_CTRL_CTRL27_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL27  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL27
//    <name> [27] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL27_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMACR __AT (0x20000200);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000200) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000200) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000200) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000200) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000200) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000200) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000200) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL28_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000200) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL28_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL28_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000200) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMACR = (DMAVEC_CTRL_CTRL_CTRL28_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL28_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMBLS __AT (0x20000202);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000202) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMBLS = (DMAVEC_CTRL_CTRL_CTRL28_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMACT __AT (0x20000204);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000204) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMACT = (DMAVEC_CTRL_CTRL_CTRL28_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL28_DMRLD __AT (0x20000206);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000206) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL28_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMRLD = (DMAVEC_CTRL_CTRL_CTRL28_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL28_DMSAR __AT (0x20000208);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000208) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL28_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMSAR = (DMAVEC_CTRL_CTRL_CTRL28_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL28_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL28_DMDAR __AT (0x2000020C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL28_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000020C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL28_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL28_DMDAR = (DMAVEC_CTRL_CTRL_CTRL28_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL28  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL28
//    <name> [28] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL28_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMACR __AT (0x20000210);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000210) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000210) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000210) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000210) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000210) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000210) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000210) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL29_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000210) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL29_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL29_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000210) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMACR = (DMAVEC_CTRL_CTRL_CTRL29_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL29_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMBLS __AT (0x20000212);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000212) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMBLS = (DMAVEC_CTRL_CTRL_CTRL29_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMACT __AT (0x20000214);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000214) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMACT = (DMAVEC_CTRL_CTRL_CTRL29_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL29_DMRLD __AT (0x20000216);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000216) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL29_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMRLD = (DMAVEC_CTRL_CTRL_CTRL29_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL29_DMSAR __AT (0x20000218);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000218) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL29_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMSAR = (DMAVEC_CTRL_CTRL_CTRL29_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL29_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL29_DMDAR __AT (0x2000021C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL29_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000021C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL29_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL29_DMDAR = (DMAVEC_CTRL_CTRL_CTRL29_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL29  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL29
//    <name> [29] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL29_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMACR __AT (0x20000220);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000220) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000220) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000220) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000220) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000220) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000220) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000220) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL30_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000220) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL30_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL30_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000220) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMACR = (DMAVEC_CTRL_CTRL_CTRL30_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL30_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMBLS __AT (0x20000222);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000222) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMBLS = (DMAVEC_CTRL_CTRL_CTRL30_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMACT __AT (0x20000224);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000224) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMACT = (DMAVEC_CTRL_CTRL_CTRL30_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL30_DMRLD __AT (0x20000226);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000226) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL30_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMRLD = (DMAVEC_CTRL_CTRL_CTRL30_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL30_DMSAR __AT (0x20000228);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000228) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL30_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMSAR = (DMAVEC_CTRL_CTRL_CTRL30_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL30_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL30_DMDAR __AT (0x2000022C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL30_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000022C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL30_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL30_DMDAR = (DMAVEC_CTRL_CTRL_CTRL30_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL30  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL30
//    <name> [30] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL30_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMACR __AT (0x20000230);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000230) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000230) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000230) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000230) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000230) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000230) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000230) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL31_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000230) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL31_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL31_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000230) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMACR = (DMAVEC_CTRL_CTRL_CTRL31_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL31_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMBLS __AT (0x20000232);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000232) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMBLS = (DMAVEC_CTRL_CTRL_CTRL31_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMACT __AT (0x20000234);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000234) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMACT = (DMAVEC_CTRL_CTRL_CTRL31_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL31_DMRLD __AT (0x20000236);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000236) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL31_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMRLD = (DMAVEC_CTRL_CTRL_CTRL31_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL31_DMSAR __AT (0x20000238);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000238) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL31_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMSAR = (DMAVEC_CTRL_CTRL_CTRL31_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL31_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL31_DMDAR __AT (0x2000023C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL31_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000023C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL31_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL31_DMDAR = (DMAVEC_CTRL_CTRL_CTRL31_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL31  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL31
//    <name> [31] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL31_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMACR __AT (0x20000240);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000240) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000240) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000240) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000240) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000240) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000240) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000240) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL32_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000240) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL32_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL32_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000240) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMACR = (DMAVEC_CTRL_CTRL_CTRL32_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL32_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMBLS __AT (0x20000242);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000242) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMBLS = (DMAVEC_CTRL_CTRL_CTRL32_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMACT __AT (0x20000244);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000244) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMACT = (DMAVEC_CTRL_CTRL_CTRL32_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL32_DMRLD __AT (0x20000246);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000246) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL32_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMRLD = (DMAVEC_CTRL_CTRL_CTRL32_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL32_DMSAR __AT (0x20000248);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000248) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL32_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMSAR = (DMAVEC_CTRL_CTRL_CTRL32_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL32_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL32_DMDAR __AT (0x2000024C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL32_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000024C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL32_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL32_DMDAR = (DMAVEC_CTRL_CTRL_CTRL32_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL32  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL32
//    <name> [32] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL32_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMACR __AT (0x20000250);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000250) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000250) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000250) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000250) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000250) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000250) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000250) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL33_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000250) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL33_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL33_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000250) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMACR = (DMAVEC_CTRL_CTRL_CTRL33_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL33_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMBLS __AT (0x20000252);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000252) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMBLS = (DMAVEC_CTRL_CTRL_CTRL33_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMACT __AT (0x20000254);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000254) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMACT = (DMAVEC_CTRL_CTRL_CTRL33_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL33_DMRLD __AT (0x20000256);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000256) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL33_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMRLD = (DMAVEC_CTRL_CTRL_CTRL33_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL33_DMSAR __AT (0x20000258);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000258) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL33_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMSAR = (DMAVEC_CTRL_CTRL_CTRL33_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL33_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL33_DMDAR __AT (0x2000025C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL33_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000025C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL33_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL33_DMDAR = (DMAVEC_CTRL_CTRL_CTRL33_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL33  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL33
//    <name> [33] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL33_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMACR __AT (0x20000260);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000260) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000260) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000260) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000260) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000260) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000260) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000260) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL34_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000260) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL34_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL34_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000260) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMACR = (DMAVEC_CTRL_CTRL_CTRL34_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL34_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMBLS __AT (0x20000262);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000262) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMBLS = (DMAVEC_CTRL_CTRL_CTRL34_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMACT __AT (0x20000264);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000264) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMACT = (DMAVEC_CTRL_CTRL_CTRL34_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL34_DMRLD __AT (0x20000266);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000266) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL34_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMRLD = (DMAVEC_CTRL_CTRL_CTRL34_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL34_DMSAR __AT (0x20000268);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000268) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL34_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMSAR = (DMAVEC_CTRL_CTRL_CTRL34_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL34_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL34_DMDAR __AT (0x2000026C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL34_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000026C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL34_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL34_DMDAR = (DMAVEC_CTRL_CTRL_CTRL34_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL34  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL34
//    <name> [34] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL34_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMACR __AT (0x20000270);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000270) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000270) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000270) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000270) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000270) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000270) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000270) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL35_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000270) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL35_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL35_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000270) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMACR = (DMAVEC_CTRL_CTRL_CTRL35_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL35_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMBLS __AT (0x20000272);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000272) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMBLS = (DMAVEC_CTRL_CTRL_CTRL35_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMACT __AT (0x20000274);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000274) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMACT = (DMAVEC_CTRL_CTRL_CTRL35_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL35_DMRLD __AT (0x20000276);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000276) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL35_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMRLD = (DMAVEC_CTRL_CTRL_CTRL35_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL35_DMSAR __AT (0x20000278);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000278) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL35_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMSAR = (DMAVEC_CTRL_CTRL_CTRL35_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL35_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL35_DMDAR __AT (0x2000027C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL35_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000027C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL35_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL35_DMDAR = (DMAVEC_CTRL_CTRL_CTRL35_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL35  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL35
//    <name> [35] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL35_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMACR __AT (0x20000280);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000280) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000280) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000280) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000280) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000280) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000280) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000280) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL36_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000280) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL36_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL36_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000280) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMACR = (DMAVEC_CTRL_CTRL_CTRL36_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL36_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMBLS __AT (0x20000282);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000282) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMBLS = (DMAVEC_CTRL_CTRL_CTRL36_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMACT __AT (0x20000284);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000284) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMACT = (DMAVEC_CTRL_CTRL_CTRL36_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL36_DMRLD __AT (0x20000286);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000286) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL36_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMRLD = (DMAVEC_CTRL_CTRL_CTRL36_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL36_DMSAR __AT (0x20000288);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000288) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL36_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMSAR = (DMAVEC_CTRL_CTRL_CTRL36_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL36_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL36_DMDAR __AT (0x2000028C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL36_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000028C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL36_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL36_DMDAR = (DMAVEC_CTRL_CTRL_CTRL36_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL36  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL36
//    <name> [36] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL36_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMACR __AT (0x20000290);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x20000290) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000290) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000290) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000290) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000290) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000290) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000290) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL37_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000290) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL37_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL37_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000290) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMACR = (DMAVEC_CTRL_CTRL_CTRL37_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL37_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMBLS __AT (0x20000292);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000292) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMBLS = (DMAVEC_CTRL_CTRL_CTRL37_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMACT __AT (0x20000294);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000294) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMACT = (DMAVEC_CTRL_CTRL_CTRL37_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL37_DMRLD __AT (0x20000296);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000296) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL37_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMRLD = (DMAVEC_CTRL_CTRL_CTRL37_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL37_DMSAR __AT (0x20000298);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000298) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL37_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMSAR = (DMAVEC_CTRL_CTRL_CTRL37_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL37_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL37_DMDAR __AT (0x2000029C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL37_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000029C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL37_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL37_DMDAR = (DMAVEC_CTRL_CTRL_CTRL37_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL37  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL37
//    <name> [37] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL37_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMACR __AT (0x200002A0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200002A0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200002A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200002A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200002A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200002A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200002A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200002A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL38_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200002A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL38_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL38_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200002A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMACR = (DMAVEC_CTRL_CTRL_CTRL38_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL38_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMBLS __AT (0x200002A2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200002A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMBLS = (DMAVEC_CTRL_CTRL_CTRL38_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMACT __AT (0x200002A4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200002A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMACT = (DMAVEC_CTRL_CTRL_CTRL38_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL38_DMRLD __AT (0x200002A6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200002A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL38_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMRLD = (DMAVEC_CTRL_CTRL_CTRL38_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL38_DMSAR __AT (0x200002A8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL38_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMSAR = (DMAVEC_CTRL_CTRL_CTRL38_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL38_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL38_DMDAR __AT (0x200002AC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL38_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL38_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL38_DMDAR = (DMAVEC_CTRL_CTRL_CTRL38_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL38  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL38
//    <name> [38] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL38_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMACR  ----------------------
// SVD Line: 8609

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMACR __AT (0x200002B0);



// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_FIFO  -------------------------
// SVD Line: 8615

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_FIFO
//    <name> FIFO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x200002B0) \nFIFO block transfer control\n0 : disable = FIFO block transfer disabled\n1 : enable = FIFO block transfer enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.8..8> FIFO
//        <0=> 0: disable = FIFO block transfer disabled
//        <1=> 1: enable = FIFO block transfer enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_SZ  --------------------------
// SVD Line: 8633

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200002B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTINT  ------------------------
// SVD Line: 8656

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200002B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_CHNE  -------------------------
// SVD Line: 8674

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200002B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_DAMOD  ------------------------
// SVD Line: 8692

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200002B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_SAMOD  ------------------------
// SVD Line: 8710

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200002B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTSEL  ------------------------
// SVD Line: 8728

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200002B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL39_DMACR_MODE  -------------------------
// SVD Line: 8746

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200002B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL39_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL39_DMACR  -------------------------
// SVD Line: 8609

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200002B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMACR = (DMAVEC_CTRL_CTRL_CTRL39_DMACR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_FIFO </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL39_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMBLS  ----------------------
// SVD Line: 8766

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMBLS __AT (0x200002B2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMBLS  --------------------------
// SVD Line: 8766

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200002B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMBLS = (DMAVEC_CTRL_CTRL_CTRL39_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMACT  ----------------------
// SVD Line: 8772

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMACT __AT (0x200002B4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMACT  --------------------------
// SVD Line: 8772

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200002B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMACT = (DMAVEC_CTRL_CTRL_CTRL39_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMRLD  ----------------------
// SVD Line: 8778

unsigned short DMAVEC_CTRL_CTRL_CTRL39_DMRLD __AT (0x200002B6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMRLD  --------------------------
// SVD Line: 8778

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200002B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL39_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMRLD = (DMAVEC_CTRL_CTRL_CTRL39_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMSAR  ----------------------
// SVD Line: 8784

unsigned int DMAVEC_CTRL_CTRL_CTRL39_DMSAR __AT (0x200002B8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMSAR  --------------------------
// SVD Line: 8784

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL39_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMSAR = (DMAVEC_CTRL_CTRL_CTRL39_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL39_DMDAR  ----------------------
// SVD Line: 8790

unsigned int DMAVEC_CTRL_CTRL_CTRL39_DMDAR __AT (0x200002BC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL39_DMDAR  --------------------------
// SVD Line: 8790

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200002BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL39_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL39_DMDAR = (DMAVEC_CTRL_CTRL_CTRL39_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL39  -----------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL39
//    <name> [39] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL39_DMDAR </item>
//  </itree>
//  


// ----------------------------  Cluster Array ITree: DMAVEC_CTRL  --------------------------------
// SVD Line: 8603

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL
//    <name> CTRL </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL0 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL1 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL2 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL3 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL4 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL5 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL6 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL7 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL8 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL9 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL10 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL11 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL12 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL13 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL14 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL15 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL16 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL17 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL18 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL19 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL20 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL21 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL22 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL23 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL24 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL25 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL26 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL27 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL28 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL29 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL30 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL31 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL32 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL33 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL34 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL35 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL36 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL37 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL38 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL39 </item>
//  </itree>
//  


// ---------------------------------  Peripheral View: DMAVEC  ------------------------------------
// SVD Line: 8577

//  <view> DMAVEC
//    <name> DMAVEC </name>
//    <item> SFDITEM_REG__DMAVEC_VEC </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL </item>
//  </view>
//  


// ---------------------------  Register Item Address: ELC_ELSELR00  ------------------------------
// SVD Line: 8817

unsigned char ELC_ELSELR00 __AT (0x40043400);



// -------------------------------  Register Item: ELC_ELSELR00  ----------------------------------
// SVD Line: 8817

//  <item> SFDITEM_REG__ELC_ELSELR00
//    <name> ELSELR00 </name>
//    <i> [Bits 7..0] RW (@ 0x40043400) Event output destination select register 00 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR00 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR00 = (ELC_ELSELR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR01  ------------------------------
// SVD Line: 8825

unsigned char ELC_ELSELR01 __AT (0x40043401);



// -------------------------------  Register Item: ELC_ELSELR01  ----------------------------------
// SVD Line: 8825

//  <item> SFDITEM_REG__ELC_ELSELR01
//    <name> ELSELR01 </name>
//    <i> [Bits 7..0] RW (@ 0x40043401) Event output destination select register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR01 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR01 = (ELC_ELSELR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR02  ------------------------------
// SVD Line: 8831

unsigned char ELC_ELSELR02 __AT (0x40043402);



// -------------------------------  Register Item: ELC_ELSELR02  ----------------------------------
// SVD Line: 8831

//  <item> SFDITEM_REG__ELC_ELSELR02
//    <name> ELSELR02 </name>
//    <i> [Bits 7..0] RW (@ 0x40043402) Event output destination select register 02 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR02 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR02 = (ELC_ELSELR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR03  ------------------------------
// SVD Line: 8837

unsigned char ELC_ELSELR03 __AT (0x40043403);



// -------------------------------  Register Item: ELC_ELSELR03  ----------------------------------
// SVD Line: 8837

//  <item> SFDITEM_REG__ELC_ELSELR03
//    <name> ELSELR03 </name>
//    <i> [Bits 7..0] RW (@ 0x40043403) Event output destination select register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR03 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR03 = (ELC_ELSELR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR04  ------------------------------
// SVD Line: 8843

unsigned char ELC_ELSELR04 __AT (0x40043404);



// -------------------------------  Register Item: ELC_ELSELR04  ----------------------------------
// SVD Line: 8843

//  <item> SFDITEM_REG__ELC_ELSELR04
//    <name> ELSELR04 </name>
//    <i> [Bits 7..0] RW (@ 0x40043404) Event output destination select register 04 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR04 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR04 = (ELC_ELSELR04 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR05  ------------------------------
// SVD Line: 8849

unsigned char ELC_ELSELR05 __AT (0x40043405);



// -------------------------------  Register Item: ELC_ELSELR05  ----------------------------------
// SVD Line: 8849

//  <item> SFDITEM_REG__ELC_ELSELR05
//    <name> ELSELR05 </name>
//    <i> [Bits 7..0] RW (@ 0x40043405) Event output destination select register 05 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR05 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR05 = (ELC_ELSELR05 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR06  ------------------------------
// SVD Line: 8855

unsigned char ELC_ELSELR06 __AT (0x40043406);



// -------------------------------  Register Item: ELC_ELSELR06  ----------------------------------
// SVD Line: 8855

//  <item> SFDITEM_REG__ELC_ELSELR06
//    <name> ELSELR06 </name>
//    <i> [Bits 7..0] RW (@ 0x40043406) Event output destination select register 06 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR06 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR06 = (ELC_ELSELR06 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR07  ------------------------------
// SVD Line: 8861

unsigned char ELC_ELSELR07 __AT (0x40043407);



// -------------------------------  Register Item: ELC_ELSELR07  ----------------------------------
// SVD Line: 8861

//  <item> SFDITEM_REG__ELC_ELSELR07
//    <name> ELSELR07 </name>
//    <i> [Bits 7..0] RW (@ 0x40043407) Event output destination select register 07 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR07 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR07 = (ELC_ELSELR07 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR08  ------------------------------
// SVD Line: 8867

unsigned char ELC_ELSELR08 __AT (0x40043408);



// -------------------------------  Register Item: ELC_ELSELR08  ----------------------------------
// SVD Line: 8867

//  <item> SFDITEM_REG__ELC_ELSELR08
//    <name> ELSELR08 </name>
//    <i> [Bits 7..0] RW (@ 0x40043408) Event output destination select register 08 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR08 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR08 = (ELC_ELSELR08 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR09  ------------------------------
// SVD Line: 8873

unsigned char ELC_ELSELR09 __AT (0x40043409);



// -------------------------------  Register Item: ELC_ELSELR09  ----------------------------------
// SVD Line: 8873

//  <item> SFDITEM_REG__ELC_ELSELR09
//    <name> ELSELR09 </name>
//    <i> [Bits 7..0] RW (@ 0x40043409) Event output destination select register 09 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR09 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR09 = (ELC_ELSELR09 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR10  ------------------------------
// SVD Line: 8879

unsigned char ELC_ELSELR10 __AT (0x4004340A);



// -------------------------------  Register Item: ELC_ELSELR10  ----------------------------------
// SVD Line: 8879

//  <item> SFDITEM_REG__ELC_ELSELR10
//    <name> ELSELR10 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340A) Event output destination select register 10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR10 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR10 = (ELC_ELSELR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR11  ------------------------------
// SVD Line: 8885

unsigned char ELC_ELSELR11 __AT (0x4004340B);



// -------------------------------  Register Item: ELC_ELSELR11  ----------------------------------
// SVD Line: 8885

//  <item> SFDITEM_REG__ELC_ELSELR11
//    <name> ELSELR11 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340B) Event output destination select register 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR11 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR11 = (ELC_ELSELR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR12  ------------------------------
// SVD Line: 8891

unsigned char ELC_ELSELR12 __AT (0x4004340C);



// -------------------------------  Register Item: ELC_ELSELR12  ----------------------------------
// SVD Line: 8891

//  <item> SFDITEM_REG__ELC_ELSELR12
//    <name> ELSELR12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340C) Event output destination select register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR12 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR12 = (ELC_ELSELR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR13  ------------------------------
// SVD Line: 8897

unsigned char ELC_ELSELR13 __AT (0x4004340D);



// -------------------------------  Register Item: ELC_ELSELR13  ----------------------------------
// SVD Line: 8897

//  <item> SFDITEM_REG__ELC_ELSELR13
//    <name> ELSELR13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340D) Event output destination select register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR13 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR13 = (ELC_ELSELR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR14  ------------------------------
// SVD Line: 8903

unsigned char ELC_ELSELR14 __AT (0x4004340E);



// -------------------------------  Register Item: ELC_ELSELR14  ----------------------------------
// SVD Line: 8903

//  <item> SFDITEM_REG__ELC_ELSELR14
//    <name> ELSELR14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340E) Event output destination select register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR14 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR14 = (ELC_ELSELR14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: ELC  --------------------------------------
// SVD Line: 8801

//  <view> ELC
//    <name> ELC </name>
//    <item> SFDITEM_REG__ELC_ELSELR00 </item>
//    <item> SFDITEM_REG__ELC_ELSELR01 </item>
//    <item> SFDITEM_REG__ELC_ELSELR02 </item>
//    <item> SFDITEM_REG__ELC_ELSELR03 </item>
//    <item> SFDITEM_REG__ELC_ELSELR04 </item>
//    <item> SFDITEM_REG__ELC_ELSELR05 </item>
//    <item> SFDITEM_REG__ELC_ELSELR06 </item>
//    <item> SFDITEM_REG__ELC_ELSELR07 </item>
//    <item> SFDITEM_REG__ELC_ELSELR08 </item>
//    <item> SFDITEM_REG__ELC_ELSELR09 </item>
//    <item> SFDITEM_REG__ELC_ELSELR10 </item>
//    <item> SFDITEM_REG__ELC_ELSELR11 </item>
//    <item> SFDITEM_REG__ELC_ELSELR12 </item>
//    <item> SFDITEM_REG__ELC_ELSELR13 </item>
//    <item> SFDITEM_REG__ELC_ELSELR14 </item>
//  </view>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF0_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF0_IFL __AT (0x40006000);



// ----------------------------  Register Item: INT_IF_IF_IF0_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF0_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006000) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF0_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF0_IFL = (INT_IF_IF_IF0_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF0_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF0_IFH __AT (0x40006001);



// ----------------------------  Register Item: INT_IF_IF_IF0_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF0_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006001) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF0_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF0_IFH = (INT_IF_IF_IF0_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF0  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF0
//    <name> [0] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF0_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF0_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF1_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF1_IFL __AT (0x40006004);



// ----------------------------  Register Item: INT_IF_IF_IF1_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF1_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006004) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF1_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF1_IFL = (INT_IF_IF_IF1_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF1_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF1_IFH __AT (0x40006005);



// ----------------------------  Register Item: INT_IF_IF_IF1_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF1_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006005) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF1_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF1_IFH = (INT_IF_IF_IF1_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF1  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF1
//    <name> [1] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF1_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF1_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF2_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF2_IFL __AT (0x40006008);



// ----------------------------  Register Item: INT_IF_IF_IF2_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF2_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006008) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF2_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF2_IFL = (INT_IF_IF_IF2_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF2_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF2_IFH __AT (0x40006009);



// ----------------------------  Register Item: INT_IF_IF_IF2_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF2_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006009) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF2_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF2_IFH = (INT_IF_IF_IF2_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF2  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF2
//    <name> [2] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF2_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF2_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF3_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF3_IFL __AT (0x4000600C);



// ----------------------------  Register Item: INT_IF_IF_IF3_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF3_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000600C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF3_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF3_IFL = (INT_IF_IF_IF3_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF3_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF3_IFH __AT (0x4000600D);



// ----------------------------  Register Item: INT_IF_IF_IF3_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF3_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000600D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF3_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF3_IFH = (INT_IF_IF_IF3_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF3  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF3
//    <name> [3] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF3_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF3_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF4_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF4_IFL __AT (0x40006010);



// ----------------------------  Register Item: INT_IF_IF_IF4_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF4_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006010) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF4_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF4_IFL = (INT_IF_IF_IF4_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF4_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF4_IFH __AT (0x40006011);



// ----------------------------  Register Item: INT_IF_IF_IF4_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF4_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006011) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF4_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF4_IFH = (INT_IF_IF_IF4_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF4  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF4
//    <name> [4] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF4_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF4_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF5_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF5_IFL __AT (0x40006014);



// ----------------------------  Register Item: INT_IF_IF_IF5_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF5_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006014) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF5_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF5_IFL = (INT_IF_IF_IF5_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF5_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF5_IFH __AT (0x40006015);



// ----------------------------  Register Item: INT_IF_IF_IF5_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF5_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006015) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF5_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF5_IFH = (INT_IF_IF_IF5_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF5  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF5
//    <name> [5] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF5_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF5_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF6_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF6_IFL __AT (0x40006018);



// ----------------------------  Register Item: INT_IF_IF_IF6_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF6_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006018) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF6_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF6_IFL = (INT_IF_IF_IF6_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF6_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF6_IFH __AT (0x40006019);



// ----------------------------  Register Item: INT_IF_IF_IF6_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF6_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006019) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF6_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF6_IFH = (INT_IF_IF_IF6_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF6  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF6
//    <name> [6] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF6_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF6_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF7_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF7_IFL __AT (0x4000601C);



// ----------------------------  Register Item: INT_IF_IF_IF7_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF7_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000601C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF7_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF7_IFL = (INT_IF_IF_IF7_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF7_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF7_IFH __AT (0x4000601D);



// ----------------------------  Register Item: INT_IF_IF_IF7_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF7_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000601D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF7_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF7_IFH = (INT_IF_IF_IF7_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF7  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF7
//    <name> [7] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF7_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF7_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF8_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF8_IFL __AT (0x40006020);



// ----------------------------  Register Item: INT_IF_IF_IF8_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF8_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006020) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF8_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF8_IFL = (INT_IF_IF_IF8_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF8_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF8_IFH __AT (0x40006021);



// ----------------------------  Register Item: INT_IF_IF_IF8_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF8_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006021) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF8_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF8_IFH = (INT_IF_IF_IF8_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF8  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF8
//    <name> [8] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF8_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF8_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF9_IFL  ----------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF9_IFL __AT (0x40006024);



// ----------------------------  Register Item: INT_IF_IF_IF9_IFL  --------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF9_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006024) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF9_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF9_IFL = (INT_IF_IF_IF9_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF9_IFH  ----------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF9_IFH __AT (0x40006025);



// ----------------------------  Register Item: INT_IF_IF_IF9_IFH  --------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF9_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006025) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF9_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF9_IFH = (INT_IF_IF_IF9_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF9  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF9
//    <name> [9] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF9_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF9_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF10_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF10_IFL __AT (0x40006028);



// ----------------------------  Register Item: INT_IF_IF_IF10_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF10_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006028) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF10_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF10_IFL = (INT_IF_IF_IF10_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF10_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF10_IFH __AT (0x40006029);



// ----------------------------  Register Item: INT_IF_IF_IF10_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF10_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006029) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF10_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF10_IFH = (INT_IF_IF_IF10_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF10  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF10
//    <name> [10] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF10_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF10_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF11_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF11_IFL __AT (0x4000602C);



// ----------------------------  Register Item: INT_IF_IF_IF11_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF11_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000602C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF11_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF11_IFL = (INT_IF_IF_IF11_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF11_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF11_IFH __AT (0x4000602D);



// ----------------------------  Register Item: INT_IF_IF_IF11_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF11_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000602D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF11_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF11_IFH = (INT_IF_IF_IF11_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF11  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF11
//    <name> [11] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF11_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF11_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF12_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF12_IFL __AT (0x40006030);



// ----------------------------  Register Item: INT_IF_IF_IF12_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF12_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006030) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF12_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF12_IFL = (INT_IF_IF_IF12_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF12_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF12_IFH __AT (0x40006031);



// ----------------------------  Register Item: INT_IF_IF_IF12_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF12_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006031) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF12_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF12_IFH = (INT_IF_IF_IF12_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF12  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF12
//    <name> [12] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF12_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF12_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF13_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF13_IFL __AT (0x40006034);



// ----------------------------  Register Item: INT_IF_IF_IF13_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF13_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006034) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF13_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF13_IFL = (INT_IF_IF_IF13_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF13_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF13_IFH __AT (0x40006035);



// ----------------------------  Register Item: INT_IF_IF_IF13_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF13_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006035) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF13_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF13_IFH = (INT_IF_IF_IF13_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF13  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF13
//    <name> [13] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF13_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF13_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF14_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF14_IFL __AT (0x40006038);



// ----------------------------  Register Item: INT_IF_IF_IF14_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF14_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006038) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF14_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF14_IFL = (INT_IF_IF_IF14_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF14_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF14_IFH __AT (0x40006039);



// ----------------------------  Register Item: INT_IF_IF_IF14_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF14_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006039) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF14_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF14_IFH = (INT_IF_IF_IF14_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF14  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF14
//    <name> [14] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF14_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF14_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF15_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF15_IFL __AT (0x4000603C);



// ----------------------------  Register Item: INT_IF_IF_IF15_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF15_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000603C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF15_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF15_IFL = (INT_IF_IF_IF15_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF15_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF15_IFH __AT (0x4000603D);



// ----------------------------  Register Item: INT_IF_IF_IF15_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF15_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000603D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF15_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF15_IFH = (INT_IF_IF_IF15_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF15  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF15
//    <name> [15] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF15_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF15_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF16_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF16_IFL __AT (0x40006040);



// ----------------------------  Register Item: INT_IF_IF_IF16_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF16_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006040) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF16_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF16_IFL = (INT_IF_IF_IF16_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF16_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF16_IFH __AT (0x40006041);



// ----------------------------  Register Item: INT_IF_IF_IF16_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF16_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006041) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF16_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF16_IFH = (INT_IF_IF_IF16_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF16  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF16
//    <name> [16] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF16_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF16_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF17_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF17_IFL __AT (0x40006044);



// ----------------------------  Register Item: INT_IF_IF_IF17_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF17_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006044) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF17_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF17_IFL = (INT_IF_IF_IF17_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF17_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF17_IFH __AT (0x40006045);



// ----------------------------  Register Item: INT_IF_IF_IF17_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF17_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006045) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF17_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF17_IFH = (INT_IF_IF_IF17_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF17  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF17
//    <name> [17] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF17_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF17_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF18_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF18_IFL __AT (0x40006048);



// ----------------------------  Register Item: INT_IF_IF_IF18_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF18_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006048) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF18_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF18_IFL = (INT_IF_IF_IF18_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF18_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF18_IFH __AT (0x40006049);



// ----------------------------  Register Item: INT_IF_IF_IF18_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF18_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006049) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF18_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF18_IFH = (INT_IF_IF_IF18_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF18  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF18
//    <name> [18] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF18_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF18_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF19_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF19_IFL __AT (0x4000604C);



// ----------------------------  Register Item: INT_IF_IF_IF19_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF19_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000604C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF19_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF19_IFL = (INT_IF_IF_IF19_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF19_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF19_IFH __AT (0x4000604D);



// ----------------------------  Register Item: INT_IF_IF_IF19_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF19_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000604D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF19_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF19_IFH = (INT_IF_IF_IF19_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF19  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF19
//    <name> [19] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF19_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF19_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF20_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF20_IFL __AT (0x40006050);



// ----------------------------  Register Item: INT_IF_IF_IF20_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF20_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006050) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF20_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF20_IFL = (INT_IF_IF_IF20_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF20_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF20_IFH __AT (0x40006051);



// ----------------------------  Register Item: INT_IF_IF_IF20_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF20_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006051) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF20_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF20_IFH = (INT_IF_IF_IF20_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF20  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF20
//    <name> [20] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF20_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF20_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF21_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF21_IFL __AT (0x40006054);



// ----------------------------  Register Item: INT_IF_IF_IF21_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF21_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006054) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF21_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF21_IFL = (INT_IF_IF_IF21_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF21_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF21_IFH __AT (0x40006055);



// ----------------------------  Register Item: INT_IF_IF_IF21_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF21_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006055) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF21_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF21_IFH = (INT_IF_IF_IF21_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF21  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF21
//    <name> [21] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF21_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF21_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF22_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF22_IFL __AT (0x40006058);



// ----------------------------  Register Item: INT_IF_IF_IF22_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF22_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006058) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF22_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF22_IFL = (INT_IF_IF_IF22_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF22_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF22_IFH __AT (0x40006059);



// ----------------------------  Register Item: INT_IF_IF_IF22_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF22_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006059) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF22_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF22_IFH = (INT_IF_IF_IF22_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF22  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF22
//    <name> [22] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF22_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF22_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF23_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF23_IFL __AT (0x4000605C);



// ----------------------------  Register Item: INT_IF_IF_IF23_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF23_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000605C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF23_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF23_IFL = (INT_IF_IF_IF23_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF23_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF23_IFH __AT (0x4000605D);



// ----------------------------  Register Item: INT_IF_IF_IF23_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF23_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000605D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF23_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF23_IFH = (INT_IF_IF_IF23_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF23  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF23
//    <name> [23] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF23_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF23_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF24_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF24_IFL __AT (0x40006060);



// ----------------------------  Register Item: INT_IF_IF_IF24_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF24_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006060) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF24_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF24_IFL = (INT_IF_IF_IF24_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF24_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF24_IFH __AT (0x40006061);



// ----------------------------  Register Item: INT_IF_IF_IF24_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF24_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006061) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF24_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF24_IFH = (INT_IF_IF_IF24_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF24  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF24
//    <name> [24] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF24_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF24_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF25_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF25_IFL __AT (0x40006064);



// ----------------------------  Register Item: INT_IF_IF_IF25_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF25_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006064) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF25_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF25_IFL = (INT_IF_IF_IF25_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF25_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF25_IFH __AT (0x40006065);



// ----------------------------  Register Item: INT_IF_IF_IF25_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF25_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006065) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF25_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF25_IFH = (INT_IF_IF_IF25_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF25  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF25
//    <name> [25] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF25_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF25_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF26_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF26_IFL __AT (0x40006068);



// ----------------------------  Register Item: INT_IF_IF_IF26_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF26_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006068) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF26_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF26_IFL = (INT_IF_IF_IF26_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF26_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF26_IFH __AT (0x40006069);



// ----------------------------  Register Item: INT_IF_IF_IF26_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF26_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006069) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF26_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF26_IFH = (INT_IF_IF_IF26_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF26  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF26
//    <name> [26] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF26_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF26_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF27_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF27_IFL __AT (0x4000606C);



// ----------------------------  Register Item: INT_IF_IF_IF27_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF27_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000606C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF27_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF27_IFL = (INT_IF_IF_IF27_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF27_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF27_IFH __AT (0x4000606D);



// ----------------------------  Register Item: INT_IF_IF_IF27_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF27_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000606D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF27_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF27_IFH = (INT_IF_IF_IF27_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF27  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF27
//    <name> [27] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF27_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF27_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF28_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF28_IFL __AT (0x40006070);



// ----------------------------  Register Item: INT_IF_IF_IF28_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF28_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006070) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF28_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF28_IFL = (INT_IF_IF_IF28_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF28_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF28_IFH __AT (0x40006071);



// ----------------------------  Register Item: INT_IF_IF_IF28_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF28_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006071) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF28_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF28_IFH = (INT_IF_IF_IF28_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF28  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF28
//    <name> [28] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF28_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF28_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF29_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF29_IFL __AT (0x40006074);



// ----------------------------  Register Item: INT_IF_IF_IF29_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF29_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006074) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF29_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF29_IFL = (INT_IF_IF_IF29_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF29_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF29_IFH __AT (0x40006075);



// ----------------------------  Register Item: INT_IF_IF_IF29_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF29_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006075) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF29_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF29_IFH = (INT_IF_IF_IF29_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF29  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF29
//    <name> [29] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF29_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF29_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF30_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF30_IFL __AT (0x40006078);



// ----------------------------  Register Item: INT_IF_IF_IF30_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF30_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006078) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF30_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF30_IFL = (INT_IF_IF_IF30_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF30_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF30_IFH __AT (0x40006079);



// ----------------------------  Register Item: INT_IF_IF_IF30_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF30_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x40006079) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF30_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF30_IFH = (INT_IF_IF_IF30_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF30  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF30
//    <name> [30] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF30_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF30_IFH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF31_IFL  ---------------------------
// SVD Line: 8937

unsigned char INT_IF_IF_IF31_IFL __AT (0x4000607C);



// ----------------------------  Register Item: INT_IF_IF_IF31_IFL  -------------------------------
// SVD Line: 8937

//  <item> SFDITEM_REG__INT_IF_IF_IF31_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000607C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF31_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF31_IFL = (INT_IF_IF_IF31_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF31_IFH  ---------------------------
// SVD Line: 8943

unsigned char INT_IF_IF_IF31_IFH __AT (0x4000607D);



// ----------------------------  Register Item: INT_IF_IF_IF31_IFH  -------------------------------
// SVD Line: 8943

//  <item> SFDITEM_REG__INT_IF_IF_IF31_IFH
//    <name> IFH </name>
//    <i> [Bits 7..0] RW (@ 0x4000607D) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF31_IFH >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF31_IFH = (INT_IF_IF_IF31_IFH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF31  ---------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF31
//    <name> [31] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF31_IFL </item>
//    <item> SFDITEM_REG__INT_IF_IF_IF31_IFH </item>
//  </itree>
//  


// -------------------------------  Cluster Array ITree: INT_IF  ----------------------------------
// SVD Line: 8929

//  <itree> SFDITEM_CLUST__INT_IF
//    <name> IF </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF0 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF1 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF2 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF3 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF4 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF5 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF6 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF7 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF8 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF9 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF10 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF11 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF12 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF13 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF14 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF15 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF16 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF17 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF18 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF19 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF20 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF21 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF22 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF23 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF24 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF25 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF26 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF27 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF28 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF29 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF30 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF31 </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK0_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK0_MKL __AT (0x40006100);



// ----------------------------  Register Item: INT_MK_MK_MK0_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK0_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006100) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK0_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK0_MKL = (INT_MK_MK_MK0_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK0_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK0_MKH __AT (0x40006101);



// ----------------------------  Register Item: INT_MK_MK_MK0_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK0_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006101) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK0_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK0_MKH = (INT_MK_MK_MK0_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK0  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK0
//    <name> [0] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK0_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK0_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK1_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK1_MKL __AT (0x40006104);



// ----------------------------  Register Item: INT_MK_MK_MK1_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK1_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006104) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK1_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK1_MKL = (INT_MK_MK_MK1_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK1_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK1_MKH __AT (0x40006105);



// ----------------------------  Register Item: INT_MK_MK_MK1_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK1_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006105) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK1_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK1_MKH = (INT_MK_MK_MK1_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK1  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK1
//    <name> [1] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK1_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK1_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK2_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK2_MKL __AT (0x40006108);



// ----------------------------  Register Item: INT_MK_MK_MK2_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK2_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006108) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK2_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK2_MKL = (INT_MK_MK_MK2_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK2_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK2_MKH __AT (0x40006109);



// ----------------------------  Register Item: INT_MK_MK_MK2_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK2_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006109) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK2_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK2_MKH = (INT_MK_MK_MK2_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK2  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK2
//    <name> [2] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK2_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK2_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK3_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK3_MKL __AT (0x4000610C);



// ----------------------------  Register Item: INT_MK_MK_MK3_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK3_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000610C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK3_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK3_MKL = (INT_MK_MK_MK3_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK3_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK3_MKH __AT (0x4000610D);



// ----------------------------  Register Item: INT_MK_MK_MK3_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK3_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000610D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK3_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK3_MKH = (INT_MK_MK_MK3_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK3  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK3
//    <name> [3] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK3_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK3_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK4_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK4_MKL __AT (0x40006110);



// ----------------------------  Register Item: INT_MK_MK_MK4_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK4_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006110) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK4_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK4_MKL = (INT_MK_MK_MK4_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK4_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK4_MKH __AT (0x40006111);



// ----------------------------  Register Item: INT_MK_MK_MK4_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK4_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006111) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK4_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK4_MKH = (INT_MK_MK_MK4_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK4  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK4
//    <name> [4] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK4_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK4_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK5_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK5_MKL __AT (0x40006114);



// ----------------------------  Register Item: INT_MK_MK_MK5_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK5_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006114) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK5_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK5_MKL = (INT_MK_MK_MK5_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK5_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK5_MKH __AT (0x40006115);



// ----------------------------  Register Item: INT_MK_MK_MK5_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK5_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006115) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK5_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK5_MKH = (INT_MK_MK_MK5_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK5  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK5
//    <name> [5] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK5_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK5_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK6_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK6_MKL __AT (0x40006118);



// ----------------------------  Register Item: INT_MK_MK_MK6_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK6_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006118) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK6_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK6_MKL = (INT_MK_MK_MK6_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK6_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK6_MKH __AT (0x40006119);



// ----------------------------  Register Item: INT_MK_MK_MK6_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK6_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006119) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK6_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK6_MKH = (INT_MK_MK_MK6_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK6  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK6
//    <name> [6] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK6_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK6_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK7_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK7_MKL __AT (0x4000611C);



// ----------------------------  Register Item: INT_MK_MK_MK7_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK7_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000611C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK7_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK7_MKL = (INT_MK_MK_MK7_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK7_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK7_MKH __AT (0x4000611D);



// ----------------------------  Register Item: INT_MK_MK_MK7_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK7_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000611D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK7_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK7_MKH = (INT_MK_MK_MK7_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK7  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK7
//    <name> [7] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK7_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK7_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK8_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK8_MKL __AT (0x40006120);



// ----------------------------  Register Item: INT_MK_MK_MK8_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK8_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006120) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK8_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK8_MKL = (INT_MK_MK_MK8_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK8_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK8_MKH __AT (0x40006121);



// ----------------------------  Register Item: INT_MK_MK_MK8_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK8_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006121) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK8_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK8_MKH = (INT_MK_MK_MK8_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK8  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK8
//    <name> [8] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK8_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK8_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK9_MKL  ----------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK9_MKL __AT (0x40006124);



// ----------------------------  Register Item: INT_MK_MK_MK9_MKL  --------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK9_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006124) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK9_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK9_MKL = (INT_MK_MK_MK9_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK9_MKH  ----------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK9_MKH __AT (0x40006125);



// ----------------------------  Register Item: INT_MK_MK_MK9_MKH  --------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK9_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006125) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK9_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK9_MKH = (INT_MK_MK_MK9_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK9  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK9
//    <name> [9] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK9_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK9_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK10_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK10_MKL __AT (0x40006128);



// ----------------------------  Register Item: INT_MK_MK_MK10_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK10_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006128) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK10_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK10_MKL = (INT_MK_MK_MK10_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK10_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK10_MKH __AT (0x40006129);



// ----------------------------  Register Item: INT_MK_MK_MK10_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK10_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006129) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK10_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK10_MKH = (INT_MK_MK_MK10_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK10  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK10
//    <name> [10] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK10_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK10_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK11_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK11_MKL __AT (0x4000612C);



// ----------------------------  Register Item: INT_MK_MK_MK11_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK11_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000612C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK11_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK11_MKL = (INT_MK_MK_MK11_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK11_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK11_MKH __AT (0x4000612D);



// ----------------------------  Register Item: INT_MK_MK_MK11_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK11_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000612D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK11_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK11_MKH = (INT_MK_MK_MK11_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK11  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK11
//    <name> [11] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK11_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK11_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK12_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK12_MKL __AT (0x40006130);



// ----------------------------  Register Item: INT_MK_MK_MK12_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK12_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006130) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK12_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK12_MKL = (INT_MK_MK_MK12_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK12_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK12_MKH __AT (0x40006131);



// ----------------------------  Register Item: INT_MK_MK_MK12_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK12_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006131) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK12_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK12_MKH = (INT_MK_MK_MK12_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK12  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK12
//    <name> [12] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK12_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK12_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK13_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK13_MKL __AT (0x40006134);



// ----------------------------  Register Item: INT_MK_MK_MK13_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK13_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006134) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK13_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK13_MKL = (INT_MK_MK_MK13_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK13_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK13_MKH __AT (0x40006135);



// ----------------------------  Register Item: INT_MK_MK_MK13_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK13_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006135) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK13_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK13_MKH = (INT_MK_MK_MK13_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK13  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK13
//    <name> [13] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK13_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK13_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK14_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK14_MKL __AT (0x40006138);



// ----------------------------  Register Item: INT_MK_MK_MK14_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK14_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006138) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK14_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK14_MKL = (INT_MK_MK_MK14_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK14_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK14_MKH __AT (0x40006139);



// ----------------------------  Register Item: INT_MK_MK_MK14_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK14_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006139) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK14_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK14_MKH = (INT_MK_MK_MK14_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK14  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK14
//    <name> [14] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK14_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK14_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK15_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK15_MKL __AT (0x4000613C);



// ----------------------------  Register Item: INT_MK_MK_MK15_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK15_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000613C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK15_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK15_MKL = (INT_MK_MK_MK15_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK15_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK15_MKH __AT (0x4000613D);



// ----------------------------  Register Item: INT_MK_MK_MK15_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK15_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000613D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK15_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK15_MKH = (INT_MK_MK_MK15_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK15  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK15
//    <name> [15] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK15_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK15_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK16_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK16_MKL __AT (0x40006140);



// ----------------------------  Register Item: INT_MK_MK_MK16_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK16_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006140) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK16_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK16_MKL = (INT_MK_MK_MK16_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK16_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK16_MKH __AT (0x40006141);



// ----------------------------  Register Item: INT_MK_MK_MK16_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK16_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006141) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK16_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK16_MKH = (INT_MK_MK_MK16_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK16  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK16
//    <name> [16] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK16_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK16_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK17_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK17_MKL __AT (0x40006144);



// ----------------------------  Register Item: INT_MK_MK_MK17_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK17_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006144) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK17_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK17_MKL = (INT_MK_MK_MK17_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK17_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK17_MKH __AT (0x40006145);



// ----------------------------  Register Item: INT_MK_MK_MK17_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK17_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006145) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK17_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK17_MKH = (INT_MK_MK_MK17_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK17  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK17
//    <name> [17] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK17_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK17_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK18_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK18_MKL __AT (0x40006148);



// ----------------------------  Register Item: INT_MK_MK_MK18_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK18_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006148) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK18_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK18_MKL = (INT_MK_MK_MK18_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK18_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK18_MKH __AT (0x40006149);



// ----------------------------  Register Item: INT_MK_MK_MK18_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK18_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006149) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK18_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK18_MKH = (INT_MK_MK_MK18_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK18  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK18
//    <name> [18] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK18_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK18_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK19_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK19_MKL __AT (0x4000614C);



// ----------------------------  Register Item: INT_MK_MK_MK19_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK19_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000614C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK19_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK19_MKL = (INT_MK_MK_MK19_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK19_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK19_MKH __AT (0x4000614D);



// ----------------------------  Register Item: INT_MK_MK_MK19_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK19_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000614D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK19_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK19_MKH = (INT_MK_MK_MK19_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK19  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK19
//    <name> [19] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK19_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK19_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK20_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK20_MKL __AT (0x40006150);



// ----------------------------  Register Item: INT_MK_MK_MK20_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK20_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006150) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK20_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK20_MKL = (INT_MK_MK_MK20_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK20_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK20_MKH __AT (0x40006151);



// ----------------------------  Register Item: INT_MK_MK_MK20_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK20_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006151) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK20_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK20_MKH = (INT_MK_MK_MK20_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK20  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK20
//    <name> [20] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK20_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK20_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK21_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK21_MKL __AT (0x40006154);



// ----------------------------  Register Item: INT_MK_MK_MK21_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK21_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006154) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK21_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK21_MKL = (INT_MK_MK_MK21_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK21_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK21_MKH __AT (0x40006155);



// ----------------------------  Register Item: INT_MK_MK_MK21_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK21_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006155) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK21_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK21_MKH = (INT_MK_MK_MK21_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK21  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK21
//    <name> [21] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK21_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK21_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK22_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK22_MKL __AT (0x40006158);



// ----------------------------  Register Item: INT_MK_MK_MK22_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK22_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006158) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK22_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK22_MKL = (INT_MK_MK_MK22_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK22_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK22_MKH __AT (0x40006159);



// ----------------------------  Register Item: INT_MK_MK_MK22_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK22_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006159) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK22_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK22_MKH = (INT_MK_MK_MK22_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK22  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK22
//    <name> [22] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK22_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK22_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK23_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK23_MKL __AT (0x4000615C);



// ----------------------------  Register Item: INT_MK_MK_MK23_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK23_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000615C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK23_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK23_MKL = (INT_MK_MK_MK23_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK23_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK23_MKH __AT (0x4000615D);



// ----------------------------  Register Item: INT_MK_MK_MK23_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK23_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000615D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK23_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK23_MKH = (INT_MK_MK_MK23_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK23  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK23
//    <name> [23] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK23_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK23_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK24_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK24_MKL __AT (0x40006160);



// ----------------------------  Register Item: INT_MK_MK_MK24_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK24_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006160) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK24_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK24_MKL = (INT_MK_MK_MK24_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK24_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK24_MKH __AT (0x40006161);



// ----------------------------  Register Item: INT_MK_MK_MK24_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK24_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006161) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK24_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK24_MKH = (INT_MK_MK_MK24_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK24  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK24
//    <name> [24] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK24_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK24_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK25_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK25_MKL __AT (0x40006164);



// ----------------------------  Register Item: INT_MK_MK_MK25_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK25_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006164) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK25_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK25_MKL = (INT_MK_MK_MK25_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK25_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK25_MKH __AT (0x40006165);



// ----------------------------  Register Item: INT_MK_MK_MK25_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK25_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006165) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK25_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK25_MKH = (INT_MK_MK_MK25_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK25  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK25
//    <name> [25] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK25_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK25_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK26_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK26_MKL __AT (0x40006168);



// ----------------------------  Register Item: INT_MK_MK_MK26_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK26_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006168) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK26_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK26_MKL = (INT_MK_MK_MK26_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK26_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK26_MKH __AT (0x40006169);



// ----------------------------  Register Item: INT_MK_MK_MK26_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK26_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006169) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK26_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK26_MKH = (INT_MK_MK_MK26_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK26  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK26
//    <name> [26] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK26_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK26_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK27_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK27_MKL __AT (0x4000616C);



// ----------------------------  Register Item: INT_MK_MK_MK27_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK27_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000616C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK27_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK27_MKL = (INT_MK_MK_MK27_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK27_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK27_MKH __AT (0x4000616D);



// ----------------------------  Register Item: INT_MK_MK_MK27_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK27_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000616D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK27_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK27_MKH = (INT_MK_MK_MK27_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK27  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK27
//    <name> [27] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK27_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK27_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK28_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK28_MKL __AT (0x40006170);



// ----------------------------  Register Item: INT_MK_MK_MK28_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK28_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006170) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK28_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK28_MKL = (INT_MK_MK_MK28_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK28_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK28_MKH __AT (0x40006171);



// ----------------------------  Register Item: INT_MK_MK_MK28_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK28_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006171) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK28_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK28_MKH = (INT_MK_MK_MK28_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK28  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK28
//    <name> [28] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK28_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK28_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK29_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK29_MKL __AT (0x40006174);



// ----------------------------  Register Item: INT_MK_MK_MK29_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK29_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006174) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK29_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK29_MKL = (INT_MK_MK_MK29_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK29_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK29_MKH __AT (0x40006175);



// ----------------------------  Register Item: INT_MK_MK_MK29_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK29_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006175) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK29_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK29_MKH = (INT_MK_MK_MK29_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK29  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK29
//    <name> [29] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK29_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK29_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK30_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK30_MKL __AT (0x40006178);



// ----------------------------  Register Item: INT_MK_MK_MK30_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK30_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006178) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK30_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK30_MKL = (INT_MK_MK_MK30_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK30_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK30_MKH __AT (0x40006179);



// ----------------------------  Register Item: INT_MK_MK_MK30_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK30_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x40006179) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK30_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK30_MKH = (INT_MK_MK_MK30_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK30  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK30
//    <name> [30] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK30_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK30_MKH </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK31_MKL  ---------------------------
// SVD Line: 8959

unsigned char INT_MK_MK_MK31_MKL __AT (0x4000617C);



// ----------------------------  Register Item: INT_MK_MK_MK31_MKL  -------------------------------
// SVD Line: 8959

//  <item> SFDITEM_REG__INT_MK_MK_MK31_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000617C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK31_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK31_MKL = (INT_MK_MK_MK31_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK31_MKH  ---------------------------
// SVD Line: 8965

unsigned char INT_MK_MK_MK31_MKH __AT (0x4000617D);



// ----------------------------  Register Item: INT_MK_MK_MK31_MKH  -------------------------------
// SVD Line: 8965

//  <item> SFDITEM_REG__INT_MK_MK_MK31_MKH
//    <name> MKH </name>
//    <i> [Bits 7..0] RW (@ 0x4000617D) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK31_MKH >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK31_MKH = (INT_MK_MK_MK31_MKH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK31  ---------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK31
//    <name> [31] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK31_MKL </item>
//    <item> SFDITEM_REG__INT_MK_MK_MK31_MKH </item>
//  </itree>
//  


// -------------------------------  Cluster Array ITree: INT_MK  ----------------------------------
// SVD Line: 8951

//  <itree> SFDITEM_CLUST__INT_MK
//    <name> MK </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK0 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK1 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK2 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK3 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK4 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK5 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK6 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK7 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK8 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK9 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK10 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK11 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK12 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK13 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK14 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK15 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK16 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK17 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK18 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK19 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK20 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK21 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK22 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK23 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK24 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK25 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK26 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK27 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK28 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK29 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK30 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK31 </item>
//  </itree>
//  


// ----------------------------------  Peripheral View: INT  --------------------------------------
// SVD Line: 8913

//  <view> INT
//    <name> INT </name>
//    <item> SFDITEM_CLUST__INT_IF </item>
//    <item> SFDITEM_CLUST__INT_MK </item>
//  </view>
//  


// ----------------------------  Register Item Address: INTM_EGP0  --------------------------------
// SVD Line: 9043

unsigned char INTM_EGP0 __AT (0x40045B38);



// -------------------------------  Field Item: INTM_EGP0_EGP0  -----------------------------------
// SVD Line: 9051

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP0
//    <name> EGP0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B38) EGP0 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.0..0> EGP0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP1  -----------------------------------
// SVD Line: 9057

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP1
//    <name> EGP1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B38) EGP1 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.1..1> EGP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP2  -----------------------------------
// SVD Line: 9063

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP2
//    <name> EGP2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B38) EGP2 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.2..2> EGP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP3  -----------------------------------
// SVD Line: 9069

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP3
//    <name> EGP3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B38) EGP3 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.3..3> EGP3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP4  -----------------------------------
// SVD Line: 9075

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP4
//    <name> EGP4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40045B38) EGP4 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.4..4> EGP4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP5  -----------------------------------
// SVD Line: 9081

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP5
//    <name> EGP5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40045B38) EGP5 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.5..5> EGP5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP6  -----------------------------------
// SVD Line: 9087

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP6
//    <name> EGP6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40045B38) EGP6 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.6..6> EGP6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP7  -----------------------------------
// SVD Line: 9093

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP7
//    <name> EGP7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045B38) EGP7 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.7..7> EGP7
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGP0  -----------------------------------
// SVD Line: 9043

//  <rtree> SFDITEM_REG__INTM_EGP0
//    <name> EGP0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B38) External interrupt rising edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGP0 >> 0) & 0xFF), ((INTM_EGP0 = (INTM_EGP0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP0 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP1 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP2 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP3 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP4 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP5 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP6 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: INTM_EGN0  --------------------------------
// SVD Line: 9101

unsigned char INTM_EGN0 __AT (0x40045B39);



// -------------------------------  Field Item: INTM_EGN0_EGN0  -----------------------------------
// SVD Line: 9109

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN0
//    <name> EGN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B39) EGN0 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.0..0> EGN0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN1  -----------------------------------
// SVD Line: 9115

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN1
//    <name> EGN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B39) EGN1 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.1..1> EGN1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN2  -----------------------------------
// SVD Line: 9121

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN2
//    <name> EGN2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B39) EGN2 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.2..2> EGN2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN3  -----------------------------------
// SVD Line: 9127

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN3
//    <name> EGN3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B39) EGN3 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.3..3> EGN3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN4  -----------------------------------
// SVD Line: 9133

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN4
//    <name> EGN4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40045B39) EGN4 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.4..4> EGN4
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN5  -----------------------------------
// SVD Line: 9139

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN5
//    <name> EGN5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40045B39) EGN5 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.5..5> EGN5
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN6  -----------------------------------
// SVD Line: 9145

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN6
//    <name> EGN6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40045B39) EGN6 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.6..6> EGN6
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN7  -----------------------------------
// SVD Line: 9151

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN7
//    <name> EGN7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045B39) EGN7 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.7..7> EGN7
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGN0  -----------------------------------
// SVD Line: 9101

//  <rtree> SFDITEM_REG__INTM_EGN0
//    <name> EGN0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B39) External interrupt falling edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGN0 >> 0) & 0xFF), ((INTM_EGN0 = (INTM_EGN0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN0 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN1 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN2 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN3 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN4 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN5 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN6 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN7 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: INTM  -------------------------------------
// SVD Line: 8977

//  <view> INTM
//    <name> INTM </name>
//    <item> SFDITEM_REG__INTM_EGP0 </item>
//    <item> SFDITEM_REG__INTM_EGN0 </item>
//  </view>
//  


// -----------------------------  Register Item Address: KEY_KRM  ---------------------------------
// SVD Line: 9184

unsigned char KEY_KRM __AT (0x40044B37);



// ---------------------------------  Register Item: KEY_KRM  -------------------------------------
// SVD Line: 9184

//  <item> SFDITEM_REG__KEY_KRM
//    <name> KRM </name>
//    <i> [Bits 7..0] RW (@ 0x40044B37) Key return mode register </i>
//    <edit> 
//      <loc> ( (unsigned char)((KEY_KRM >> 0) & 0xFFFFFFFF), ((KEY_KRM = (KEY_KRM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: KEY  --------------------------------------
// SVD Line: 9162

//  <view> KEY
//    <name> KEY </name>
//    <item> SFDITEM_REG__KEY_KRM </item>
//  </view>
//  


// ----------------------------  Register Item Address: MISC_NFEN0  -------------------------------
// SVD Line: 9211

unsigned char MISC_NFEN0 __AT (0x40040470);



// -----------------------------  Field Item: MISC_NFEN0_SNFEN00  ---------------------------------
// SVD Line: 9218

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN00
//    <name> SNFEN00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040470) Enable noise filter of RxD0 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.0..0> SNFEN00
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN0_SNFEN10  ---------------------------------
// SVD Line: 9224

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN10
//    <name> SNFEN10 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040470) Enable noise filter of RxD1 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.2..2> SNFEN10
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN0_SNFEN20  ---------------------------------
// SVD Line: 9230

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN20
//    <name> SNFEN20 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40040470) Enable noise filter of RxD2 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.4..4> SNFEN20
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN0  -----------------------------------
// SVD Line: 9211

//  <rtree> SFDITEM_REG__MISC_NFEN0
//    <name> NFEN0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040470) Noise filter enable register 0 </i>
//    <loc> ( (unsigned char)((MISC_NFEN0 >> 0) & 0xFF), ((MISC_NFEN0 = (MISC_NFEN0 & ~(0x15UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x15) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN00 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN10 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN20 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_NFEN1  -------------------------------
// SVD Line: 9238

unsigned char MISC_NFEN1 __AT (0x40040471);



// -----------------------------  Field Item: MISC_NFEN1_TNFEN00  ---------------------------------
// SVD Line: 9246

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN00
//    <name> TNFEN00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040471) Enable noise filter of TI00 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.0..0> TNFEN00
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN01  ---------------------------------
// SVD Line: 9252

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN01
//    <name> TNFEN01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040471) Enable noise filter of TI01 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.1..1> TNFEN01
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN02  ---------------------------------
// SVD Line: 9258

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN02
//    <name> TNFEN02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040471) Enable noise filter of TI02 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.2..2> TNFEN02
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN03  ---------------------------------
// SVD Line: 9264

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN03
//    <name> TNFEN03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040471) Enable noise filter of TI03 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.3..3> TNFEN03
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN1  -----------------------------------
// SVD Line: 9238

//  <rtree> SFDITEM_REG__MISC_NFEN1
//    <name> NFEN1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040471) Noise filter enable register 1 </i>
//    <loc> ( (unsigned char)((MISC_NFEN1 >> 0) & 0xFF), ((MISC_NFEN1 = (MISC_NFEN1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN00 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN01 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN02 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_NFEN2  -------------------------------
// SVD Line: 9272

unsigned char MISC_NFEN2 __AT (0x40040472);



// -----------------------------  Field Item: MISC_NFEN2_TNFEN10  ---------------------------------
// SVD Line: 9280

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN10
//    <name> TNFEN10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040472) Enable noise filter of TI10 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.0..0> TNFEN10
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN11  ---------------------------------
// SVD Line: 9286

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN11
//    <name> TNFEN11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040472) Enable noise filter of TI11 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.1..1> TNFEN11
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN12  ---------------------------------
// SVD Line: 9292

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN12
//    <name> TNFEN12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040472) Enable noise filter of TI12 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.2..2> TNFEN12
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN13  ---------------------------------
// SVD Line: 9298

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN13
//    <name> TNFEN13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040472) Enable noise filter of TI13 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.3..3> TNFEN13
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN14  ---------------------------------
// SVD Line: 9304

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN14
//    <name> TNFEN14 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40040472) Enable noise filter of TI14 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.4..4> TNFEN14
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN15  ---------------------------------
// SVD Line: 9310

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN15
//    <name> TNFEN15 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40040472) Enable noise filter of TI15 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.5..5> TNFEN15
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN16  ---------------------------------
// SVD Line: 9316

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN16
//    <name> TNFEN16 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40040472) Enable noise filter of TI16 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.6..6> TNFEN16
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN17  ---------------------------------
// SVD Line: 9322

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN17
//    <name> TNFEN17 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040472) Enable noise filter of TI17 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.7..7> TNFEN17
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN2  -----------------------------------
// SVD Line: 9272

//  <rtree> SFDITEM_REG__MISC_NFEN2
//    <name> NFEN2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040472) Noise filter enable register 2 </i>
//    <loc> ( (unsigned char)((MISC_NFEN2 >> 0) & 0xFF), ((MISC_NFEN2 = (MISC_NFEN2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN10 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN11 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN12 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN13 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN14 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN15 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN16 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN17 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MISC_ISC  --------------------------------
// SVD Line: 9330

unsigned char MISC_ISC __AT (0x40040473);



// -------------------------------  Field Item: MISC_ISC_SSIE00  ----------------------------------
// SVD Line: 9338

//  <item> SFDITEM_FIELD__MISC_ISC_SSIE00
//    <name> SSIE00 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040473) \nThe slave select input (SS00) of SPI00 is valid\n0 : INVALID = The slave select input (SS00) pin is invalid\n1 : VALID = The slave select input (SS00) pin is valid </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.7..7> SSIE00
//        <0=> 0: INVALID = The slave select input (SS00) pin is invalid
//        <1=> 1: VALID = The slave select input (SS00) pin is valid
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: MISC_ISC_ISC1  -----------------------------------
// SVD Line: 9356

//  <item> SFDITEM_FIELD__MISC_ISC_ISC1
//    <name> ISC1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040473) \nThe input selection of TI03\n0 : TI03 = Select TI03 as the input of TI03\n1 : RXD0 = Select RXD0 as the input of TI03 </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.1..1> ISC1
//        <0=> 0: TI03 = Select TI03 as the input of TI03
//        <1=> 1: RXD0 = Select RXD0 as the input of TI03
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: MISC_ISC_ISC0  -----------------------------------
// SVD Line: 9374

//  <item> SFDITEM_FIELD__MISC_ISC_ISC0
//    <name> ISC0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040473) \nThe input selection of INTP0\n0 : INTP0 = Select INTP0 as the input of INTP0\n1 : RXD0 = Select RXD0 as the input of INTP0 </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.0..0> ISC0
//        <0=> 0: INTP0 = Select INTP0 as the input of INTP0
//        <1=> 1: RXD0 = Select RXD0 as the input of INTP0
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: MISC_ISC  ------------------------------------
// SVD Line: 9330

//  <rtree> SFDITEM_REG__MISC_ISC
//    <name> ISC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040473) Input switch control register </i>
//    <loc> ( (unsigned char)((MISC_ISC >> 0) & 0xFF), ((MISC_ISC = (MISC_ISC & ~(0x83UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x83) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_ISC_SSIE00 </item>
//    <item> SFDITEM_FIELD__MISC_ISC_ISC1 </item>
//    <item> SFDITEM_FIELD__MISC_ISC_ISC0 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_TIOS0  -------------------------------
// SVD Line: 9394

unsigned char MISC_TIOS0 __AT (0x40040474);



// --------------------------------  Register Item: MISC_TIOS0  -----------------------------------
// SVD Line: 9394

//  <item> SFDITEM_REG__MISC_TIOS0
//    <name> TIOS0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040474) Timer I/O select register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_TIOS0 >> 0) & 0xFFFFFFFF), ((MISC_TIOS0 = (MISC_TIOS0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MISC_TIOS1  -------------------------------
// SVD Line: 9402

unsigned char MISC_TIOS1 __AT (0x40040475);



// --------------------------------  Register Item: MISC_TIOS1  -----------------------------------
// SVD Line: 9402

//  <item> SFDITEM_REG__MISC_TIOS1
//    <name> TIOS1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040475) Timer I/O select register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_TIOS1 >> 0) & 0xFFFFFFFF), ((MISC_TIOS1 = (MISC_TIOS1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MISC_RTCCL  -------------------------------
// SVD Line: 9410

unsigned char MISC_RTCCL __AT (0x4004047C);



// --------------------------------  Register Item: MISC_RTCCL  -----------------------------------
// SVD Line: 9410

//  <item> SFDITEM_REG__MISC_RTCCL
//    <name> RTCCL </name>
//    <i> [Bits 7..0] RW (@ 0x4004047C) Real-time clock select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_RTCCL >> 0) & 0xFFFFFFFF), ((MISC_RTCCL = (MISC_RTCCL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: MISC  -------------------------------------
// SVD Line: 9195

//  <view> MISC
//    <name> MISC </name>
//    <item> SFDITEM_REG__MISC_NFEN0 </item>
//    <item> SFDITEM_REG__MISC_NFEN1 </item>
//    <item> SFDITEM_REG__MISC_NFEN2 </item>
//    <item> SFDITEM_REG__MISC_ISC </item>
//    <item> SFDITEM_REG__MISC_TIOS0 </item>
//    <item> SFDITEM_REG__MISC_TIOS1 </item>
//    <item> SFDITEM_REG__MISC_RTCCL </item>
//  </view>
//  


// ----------------------------  Register Item Address: FMC_FLSTS  --------------------------------
// SVD Line: 9444

unsigned int FMC_FLSTS __AT (0x40020000);



// --------------------------------  Field Item: FMC_FLSTS_OVF  -----------------------------------
// SVD Line: 9452

//  <item> SFDITEM_FIELD__FMC_FLSTS_OVF
//    <name> OVF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020000) Flash erase or write operaiton finish </i>
//    <check> 
//      <loc> ( (unsigned int) FMC_FLSTS ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FMC_FLSTS_EVF  -----------------------------------
// SVD Line: 9458

//  <item> SFDITEM_FIELD__FMC_FLSTS_EVF
//    <name> EVF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020000) Flash hardware verification error flag </i>
//    <check> 
//      <loc> ( (unsigned int) FMC_FLSTS ) </loc>
//      <o.2..2> EVF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FMC_FLSTS  -----------------------------------
// SVD Line: 9444

//  <rtree> SFDITEM_REG__FMC_FLSTS
//    <name> FLSTS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020000) Flash status register </i>
//    <loc> ( (unsigned int)((FMC_FLSTS >> 0) & 0xFFFFFFFF), ((FMC_FLSTS = (FMC_FLSTS & ~(0x5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FMC_FLSTS_OVF </item>
//    <item> SFDITEM_FIELD__FMC_FLSTS_EVF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FMC_FLOPMD1  -------------------------------
// SVD Line: 9466

unsigned int FMC_FLOPMD1 __AT (0x40020004);



// -------------------------------  Register Item: FMC_FLOPMD1  -----------------------------------
// SVD Line: 9466

//  <item> SFDITEM_REG__FMC_FLOPMD1
//    <name> FLOPMD1 </name>
//    <i> [Bits 31..0] RW (@ 0x40020004) Flash operation mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLOPMD1 >> 0) & 0xFFFFFFFF), ((FMC_FLOPMD1 = (FMC_FLOPMD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLOPMD2  -------------------------------
// SVD Line: 9474

unsigned int FMC_FLOPMD2 __AT (0x40020008);



// -------------------------------  Register Item: FMC_FLOPMD2  -----------------------------------
// SVD Line: 9474

//  <item> SFDITEM_REG__FMC_FLOPMD2
//    <name> FLOPMD2 </name>
//    <i> [Bits 31..0] RW (@ 0x40020008) Flash operation mode register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLOPMD2 >> 0) & 0xFFFFFFFF), ((FMC_FLOPMD2 = (FMC_FLOPMD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: FMC_FLERMD  -------------------------------
// SVD Line: 9480

unsigned int FMC_FLERMD __AT (0x4002000C);



// --------------------------------  Register Item: FMC_FLERMD  -----------------------------------
// SVD Line: 9480

//  <item> SFDITEM_REG__FMC_FLERMD
//    <name> FLERMD </name>
//    <i> [Bits 31..0] RW (@ 0x4002000C) Flash erase mode register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLERMD >> 0) & 0xFFFFFFFF), ((FMC_FLERMD = (FMC_FLERMD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLCERCNT  ------------------------------
// SVD Line: 9488

unsigned int FMC_FLCERCNT __AT (0x40020010);



// -------------------------------  Register Item: FMC_FLCERCNT  ----------------------------------
// SVD Line: 9488

//  <item> SFDITEM_REG__FMC_FLCERCNT
//    <name> FLCERCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020010) Flash chip erase control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLCERCNT >> 0) & 0xFFFFFFFF), ((FMC_FLCERCNT = (FMC_FLCERCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLSERCNT  ------------------------------
// SVD Line: 9495

unsigned int FMC_FLSERCNT __AT (0x40020014);



// -------------------------------  Register Item: FMC_FLSERCNT  ----------------------------------
// SVD Line: 9495

//  <item> SFDITEM_REG__FMC_FLSERCNT
//    <name> FLSERCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020014) Flash sector erase control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLSERCNT >> 0) & 0xFFFFFFFF), ((FMC_FLSERCNT = (FMC_FLSERCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLNVSCNT  ------------------------------
// SVD Line: 9502

unsigned int FMC_FLNVSCNT __AT (0x40020018);



// -------------------------------  Register Item: FMC_FLNVSCNT  ----------------------------------
// SVD Line: 9502

//  <item> SFDITEM_REG__FMC_FLNVSCNT
//    <name> FLNVSCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020018) Flash address setup time (Tnvs) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLNVSCNT >> 0) & 0xFFFFFFFF), ((FMC_FLNVSCNT = (FMC_FLNVSCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLPROCNT  ------------------------------
// SVD Line: 9509

unsigned int FMC_FLPROCNT __AT (0x4002001C);



// -------------------------------  Register Item: FMC_FLPROCNT  ----------------------------------
// SVD Line: 9509

//  <item> SFDITEM_REG__FMC_FLPROCNT
//    <name> FLPROCNT </name>
//    <i> [Bits 31..0] RW (@ 0x4002001C) Flash program control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPROCNT >> 0) & 0xFFFFFFFF), ((FMC_FLPROCNT = (FMC_FLPROCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: FMC_FLPROT  -------------------------------
// SVD Line: 9516

unsigned int FMC_FLPROT __AT (0x40020020);



// --------------------------------  Register Item: FMC_FLPROT  -----------------------------------
// SVD Line: 9516

//  <item> SFDITEM_REG__FMC_FLPROT
//    <name> FLPROT </name>
//    <i> [Bits 31..0] RW (@ 0x40020020) Flash protect control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPROT >> 0) & 0xFFFFFFFF), ((FMC_FLPROT = (FMC_FLPROT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLPRVCNT  ------------------------------
// SVD Line: 9524

unsigned int FMC_FLPRVCNT __AT (0x40020038);



// -------------------------------  Register Item: FMC_FLPRVCNT  ----------------------------------
// SVD Line: 9524

//  <item> SFDITEM_REG__FMC_FLPRVCNT
//    <name> FLPRVCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020038) Flash program recovery time (Trcv) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPRVCNT >> 0) & 0xFFFFFFFF), ((FMC_FLPRVCNT = (FMC_FLPRVCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLERVCNT  ------------------------------
// SVD Line: 9531

unsigned int FMC_FLERVCNT __AT (0x4002003C);



// -------------------------------  Register Item: FMC_FLERVCNT  ----------------------------------
// SVD Line: 9531

//  <item> SFDITEM_REG__FMC_FLERVCNT
//    <name> FLERVCNT </name>
//    <i> [Bits 31..0] RW (@ 0x4002003C) Flash erase recovery time (Trcv) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLERVCNT >> 0) & 0xFFFFFFFF), ((FMC_FLERVCNT = (FMC_FLERVCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: FMC  --------------------------------------
// SVD Line: 9422

//  <view> FMC
//    <name> FMC </name>
//    <item> SFDITEM_REG__FMC_FLSTS </item>
//    <item> SFDITEM_REG__FMC_FLOPMD1 </item>
//    <item> SFDITEM_REG__FMC_FLOPMD2 </item>
//    <item> SFDITEM_REG__FMC_FLERMD </item>
//    <item> SFDITEM_REG__FMC_FLCERCNT </item>
//    <item> SFDITEM_REG__FMC_FLSERCNT </item>
//    <item> SFDITEM_REG__FMC_FLNVSCNT </item>
//    <item> SFDITEM_REG__FMC_FLPROCNT </item>
//    <item> SFDITEM_REG__FMC_FLPROT </item>
//    <item> SFDITEM_REG__FMC_FLPRVCNT </item>
//    <item> SFDITEM_REG__FMC_FLERVCNT </item>
//  </view>
//  


// ---------------------------  Register Item Address: SAF_CRC0CTL  -------------------------------
// SVD Line: 9557

unsigned char SAF_CRC0CTL __AT (0x40021810);



// -----------------------------  Field Item: SAF_CRC0CTL_CRC0EN  ---------------------------------
// SVD Line: 9566

//  <item> SFDITEM_FIELD__SAF_CRC0CTL_CRC0EN
//    <name> CRC0EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021810) Control of high-speed CRC operation </i>
//    <check> 
//      <loc> ( (unsigned char) SAF_CRC0CTL ) </loc>
//      <o.7..7> CRC0EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAF_CRC0CTL_FEA  ----------------------------------
// SVD Line: 9572

//  <item> SFDITEM_FIELD__SAF_CRC0CTL_FEA
//    <name> FEA </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40021810) High-speed CRC operation range </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAF_CRC0CTL >> 0) & 0x7F), ((SAF_CRC0CTL = (SAF_CRC0CTL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SAF_CRC0CTL  ----------------------------------
// SVD Line: 9557

//  <rtree> SFDITEM_REG__SAF_CRC0CTL
//    <name> CRC0CTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40021810) Flash memory CRC control register </i>
//    <loc> ( (unsigned char)((SAF_CRC0CTL >> 0) & 0xFF), ((SAF_CRC0CTL = (SAF_CRC0CTL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAF_CRC0CTL_CRC0EN </item>
//    <item> SFDITEM_FIELD__SAF_CRC0CTL_FEA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAF_PGCRCL  -------------------------------
// SVD Line: 9580

unsigned short SAF_PGCRCL __AT (0x40021812);



// --------------------------------  Register Item: SAF_PGCRCL  -----------------------------------
// SVD Line: 9580

//  <item> SFDITEM_REG__SAF_PGCRCL
//    <name> PGCRCL </name>
//    <i> [Bits 15..0] RW (@ 0x40021812) Flash memory CRC operation result register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_PGCRCL >> 0) & 0xFFFFFFFF), ((SAF_PGCRCL = (SAF_PGCRCL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SAF_CRCIN  --------------------------------
// SVD Line: 9589

unsigned char SAF_CRCIN __AT (0x400433AC);



// --------------------------------  Register Item: SAF_CRCIN  ------------------------------------
// SVD Line: 9589

//  <item> SFDITEM_REG__SAF_CRCIN
//    <name> CRCIN </name>
//    <i> [Bits 7..0] RW (@ 0x400433AC) CRC input register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAF_CRCIN >> 0) & 0xFFFFFFFF), ((SAF_CRCIN = (SAF_CRCIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: SAF_CRCD  --------------------------------
// SVD Line: 9598

unsigned short SAF_CRCD __AT (0x400432FA);



// ---------------------------------  Register Item: SAF_CRCD  ------------------------------------
// SVD Line: 9598

//  <item> SFDITEM_REG__SAF_CRCD
//    <name> CRCD </name>
//    <i> [Bits 15..0] RW (@ 0x400432FA) CRC data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_CRCD >> 0) & 0xFFFFFFFF), ((SAF_CRCD = (SAF_CRCD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SAF_RPECTL  -------------------------------
// SVD Line: 9607

unsigned char SAF_RPECTL __AT (0x40020425);



// -------------------------------  Field Item: SAF_RPECTL_RPEF  ----------------------------------
// SVD Line: 9618

//  <item> SFDITEM_FIELD__SAF_RPECTL_RPEF
//    <name> RPEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020425) \nParity error status flag\n0 : NoError = No parity error has occurred\n1 : Error = Parity error has occurred </i>
//    <combo> 
//      <loc> ( (unsigned char) SAF_RPECTL ) </loc>
//      <o.0..0> RPEF
//        <0=> 0: NoError = No parity error has occurred
//        <1=> 1: Error = Parity error has occurred
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SAF_RPECTL_RPERDIS  ---------------------------------
// SVD Line: 9638

//  <item> SFDITEM_FIELD__SAF_RPECTL_RPERDIS
//    <name> RPERDIS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020425) \nDisable RAM parity error reset\n0 : Enable = Enable parity error reset\n1 : Disable = Disable parity error reset </i>
//    <combo> 
//      <loc> ( (unsigned char) SAF_RPECTL ) </loc>
//      <o.7..7> RPERDIS
//        <0=> 0: Enable = Enable parity error reset
//        <1=> 1: Disable = Disable parity error reset
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: SAF_RPECTL  -----------------------------------
// SVD Line: 9607

//  <rtree> SFDITEM_REG__SAF_RPECTL
//    <name> RPECTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020425) RAM parity error control register </i>
//    <loc> ( (unsigned char)((SAF_RPECTL >> 0) & 0xFF), ((SAF_RPECTL = (SAF_RPECTL & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAF_RPECTL_RPEF </item>
//    <item> SFDITEM_FIELD__SAF_RPECTL_RPERDIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAF_SFRGD  --------------------------------
// SVD Line: 9659

unsigned short SAF_SFRGD __AT (0x40040478);



// --------------------------------  Register Item: SAF_SFRGD  ------------------------------------
// SVD Line: 9659

//  <item> SFDITEM_REG__SAF_SFRGD
//    <name> SFRGD </name>
//    <i> [Bits 15..0] RW (@ 0x40040478) SFR guard control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_SFRGD >> 0) & 0xFFFFFFFF), ((SAF_SFRGD = (SAF_SFRGD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SAF  --------------------------------------
// SVD Line: 9541

//  <view> SAF
//    <name> SAF </name>
//    <item> SFDITEM_REG__SAF_CRC0CTL </item>
//    <item> SFDITEM_REG__SAF_PGCRCL </item>
//    <item> SFDITEM_REG__SAF_CRCIN </item>
//    <item> SFDITEM_REG__SAF_CRCD </item>
//    <item> SFDITEM_REG__SAF_RPECTL </item>
//    <item> SFDITEM_REG__SAF_SFRGD </item>
//  </view>
//  


// ---------------------------  Register Item Address: QSPI_SFMSMD  -------------------------------
// SVD Line: 9687

unsigned int QSPI_SFMSMD __AT (0x64000000);



// ------------------------------  Field Item: QSPI_SFMSMD_SFMRM  ---------------------------------
// SVD Line: 9696

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMRM
//    <name> SFMRM </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x64000000) Serial interface read mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSMD >> 0) & 0x7), ((QSPI_SFMSMD = (QSPI_SFMSMD & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: QSPI_SFMSMD_SFMSE  ---------------------------------
// SVD Line: 9702

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMSE
//    <name> SFMSE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x64000000) QSSL extension function select after SPI bus access </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSMD >> 4) & 0x3), ((QSPI_SFMSMD = (QSPI_SFMSMD & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMPFE  ---------------------------------
// SVD Line: 9708

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMPFE
//    <name> SFMPFE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x64000000) Prefetch function select </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.6..6> SFMPFE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMPAE  ---------------------------------
// SVD Line: 9714

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMPAE
//    <name> SFMPAE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x64000000) Function select for stopping prefetch at locations other than on byte boundaries </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.7..7> SFMPAE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMMD3  ---------------------------------
// SVD Line: 9720

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMMD3
//    <name> SFMMD3 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x64000000) SPI mode select. An initial value is determined by input to CFGMD3 </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.8..8> SFMMD3
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMOEX  ---------------------------------
// SVD Line: 9726

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMOEX
//    <name> SFMOEX </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x64000000) Extension select for the I/O buffer output enable signal for the serial interface </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.9..9> SFMOEX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMOHW  ---------------------------------
// SVD Line: 9732

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMOHW
//    <name> SFMOHW </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x64000000) Hold time adjustment for serial transmission </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.10..10> SFMOHW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMOSW  ---------------------------------
// SVD Line: 9738

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMOSW
//    <name> SFMOSW </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x64000000) Setup time adjustment for serial transmission </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.11..11> SFMOSW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSMD_SFMCCE  ---------------------------------
// SVD Line: 9744

//  <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMCCE
//    <name> SFMCCE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x64000000) Read instruction code select </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSMD ) </loc>
//      <o.15..15> SFMCCE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSMD  ----------------------------------
// SVD Line: 9687

//  <rtree> SFDITEM_REG__QSPI_SFMSMD
//    <name> SFMSMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000000) Transfer Mode Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSMD >> 0) & 0xFFFFFFFF), ((QSPI_SFMSMD = (QSPI_SFMSMD & ~(0x8FF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8FF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMRM </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMSE </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMPFE </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMPAE </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMMD3 </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMOEX </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMOHW </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMOSW </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSMD_SFMCCE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSSC  -------------------------------
// SVD Line: 9752

unsigned int QSPI_SFMSSC __AT (0x64000004);



// ------------------------------  Field Item: QSPI_SFMSSC_SFMSW  ---------------------------------
// SVD Line: 9761

//  <item> SFDITEM_FIELD__QSPI_SFMSSC_SFMSW
//    <name> SFMSW </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x64000004) Minimum high-level width select for QSSL signal </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSSC >> 0) & 0xF), ((QSPI_SFMSSC = (QSPI_SFMSSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSSC_SFMSHD  ---------------------------------
// SVD Line: 9767

//  <item> SFDITEM_FIELD__QSPI_SFMSSC_SFMSHD
//    <name> SFMSHD </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x64000004) QSSL signal release timing select </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSSC ) </loc>
//      <o.4..4> SFMSHD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSSC_SFMSLD  ---------------------------------
// SVD Line: 9773

//  <item> SFDITEM_FIELD__QSPI_SFMSSC_SFMSLD
//    <name> SFMSLD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x64000004) QSSL signal output timing select </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSSC ) </loc>
//      <o.5..5> SFMSLD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSSC  ----------------------------------
// SVD Line: 9752

//  <rtree> SFDITEM_REG__QSPI_SFMSSC
//    <name> SFMSSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000004) Chip Selection Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSSC >> 0) & 0xFFFFFFFF), ((QSPI_SFMSSC = (QSPI_SFMSSC & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSSC_SFMSW </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSSC_SFMSHD </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSSC_SFMSLD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSKC  -------------------------------
// SVD Line: 9781

unsigned int QSPI_SFMSKC __AT (0x64000008);



// ------------------------------  Field Item: QSPI_SFMSKC_SFMDV  ---------------------------------
// SVD Line: 9790

//  <item> SFDITEM_FIELD__QSPI_SFMSKC_SFMDV
//    <name> SFMDV </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x64000008) Serial interface reference cycle select </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSKC >> 0) & 0x1F), ((QSPI_SFMSKC = (QSPI_SFMSKC & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSKC_SFMDTY  ---------------------------------
// SVD Line: 9796

//  <item> SFDITEM_FIELD__QSPI_SFMSKC_SFMDTY
//    <name> SFMDTY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x64000008) Duty ratio correction function select for the QSPCLK signal </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSKC ) </loc>
//      <o.5..5> SFMDTY
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSKC  ----------------------------------
// SVD Line: 9781

//  <rtree> SFDITEM_REG__QSPI_SFMSKC
//    <name> SFMSKC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000008) Clock Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSKC >> 0) & 0xFFFFFFFF), ((QSPI_SFMSKC = (QSPI_SFMSKC & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSKC_SFMDV </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSKC_SFMDTY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSST  -------------------------------
// SVD Line: 9804

unsigned int QSPI_SFMSST __AT (0x6400000C);



// ------------------------------  Field Item: QSPI_SFMSST_PFCNT  ---------------------------------
// SVD Line: 9814

//  <item> SFDITEM_FIELD__QSPI_SFMSST_PFCNT
//    <name> PFCNT </name>
//    <r> 
//    <i> [Bits 4..0] RO (@ 0x6400000C) Number of bytes of prefetched data </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSST >> 0) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: QSPI_SFMSST_PFFUL  ---------------------------------
// SVD Line: 9820

//  <item> SFDITEM_FIELD__QSPI_SFMSST_PFFUL
//    <name> PFFUL </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x6400000C) Prefetch buffer state </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSST ) </loc>
//      <o.6..6> PFFUL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: QSPI_SFMSST_PFOFF  ---------------------------------
// SVD Line: 9826

//  <item> SFDITEM_FIELD__QSPI_SFMSST_PFOFF
//    <name> PFOFF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x6400000C) Prefetch function operation state </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSST ) </loc>
//      <o.7..7> PFOFF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSST  ----------------------------------
// SVD Line: 9804

//  <rtree> SFDITEM_REG__QSPI_SFMSST
//    <name> SFMSST </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x6400000C) Status Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSST >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSST_PFCNT </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSST_PFFUL </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSST_PFOFF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMCOM  -------------------------------
// SVD Line: 9834

unsigned int QSPI_SFMCOM __AT (0x64000010);



// ------------------------------  Field Item: QSPI_SFMCOM_SFMD  ----------------------------------
// SVD Line: 9843

//  <item> SFDITEM_FIELD__QSPI_SFMCOM_SFMD
//    <name> SFMD </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x64000010) Port for direct communication with the SPI bus </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMCOM >> 0) & 0xFF), ((QSPI_SFMCOM = (QSPI_SFMCOM & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMCOM  ----------------------------------
// SVD Line: 9834

//  <rtree> SFDITEM_REG__QSPI_SFMCOM
//    <name> SFMCOM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000010) Communication Port Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMCOM >> 0) & 0xFFFFFFFF), ((QSPI_SFMCOM = (QSPI_SFMCOM & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMCOM_SFMD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMCMD  -------------------------------
// SVD Line: 9851

unsigned int QSPI_SFMCMD __AT (0x64000014);



// ------------------------------  Field Item: QSPI_SFMCMD_DCOM  ----------------------------------
// SVD Line: 9860

//  <item> SFDITEM_FIELD__QSPI_SFMCMD_DCOM
//    <name> DCOM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x64000014) Mode select for communication with the SPI bus </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMCMD ) </loc>
//      <o.0..0> DCOM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMCMD  ----------------------------------
// SVD Line: 9851

//  <rtree> SFDITEM_REG__QSPI_SFMCMD
//    <name> SFMCMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000014) Communication Mode Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMCMD >> 0) & 0xFFFFFFFF), ((QSPI_SFMCMD = (QSPI_SFMCMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMCMD_DCOM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMCST  -------------------------------
// SVD Line: 9868

unsigned int QSPI_SFMCST __AT (0x64000018);



// -----------------------------  Field Item: QSPI_SFMCST_COMBSY  ---------------------------------
// SVD Line: 9877

//  <item> SFDITEM_FIELD__QSPI_SFMCST_COMBSY
//    <name> COMBSY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x64000018) SPI bus cycle completion state in direct communication </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMCST ) </loc>
//      <o.0..0> COMBSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: QSPI_SFMCST_EROMR  ---------------------------------
// SVD Line: 9884

//  <item> SFDITEM_FIELD__QSPI_SFMCST_EROMR
//    <name> EROMR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x64000018) ROM access detection status in direct communication mode </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMCST ) </loc>
//      <o.8..8> EROMR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMCST  ----------------------------------
// SVD Line: 9868

//  <rtree> SFDITEM_REG__QSPI_SFMCST
//    <name> SFMCST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000018) Communication Status Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMCST >> 0) & 0xFFFFFFFF), ((QSPI_SFMCST = (QSPI_SFMCST & ~(0x100UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x100) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMCST_COMBSY </item>
//    <item> SFDITEM_FIELD__QSPI_SFMCST_EROMR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSIC  -------------------------------
// SVD Line: 9892

unsigned int QSPI_SFMSIC __AT (0x64000020);



// -----------------------------  Field Item: QSPI_SFMSIC_SFMCIC  ---------------------------------
// SVD Line: 9901

//  <item> SFDITEM_FIELD__QSPI_SFMSIC_SFMCIC
//    <name> SFMCIC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x64000020) Serial flash instruction code to substitute </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSIC >> 0) & 0xFF), ((QSPI_SFMSIC = (QSPI_SFMSIC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSIC  ----------------------------------
// SVD Line: 9892

//  <rtree> SFDITEM_REG__QSPI_SFMSIC
//    <name> SFMSIC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000020) Instruction Code Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSIC >> 0) & 0xFFFFFFFF), ((QSPI_SFMSIC = (QSPI_SFMSIC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSIC_SFMCIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSAC  -------------------------------
// SVD Line: 9909

unsigned int QSPI_SFMSAC __AT (0x64000024);



// ------------------------------  Field Item: QSPI_SFMSAC_SFMAS  ---------------------------------
// SVD Line: 9918

//  <item> SFDITEM_FIELD__QSPI_SFMSAC_SFMAS
//    <name> SFMAS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x64000024) Number of address bytes select for the serial interface </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSAC ) </loc>
//      <o.0..0> SFMAS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSAC_SFM4BC  ---------------------------------
// SVD Line: 9924

//  <item> SFDITEM_FIELD__QSPI_SFMSAC_SFM4BC
//    <name> SFM4BC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x64000024) Default instruction code select </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSAC ) </loc>
//      <o.4..4> SFM4BC
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSAC  ----------------------------------
// SVD Line: 9909

//  <rtree> SFDITEM_REG__QSPI_SFMSAC
//    <name> SFMSAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000024) Address Mode Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSAC >> 0) & 0xFFFFFFFF), ((QSPI_SFMSAC = (QSPI_SFMSAC & ~(0x11UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x11) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSAC_SFMAS </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSAC_SFM4BC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSDC  -------------------------------
// SVD Line: 9932

unsigned int QSPI_SFMSDC __AT (0x64000028);



// ------------------------------  Field Item: QSPI_SFMSDC_SFMDN  ---------------------------------
// SVD Line: 9941

//  <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMDN
//    <name> SFMDN </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x64000028) Number of dummy cycles select for Fast Read instructions </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSDC >> 0) & 0xF), ((QSPI_SFMSDC = (QSPI_SFMSDC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSDC_SFMXST  ---------------------------------
// SVD Line: 9947

//  <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMXST
//    <name> SFMXST </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x64000028) XIP mode status </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSDC ) </loc>
//      <o.6..6> SFMXST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSDC_SFMXEN  ---------------------------------
// SVD Line: 9954

//  <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMXEN
//    <name> SFMXEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x64000028) XIP mode permission </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSDC ) </loc>
//      <o.7..7> SFMXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: QSPI_SFMSDC_SFMXD  ---------------------------------
// SVD Line: 9960

//  <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMXD
//    <name> SFMXD </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x64000028) Mode data for serial flash (control XIP mode) </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSDC >> 8) & 0xFF), ((QSPI_SFMSDC = (QSPI_SFMSDC & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSDC  ----------------------------------
// SVD Line: 9932

//  <rtree> SFDITEM_REG__QSPI_SFMSDC
//    <name> SFMSDC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000028) Dummy Cycle Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSDC >> 0) & 0xFFFFFFFF), ((QSPI_SFMSDC = (QSPI_SFMSDC & ~(0xFF8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMDN </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMXST </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMXEN </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSDC_SFMXD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMSPC  -------------------------------
// SVD Line: 9968

unsigned int QSPI_SFMSPC __AT (0x64000030);



// -----------------------------  Field Item: QSPI_SFMSPC_SFMSPI  ---------------------------------
// SVD Line: 9977

//  <item> SFDITEM_FIELD__QSPI_SFMSPC_SFMSPI
//    <name> SFMSPI </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x64000030) SPI protocol select </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMSPC >> 0) & 0x3), ((QSPI_SFMSPC = (QSPI_SFMSPC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: QSPI_SFMSPC_SFMSDE  ---------------------------------
// SVD Line: 9983

//  <item> SFDITEM_FIELD__QSPI_SFMSPC_SFMSDE
//    <name> SFMSDE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x64000030) Minimum time select for input output switch </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMSPC ) </loc>
//      <o.4..4> SFMSDE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMSPC  ----------------------------------
// SVD Line: 9968

//  <rtree> SFDITEM_REG__QSPI_SFMSPC
//    <name> SFMSPC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000030) SPI Protocol Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMSPC >> 0) & 0xFFFFFFFF), ((QSPI_SFMSPC = (QSPI_SFMSPC & ~(0x13UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x13) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMSPC_SFMSPI </item>
//    <item> SFDITEM_FIELD__QSPI_SFMSPC_SFMSDE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMPMD  -------------------------------
// SVD Line: 9991

unsigned int QSPI_SFMPMD __AT (0x64000034);



// -----------------------------  Field Item: QSPI_SFMPMD_SFMWPL  ---------------------------------
// SVD Line: 10000

//  <item> SFDITEM_FIELD__QSPI_SFMPMD_SFMWPL
//    <name> SFMWPL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x64000034) WP pin specification </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMPMD ) </loc>
//      <o.2..2> SFMWPL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMPMD  ----------------------------------
// SVD Line: 9991

//  <rtree> SFDITEM_REG__QSPI_SFMPMD
//    <name> SFMPMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000034) Port Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMPMD >> 0) & 0xFFFFFFFF), ((QSPI_SFMPMD = (QSPI_SFMPMD & ~(0x4UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x4) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMPMD_SFMWPL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMCNT1  ------------------------------
// SVD Line: 10008

unsigned int QSPI_SFMCNT1 __AT (0x64000804);



// ----------------------------  Field Item: QSPI_SFMCNT1_QSPI_EXT  -------------------------------
// SVD Line: 10017

//  <item> SFDITEM_FIELD__QSPI_SFMCNT1_QSPI_EXT
//    <name> QSPI_EXT </name>
//    <rw> 
//    <i> [Bits 31..26] RW (@ 0x64000804) Bank switching address </i>
//    <edit> 
//      <loc> ( (unsigned char)((QSPI_SFMCNT1 >> 26) & 0x3F), ((QSPI_SFMCNT1 = (QSPI_SFMCNT1 & ~(0x3FUL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_SFMCNT1  ----------------------------------
// SVD Line: 10008

//  <rtree> SFDITEM_REG__QSPI_SFMCNT1
//    <name> SFMCNT1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000804) External QSPI Address Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMCNT1 >> 0) & 0xFFFFFFFF), ((QSPI_SFMCNT1 = (QSPI_SFMCNT1 & ~(0xFC000000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFC000000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMCNT1_QSPI_EXT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMDMA  -------------------------------
// SVD Line: 10025

unsigned int QSPI_SFMDMA __AT (0x6400080C);



// ---------------------------  Field Item: QSPI_SFMDMA_QSPIDMATRG  -------------------------------
// SVD Line: 10032

//  <item> SFDITEM_FIELD__QSPI_SFMDMA_QSPIDMATRG
//    <name> QSPIDMATRG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x6400080C) External QSPI DMA Transfer Software Trigger Bit </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMDMA ) </loc>
//      <o.0..0> QSPIDMATRG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: QSPI_SFMDMA  ----------------------------------
// SVD Line: 10025

//  <rtree> SFDITEM_REG__QSPI_SFMDMA
//    <name> SFMDMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x6400080C) External QSPI DMA Transfer Software Trigger Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMDMA >> 0) & 0xFFFFFFFF), ((QSPI_SFMDMA = (QSPI_SFMDMA & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMDMA_QSPIDMATRG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_SFMCRPT  ------------------------------
// SVD Line: 10040

unsigned int QSPI_SFMCRPT __AT (0x64000810);



// ----------------------------  Field Item: QSPI_SFMCRPT_QSPICRPT  -------------------------------
// SVD Line: 10047

//  <item> SFDITEM_FIELD__QSPI_SFMCRPT_QSPICRPT
//    <name> QSPICRPT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x64000810) External QSPI Crypto Transfer Enable Bit </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SFMCRPT ) </loc>
//      <o.0..0> QSPICRPT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_SFMCRPT  ----------------------------------
// SVD Line: 10040

//  <rtree> SFDITEM_REG__QSPI_SFMCRPT
//    <name> SFMCRPT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x64000810) External QSPI Crypto Transfer Control Register </i>
//    <loc> ( (unsigned int)((QSPI_SFMCRPT >> 0) & 0xFFFFFFFF), ((QSPI_SFMCRPT = (QSPI_SFMCRPT & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SFMCRPT_QSPICRPT </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: QSPI  -------------------------------------
// SVD Line: 9671

//  <view> QSPI
//    <name> QSPI </name>
//    <item> SFDITEM_REG__QSPI_SFMSMD </item>
//    <item> SFDITEM_REG__QSPI_SFMSSC </item>
//    <item> SFDITEM_REG__QSPI_SFMSKC </item>
//    <item> SFDITEM_REG__QSPI_SFMSST </item>
//    <item> SFDITEM_REG__QSPI_SFMCOM </item>
//    <item> SFDITEM_REG__QSPI_SFMCMD </item>
//    <item> SFDITEM_REG__QSPI_SFMCST </item>
//    <item> SFDITEM_REG__QSPI_SFMSIC </item>
//    <item> SFDITEM_REG__QSPI_SFMSAC </item>
//    <item> SFDITEM_REG__QSPI_SFMSDC </item>
//    <item> SFDITEM_REG__QSPI_SFMSPC </item>
//    <item> SFDITEM_REG__QSPI_SFMPMD </item>
//    <item> SFDITEM_REG__QSPI_SFMCNT1 </item>
//    <item> SFDITEM_REG__QSPI_SFMDMA </item>
//    <item> SFDITEM_REG__QSPI_SFMCRPT </item>
//  </view>
//  


// ----------------------------  Register Item Address: SSI_SSICR  --------------------------------
// SVD Line: 10100

unsigned int SSI_SSICR __AT (0x40090000);



// --------------------------------  Field Item: SSI_SSICR_REN  -----------------------------------
// SVD Line: 10109

//  <item> SFDITEM_FIELD__SSI_SSICR_REN
//    <name> REN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40090000) Reception Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.0..0> REN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSI_SSICR_TEN  -----------------------------------
// SVD Line: 10115

//  <item> SFDITEM_FIELD__SSI_SSICR_TEN
//    <name> TEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40090000) Transmission Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.1..1> TEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_MUEN  -----------------------------------
// SVD Line: 10121

//  <item> SFDITEM_FIELD__SSI_SSICR_MUEN
//    <name> MUEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40090000) Mute Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.3..3> MUEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_CKDV  -----------------------------------
// SVD Line: 10127

//  <item> SFDITEM_FIELD__SSI_SSICR_CKDV
//    <name> CKDV </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40090000) Select Bit Clock Division Ratio </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSICR >> 4) & 0xF), ((SSI_SSICR = (SSI_SSICR & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSI_SSICR_DEL  -----------------------------------
// SVD Line: 10133

//  <item> SFDITEM_FIELD__SSI_SSICR_DEL
//    <name> DEL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40090000) Select Serial Data Delay </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.8..8> DEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_PDTA  -----------------------------------
// SVD Line: 10139

//  <item> SFDITEM_FIELD__SSI_SSICR_PDTA
//    <name> PDTA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40090000) Select Placement Data Alignment </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.9..9> PDTA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_SDTA  -----------------------------------
// SVD Line: 10145

//  <item> SFDITEM_FIELD__SSI_SSICR_SDTA
//    <name> SDTA </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40090000) Select Serial Data Alignment </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.10..10> SDTA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_SPDP  -----------------------------------
// SVD Line: 10151

//  <item> SFDITEM_FIELD__SSI_SSICR_SPDP
//    <name> SPDP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40090000) Select Serial Padding Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.11..11> SPDP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_LRCKP  ----------------------------------
// SVD Line: 10157

//  <item> SFDITEM_FIELD__SSI_SSICR_LRCKP
//    <name> LRCKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40090000) Select the Initial Value and Polarity of LR Clock/Frame Synchronization Signal </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.12..12> LRCKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_BCKP  -----------------------------------
// SVD Line: 10163

//  <item> SFDITEM_FIELD__SSI_SSICR_BCKP
//    <name> BCKP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40090000) Select Bit Clock Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.13..13> BCKP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSI_SSICR_MST  -----------------------------------
// SVD Line: 10169

//  <item> SFDITEM_FIELD__SSI_SSICR_MST
//    <name> MST </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40090000) Master Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.14..14> MST
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSI_SSICR_SWL  -----------------------------------
// SVD Line: 10175

//  <item> SFDITEM_FIELD__SSI_SSICR_SWL
//    <name> SWL </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40090000) Select System Word Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSICR >> 16) & 0x7), ((SSI_SSICR = (SSI_SSICR & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSI_SSICR_DWL  -----------------------------------
// SVD Line: 10181

//  <item> SFDITEM_FIELD__SSI_SSICR_DWL
//    <name> DWL </name>
//    <rw> 
//    <i> [Bits 21..19] RW (@ 0x40090000) Select Data Word Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSICR >> 19) & 0x7), ((SSI_SSICR = (SSI_SSICR & ~(0x7UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_IIEN  -----------------------------------
// SVD Line: 10187

//  <item> SFDITEM_FIELD__SSI_SSICR_IIEN
//    <name> IIEN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40090000) Idle Mode Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.25..25> IIEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_ROIEN  ----------------------------------
// SVD Line: 10193

//  <item> SFDITEM_FIELD__SSI_SSICR_ROIEN
//    <name> ROIEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40090000) Receive Overflow Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.26..26> ROIEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_RUIEN  ----------------------------------
// SVD Line: 10199

//  <item> SFDITEM_FIELD__SSI_SSICR_RUIEN
//    <name> RUIEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40090000) Receive Underflow Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.27..27> RUIEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_TOIEN  ----------------------------------
// SVD Line: 10205

//  <item> SFDITEM_FIELD__SSI_SSICR_TOIEN
//    <name> TOIEN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40090000) Transmit Overflow Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.28..28> TOIEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSICR_TUIEN  ----------------------------------
// SVD Line: 10211

//  <item> SFDITEM_FIELD__SSI_SSICR_TUIEN
//    <name> TUIEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40090000) Transmit Underflow Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.29..29> TUIEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSI_SSICR_CKS  -----------------------------------
// SVD Line: 10217

//  <item> SFDITEM_FIELD__SSI_SSICR_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40090000) Select an Audio Clock for Master Mode Communication </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSICR ) </loc>
//      <o.30..30> CKS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSI_SSICR  -----------------------------------
// SVD Line: 10100

//  <rtree> SFDITEM_REG__SSI_SSICR
//    <name> SSICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40090000) Control Register </i>
//    <loc> ( (unsigned int)((SSI_SSICR >> 0) & 0xFFFFFFFF), ((SSI_SSICR = (SSI_SSICR & ~(0x7E3F7FFBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7E3F7FFB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSI_SSICR_REN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_TEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_MUEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_CKDV </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_DEL </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_PDTA </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_SDTA </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_SPDP </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_LRCKP </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_BCKP </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_MST </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_SWL </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_DWL </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_IIEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_ROIEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_RUIEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_TOIEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_TUIEN </item>
//    <item> SFDITEM_FIELD__SSI_SSICR_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSI_SSISR  --------------------------------
// SVD Line: 10225

unsigned int SSI_SSISR __AT (0x40090004);



// -------------------------------  Field Item: SSI_SSISR_IIRQ  -----------------------------------
// SVD Line: 10234

//  <item> SFDITEM_FIELD__SSI_SSISR_IIRQ
//    <name> IIRQ </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40090004) Idle Mode Status Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSISR ) </loc>
//      <o.25..25> IIRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSISR_ROIRQ  ----------------------------------
// SVD Line: 10240

//  <item> SFDITEM_FIELD__SSI_SSISR_ROIRQ
//    <name> ROIRQ </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40090004) Receive Overflow Error Status Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSISR ) </loc>
//      <o.26..26> ROIRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSISR_RUIRQ  ----------------------------------
// SVD Line: 10246

//  <item> SFDITEM_FIELD__SSI_SSISR_RUIRQ
//    <name> RUIRQ </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40090004) Receive Underflow Error Status Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSISR ) </loc>
//      <o.27..27> RUIRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSISR_TOIRQ  ----------------------------------
// SVD Line: 10252

//  <item> SFDITEM_FIELD__SSI_SSISR_TOIRQ
//    <name> TOIRQ </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40090004) Transmit Overflow Error Status Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSISR ) </loc>
//      <o.28..28> TOIRQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSISR_TUIRQ  ----------------------------------
// SVD Line: 10258

//  <item> SFDITEM_FIELD__SSI_SSISR_TUIRQ
//    <name> TUIRQ </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40090004) Transmit Underflow Error Status Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSISR ) </loc>
//      <o.29..29> TUIRQ
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSI_SSISR  -----------------------------------
// SVD Line: 10225

//  <rtree> SFDITEM_REG__SSI_SSISR
//    <name> SSISR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40090004) Status Register </i>
//    <loc> ( (unsigned int)((SSI_SSISR >> 0) & 0xFFFFFFFF), ((SSI_SSISR = (SSI_SSISR & ~(0x3E000000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3E000000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSI_SSISR_IIRQ </item>
//    <item> SFDITEM_FIELD__SSI_SSISR_ROIRQ </item>
//    <item> SFDITEM_FIELD__SSI_SSISR_RUIRQ </item>
//    <item> SFDITEM_FIELD__SSI_SSISR_TOIRQ </item>
//    <item> SFDITEM_FIELD__SSI_SSISR_TUIRQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSI_SSIFCR  -------------------------------
// SVD Line: 10266

unsigned int SSI_SSIFCR __AT (0x40090010);



// ------------------------------  Field Item: SSI_SSIFCR_RFRST  ----------------------------------
// SVD Line: 10275

//  <item> SFDITEM_FIELD__SSI_SSIFCR_RFRST
//    <name> RFRST </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40090010) Receive FIFO Data Register Reset </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.0..0> RFRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSI_SSIFCR_TFRST  ----------------------------------
// SVD Line: 10281

//  <item> SFDITEM_FIELD__SSI_SSIFCR_TFRST
//    <name> TFRST </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40090010) Transmit FIFO Data Register Reset </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.1..1> TFRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSIFCR_RIE  -----------------------------------
// SVD Line: 10287

//  <item> SFDITEM_FIELD__SSI_SSIFCR_RIE
//    <name> RIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40090010) Receive Data Full Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.3..3> RIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSIFCR_TIE  -----------------------------------
// SVD Line: 10293

//  <item> SFDITEM_FIELD__SSI_SSIFCR_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40090010) Transmit Data Empty Interrupt Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.4..4> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSIFCR_BSW  -----------------------------------
// SVD Line: 10299

//  <item> SFDITEM_FIELD__SSI_SSIFCR_BSW
//    <name> BSW </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40090010) Byte Swap Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.11..11> BSW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSI_SSIFCR_SSIRST  ---------------------------------
// SVD Line: 10305

//  <item> SFDITEM_FIELD__SSI_SSIFCR_SSIRST
//    <name> SSIRST </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40090010) Software Reset </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.16..16> SSIRST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSI_SSIFCR_AUCKE  ----------------------------------
// SVD Line: 10311

//  <item> SFDITEM_FIELD__SSI_SSIFCR_AUCKE
//    <name> AUCKE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40090010) AUDIO_MCK Enable in Master Mode Communication </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFCR ) </loc>
//      <o.31..31> AUCKE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSI_SSIFCR  -----------------------------------
// SVD Line: 10266

//  <rtree> SFDITEM_REG__SSI_SSIFCR
//    <name> SSIFCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40090010) FIFO Control Register </i>
//    <loc> ( (unsigned int)((SSI_SSIFCR >> 0) & 0xFFFFFFFF), ((SSI_SSIFCR = (SSI_SSIFCR & ~(0x8001081BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8001081B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_RFRST </item>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_TFRST </item>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_RIE </item>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_TIE </item>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_BSW </item>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_SSIRST </item>
//    <item> SFDITEM_FIELD__SSI_SSIFCR_AUCKE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSI_SSIFSR  -------------------------------
// SVD Line: 10319

unsigned int SSI_SSIFSR __AT (0x40090014);



// -------------------------------  Field Item: SSI_SSIFSR_RDF  -----------------------------------
// SVD Line: 10328

//  <item> SFDITEM_FIELD__SSI_SSIFSR_RDF
//    <name> RDF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40090014) Receive Data Full Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFSR ) </loc>
//      <o.0..0> RDF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSIFSR_RDC  -----------------------------------
// SVD Line: 10334

//  <item> SFDITEM_FIELD__SSI_SSIFSR_RDC
//    <name> RDC </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40090014) Number of Receive FIFO Data Indication Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSIFSR >> 8) & 0xF), ((SSI_SSIFSR = (SSI_SSIFSR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSIFSR_TDE  -----------------------------------
// SVD Line: 10340

//  <item> SFDITEM_FIELD__SSI_SSIFSR_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40090014) Transmit Data Empty Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSIFSR ) </loc>
//      <o.15..15> TDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSIFSR_TDC  -----------------------------------
// SVD Line: 10346

//  <item> SFDITEM_FIELD__SSI_SSIFSR_TDC
//    <name> TDC </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40090014) Number of Transmit FIFO Data Indication Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSIFSR >> 24) & 0xF), ((SSI_SSIFSR = (SSI_SSIFSR & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SSI_SSIFSR  -----------------------------------
// SVD Line: 10319

//  <rtree> SFDITEM_REG__SSI_SSIFSR
//    <name> SSIFSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40090014) FIFO Status Register </i>
//    <loc> ( (unsigned int)((SSI_SSIFSR >> 0) & 0xFFFFFFFF), ((SSI_SSIFSR = (SSI_SSIFSR & ~(0xF008F01UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF008F01) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSI_SSIFSR_RDF </item>
//    <item> SFDITEM_FIELD__SSI_SSIFSR_RDC </item>
//    <item> SFDITEM_FIELD__SSI_SSIFSR_TDE </item>
//    <item> SFDITEM_FIELD__SSI_SSIFSR_TDC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SSI_SSIFTDR  -------------------------------
// SVD Line: 10354

unsigned int SSI_SSIFTDR __AT (0x40090018);



// -------------------------------  Register Item: SSI_SSIFTDR  -----------------------------------
// SVD Line: 10354

//  <item> SFDITEM_REG__SSI_SSIFTDR
//    <name> SSIFTDR </name>
//    <i> [Bits 31..0] RW (@ 0x40090018) Transmit FIFO Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSI_SSIFTDR >> 0) & 0xFFFFFFFF), ((SSI_SSIFTDR = (SSI_SSIFTDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SSI_SSIFRDR  -------------------------------
// SVD Line: 10363

unsigned int SSI_SSIFRDR __AT (0x4009001C);



// -------------------------------  Register Item: SSI_SSIFRDR  -----------------------------------
// SVD Line: 10363

//  <item> SFDITEM_REG__SSI_SSIFRDR
//    <name> SSIFRDR </name>
//    <i> [Bits 31..0] RW (@ 0x4009001C) Receive FIFO Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSI_SSIFRDR >> 0) & 0xFFFFFFFF), ((SSI_SSIFRDR = (SSI_SSIFRDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SSI_SSITDMR  -------------------------------
// SVD Line: 10372

unsigned int SSI_SSITDMR __AT (0x40090020);



// ------------------------------  Field Item: SSI_SSITDMR_OMOD  ----------------------------------
// SVD Line: 10381

//  <item> SFDITEM_FIELD__SSI_SSITDMR_OMOD
//    <name> OMOD </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40090020) Audio Format Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSITDMR >> 0) & 0x3), ((SSI_SSITDMR = (SSI_SSITDMR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSI_SSITDMR_LRCONT  ---------------------------------
// SVD Line: 10387

//  <item> SFDITEM_FIELD__SSI_SSITDMR_LRCONT
//    <name> LRCONT </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40090020) Enable LRCK/FS Continuation </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSITDMR ) </loc>
//      <o.8..8> LRCONT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSI_SSITDMR_BCKASTP  --------------------------------
// SVD Line: 10394

//  <item> SFDITEM_FIELD__SSI_SSITDMR_BCKASTP
//    <name> BCKASTP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40090020) Enable Stopping BCK Output When SSIE is in Idle Status </i>
//    <check> 
//      <loc> ( (unsigned int) SSI_SSITDMR ) </loc>
//      <o.9..9> BCKASTP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSI_SSITDMR  ----------------------------------
// SVD Line: 10372

//  <rtree> SFDITEM_REG__SSI_SSITDMR
//    <name> SSITDMR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40090020) TDM Mode Register </i>
//    <loc> ( (unsigned int)((SSI_SSITDMR >> 0) & 0xFFFFFFFF), ((SSI_SSITDMR = (SSI_SSITDMR & ~(0x203UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x203) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSI_SSITDMR_OMOD </item>
//    <item> SFDITEM_FIELD__SSI_SSITDMR_LRCONT </item>
//    <item> SFDITEM_FIELD__SSI_SSITDMR_BCKASTP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSI_SSISCR  -------------------------------
// SVD Line: 10402

unsigned int SSI_SSISCR __AT (0x40090024);



// -------------------------------  Field Item: SSI_SSISCR_RDFS  ----------------------------------
// SVD Line: 10411

//  <item> SFDITEM_FIELD__SSI_SSISCR_RDFS
//    <name> RDFS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40090024) RDF Setting Condition Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSISCR >> 0) & 0x7), ((SSI_SSISCR = (SSI_SSISCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SSI_SSISCR_TDES  ----------------------------------
// SVD Line: 10417

//  <item> SFDITEM_FIELD__SSI_SSISCR_TDES
//    <name> TDES </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40090024) TDE Setting Condition Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSI_SSISCR >> 8) & 0x7), ((SSI_SSISCR = (SSI_SSISCR & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SSI_SSISCR  -----------------------------------
// SVD Line: 10402

//  <rtree> SFDITEM_REG__SSI_SSISCR
//    <name> SSISCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40090024) Status Control Register </i>
//    <loc> ( (unsigned int)((SSI_SSISCR >> 0) & 0xFFFFFFFF), ((SSI_SSISCR = (SSI_SSISCR & ~(0x707UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x707) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSI_SSISCR_RDFS </item>
//    <item> SFDITEM_FIELD__SSI_SSISCR_TDES </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSI  --------------------------------------
// SVD Line: 10058

//  <view> SSI
//    <name> SSI </name>
//    <item> SFDITEM_REG__SSI_SSICR </item>
//    <item> SFDITEM_REG__SSI_SSISR </item>
//    <item> SFDITEM_REG__SSI_SSIFCR </item>
//    <item> SFDITEM_REG__SSI_SSIFSR </item>
//    <item> SFDITEM_REG__SSI_SSIFTDR </item>
//    <item> SFDITEM_REG__SSI_SSIFRDR </item>
//    <item> SFDITEM_REG__SSI_SSITDMR </item>
//    <item> SFDITEM_REG__SSI_SSISCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: LCDB_LBCTL  -------------------------------
// SVD Line: 10444

unsigned char LCDB_LBCTL __AT (0x40045400);



// -------------------------------  Field Item: LCDB_LBCTL_BYF  -----------------------------------
// SVD Line: 10453

//  <item> SFDITEM_FIELD__LCDB_LBCTL_BYF
//    <name> BYF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045400) Data register busy flag </i>
//    <check> 
//      <loc> ( (unsigned char) LCDB_LBCTL ) </loc>
//      <o.0..0> BYF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LCDB_LBCTL_TPF  -----------------------------------
// SVD Line: 10459

//  <item> SFDITEM_FIELD__LCDB_LBCTL_TPF
//    <name> TPF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045400) Flag of transfer in progress on external bus interface </i>
//    <check> 
//      <loc> ( (unsigned char) LCDB_LBCTL ) </loc>
//      <o.1..1> TPF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LCDB_LBCTL_TCIS  ----------------------------------
// SVD Line: 10465

//  <item> SFDITEM_FIELD__LCDB_LBCTL_TCIS
//    <name> TCIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045400) INTLCDB (DMA trigger) generation control bit </i>
//    <check> 
//      <loc> ( (unsigned char) LCDB_LBCTL ) </loc>
//      <o.3..3> TCIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LCDB_LBCTL_LBC  -----------------------------------
// SVD Line: 10471

//  <item> SFDITEM_FIELD__LCDB_LBCTL_LBC
//    <name> LBC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40045400) Internal clock (SPCLK) selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((LCDB_LBCTL >> 4) & 0x3), ((LCDB_LBCTL = (LCDB_LBCTL & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LCDB_LBCTL_IMD  -----------------------------------
// SVD Line: 10477

//  <item> SFDITEM_FIELD__LCDB_LBCTL_IMD
//    <name> IMD </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40045400) Mode of external bus interface access selection </i>
//    <check> 
//      <loc> ( (unsigned char) LCDB_LBCTL ) </loc>
//      <o.6..6> IMD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LCDB_LBCTL_EL  -----------------------------------
// SVD Line: 10483

//  <item> SFDITEM_FIELD__LCDB_LBCTL_EL
//    <name> EL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045400) Control the level of signal \"E\" in mod68 mode </i>
//    <check> 
//      <loc> ( (unsigned char) LCDB_LBCTL ) </loc>
//      <o.7..7> EL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LCDB_LBCTL  -----------------------------------
// SVD Line: 10444

//  <rtree> SFDITEM_REG__LCDB_LBCTL
//    <name> LBCTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045400) LCD Bus Interface mode register </i>
//    <loc> ( (unsigned char)((LCDB_LBCTL >> 0) & 0xFF), ((LCDB_LBCTL = (LCDB_LBCTL & ~(0xFBUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCDB_LBCTL_BYF </item>
//    <item> SFDITEM_FIELD__LCDB_LBCTL_TPF </item>
//    <item> SFDITEM_FIELD__LCDB_LBCTL_TCIS </item>
//    <item> SFDITEM_FIELD__LCDB_LBCTL_LBC </item>
//    <item> SFDITEM_FIELD__LCDB_LBCTL_IMD </item>
//    <item> SFDITEM_FIELD__LCDB_LBCTL_EL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LCDB_LBCYC  -------------------------------
// SVD Line: 10491

unsigned char LCDB_LBCYC __AT (0x40045401);



// --------------------------------  Register Item: LCDB_LBCYC  -----------------------------------
// SVD Line: 10491

//  <item> SFDITEM_REG__LCDB_LBCYC
//    <name> LBCYC </name>
//    <i> [Bits 7..0] RW (@ 0x40045401) LCB Bus Interface cycle control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((LCDB_LBCYC >> 0) & 0xFFFFFFFF), ((LCDB_LBCYC = (LCDB_LBCYC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: LCDB_LBWST  -------------------------------
// SVD Line: 10500

unsigned char LCDB_LBWST __AT (0x40045402);



// --------------------------------  Register Item: LCDB_LBWST  -----------------------------------
// SVD Line: 10500

//  <item> SFDITEM_REG__LCDB_LBWST
//    <name> LBWST </name>
//    <i> [Bits 7..0] RW (@ 0x40045402) LCB Bus Interface wait control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((LCDB_LBWST >> 0) & 0xFFFFFFFF), ((LCDB_LBWST = (LCDB_LBWST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: LCDB_LBDATA  -------------------------------
// SVD Line: 10509

unsigned short LCDB_LBDATA __AT (0x40045410);



// -------------------------------  Register Item: LCDB_LBDATA  -----------------------------------
// SVD Line: 10509

//  <item> SFDITEM_REG__LCDB_LBDATA
//    <name> LBDATA </name>
//    <i> [Bits 15..0] RW (@ 0x40045410) LCD Bus Interface data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((LCDB_LBDATA >> 0) & 0xFFFFFFFF), ((LCDB_LBDATA = (LCDB_LBDATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: LCDB_LBDATAL  ------------------------------
// SVD Line: 10518

unsigned char LCDB_LBDATAL __AT (0x40045410);



// -------------------------------  Register Item: LCDB_LBDATAL  ----------------------------------
// SVD Line: 10518

//  <item> SFDITEM_REG__LCDB_LBDATAL
//    <name> LBDATAL </name>
//    <i> [Bits 7..0] RW (@ 0x40045410) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((LCDB_LBDATAL >> 0) & 0xFFFFFFFF), ((LCDB_LBDATAL = (LCDB_LBDATAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: LCDB_LBDATAR  ------------------------------
// SVD Line: 10526

unsigned short LCDB_LBDATAR __AT (0x40045412);



// -------------------------------  Register Item: LCDB_LBDATAR  ----------------------------------
// SVD Line: 10526

//  <item> SFDITEM_REG__LCDB_LBDATAR
//    <name> LBDATAR </name>
//    <i> [Bits 15..0] RW (@ 0x40045412) LCD Bus Interface read data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((LCDB_LBDATAR >> 0) & 0xFFFFFFFF), ((LCDB_LBDATAR = (LCDB_LBDATAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: LCDB_LBDATARL  ------------------------------
// SVD Line: 10535

unsigned char LCDB_LBDATARL __AT (0x40045412);



// ------------------------------  Register Item: LCDB_LBDATARL  ----------------------------------
// SVD Line: 10535

//  <item> SFDITEM_REG__LCDB_LBDATARL
//    <name> LBDATARL </name>
//    <i> [Bits 7..0] RW (@ 0x40045412) LCD Bus Interface read data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((LCDB_LBDATARL >> 0) & 0xFFFFFFFF), ((LCDB_LBDATARL = (LCDB_LBDATARL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: LCDB  -------------------------------------
// SVD Line: 10428

//  <view> LCDB
//    <name> LCDB </name>
//    <item> SFDITEM_REG__LCDB_LBCTL </item>
//    <item> SFDITEM_REG__LCDB_LBCYC </item>
//    <item> SFDITEM_REG__LCDB_LBWST </item>
//    <item> SFDITEM_REG__LCDB_LBDATA </item>
//    <item> SFDITEM_REG__LCDB_LBDATAL </item>
//    <item> SFDITEM_REG__LCDB_LBDATAR </item>
//    <item> SFDITEM_REG__LCDB_LBDATARL </item>
//  </view>
//  


// ---------------------------  Register Item Address: USBF_SYSCFG  -------------------------------
// SVD Line: 10588

unsigned short USBF_SYSCFG __AT (0x40080000);



// ------------------------------  Field Item: USBF_SYSCFG_USBE  ----------------------------------
// SVD Line: 10596

//  <item> SFDITEM_FIELD__USBF_SYSCFG_USBE
//    <name> USBE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080000) USBFS Operation Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.0..0> USBE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SYSCFG_DMRPU  ---------------------------------
// SVD Line: 10602

//  <item> SFDITEM_FIELD__USBF_SYSCFG_DMRPU
//    <name> DMRPU </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080000) D- Line Resistor Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.3..3> DMRPU
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SYSCFG_DPRPU  ---------------------------------
// SVD Line: 10608

//  <item> SFDITEM_FIELD__USBF_SYSCFG_DPRPU
//    <name> DPRPU </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080000) D+ Line Resistor Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.4..4> DPRPU
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SYSCFG_DRPD  ----------------------------------
// SVD Line: 10614

//  <item> SFDITEM_FIELD__USBF_SYSCFG_DRPD
//    <name> DRPD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080000) D+/D- Line Resistor Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.5..5> DRPD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SYSCFG_DCFM  ----------------------------------
// SVD Line: 10620

//  <item> SFDITEM_FIELD__USBF_SYSCFG_DCFM
//    <name> DCFM </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080000) Controller Function Select </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.6..6> DCFM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SYSCFG_CNEN  ----------------------------------
// SVD Line: 10626

//  <item> SFDITEM_FIELD__USBF_SYSCFG_CNEN
//    <name> CNEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080000) CNEN Single-Ended Receiver Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.8..8> CNEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SYSCFG_SCKE  ----------------------------------
// SVD Line: 10632

//  <item> SFDITEM_FIELD__USBF_SYSCFG_SCKE
//    <name> SCKE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080000) USB Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSCFG ) </loc>
//      <o.10..10> SCKE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USBF_SYSCFG  ----------------------------------
// SVD Line: 10588

//  <rtree> SFDITEM_REG__USBF_SYSCFG
//    <name> SYSCFG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080000) System Configuration Control Register </i>
//    <loc> ( (unsigned short)((USBF_SYSCFG >> 0) & 0xFFFF), ((USBF_SYSCFG = (USBF_SYSCFG & ~(0x579UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x579) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_USBE </item>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_DMRPU </item>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_DPRPU </item>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_DRPD </item>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_DCFM </item>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_CNEN </item>
//    <item> SFDITEM_FIELD__USBF_SYSCFG_SCKE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_SYSSTS0  ------------------------------
// SVD Line: 10640

unsigned short USBF_SYSSTS0 __AT (0x40080004);



// ------------------------------  Field Item: USBF_SYSSTS0_LNST  ---------------------------------
// SVD Line: 10648

//  <item> SFDITEM_FIELD__USBF_SYSSTS0_LNST
//    <name> LNST </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080004) USB Data Line Status Monitor </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_SYSSTS0 >> 0) & 0x3), ((USBF_SYSSTS0 = (USBF_SYSSTS0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_SYSSTS0_DMRPU  ---------------------------------
// SVD Line: 10654

//  <item> SFDITEM_FIELD__USBF_SYSSTS0_DMRPU
//    <name> DMRPU </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080004) External ID0 Input Pin Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSSTS0 ) </loc>
//      <o.2..2> DMRPU
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_SYSSTS0_HTACT  ---------------------------------
// SVD Line: 10660

//  <item> SFDITEM_FIELD__USBF_SYSSTS0_HTACT
//    <name> HTACT </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080004) USB Host Sequencer Status Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SYSSTS0 ) </loc>
//      <o.6..6> HTACT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_SYSSTS0_OVCMON  --------------------------------
// SVD Line: 10666

//  <item> SFDITEM_FIELD__USBF_SYSSTS0_OVCMON
//    <name> OVCMON </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40080004) External USB_OVRCURA/USB_OVRCURB Input Pin Monitor </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_SYSSTS0 >> 14) & 0x3), ((USBF_SYSSTS0 = (USBF_SYSSTS0 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USBF_SYSSTS0  ----------------------------------
// SVD Line: 10640

//  <rtree> SFDITEM_REG__USBF_SYSSTS0
//    <name> SYSSTS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080004) System Configuration Status Register 0 </i>
//    <loc> ( (unsigned short)((USBF_SYSSTS0 >> 0) & 0xFFFF), ((USBF_SYSSTS0 = (USBF_SYSSTS0 & ~(0xC047UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC047) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_SYSSTS0_LNST </item>
//    <item> SFDITEM_FIELD__USBF_SYSSTS0_DMRPU </item>
//    <item> SFDITEM_FIELD__USBF_SYSSTS0_HTACT </item>
//    <item> SFDITEM_FIELD__USBF_SYSSTS0_OVCMON </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_DVSTCTR0  ------------------------------
// SVD Line: 10674

unsigned short USBF_DVSTCTR0 __AT (0x40080008);



// -----------------------------  Field Item: USBF_DVSTCTR0_RHST  ---------------------------------
// SVD Line: 10682

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_RHST
//    <name> RHST </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40080008) USB Bus Reset Status </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DVSTCTR0 >> 0) & 0x7), ((USBF_DVSTCTR0 = (USBF_DVSTCTR0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_DVSTCTR0_UACT  ---------------------------------
// SVD Line: 10688

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_UACT
//    <name> UACT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080008) USB Bus Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.4..4> UACT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_DVSTCTR0_RESUME  --------------------------------
// SVD Line: 10694

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_RESUME
//    <name> RESUME </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080008) Resume Output </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.5..5> RESUME
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_DVSTCTR0_USBRST  --------------------------------
// SVD Line: 10700

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_USBRST
//    <name> USBRST </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080008) USB Bus Reset Output </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.6..6> USBRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_DVSTCTR0_RWUPE  --------------------------------
// SVD Line: 10706

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_RWUPE
//    <name> RWUPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080008) Wakeup Detection Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.7..7> RWUPE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_DVSTCTR0_WKUP  ---------------------------------
// SVD Line: 10712

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_WKUP
//    <name> WKUP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080008) Wakeup Output </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.8..8> WKUP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_DVSTCTR0_VBUSEN  --------------------------------
// SVD Line: 10718

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_VBUSEN
//    <name> VBUSEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080008) USB_VBUSEN Output Pin Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.9..9> VBUSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_DVSTCTR0_EXICEN  --------------------------------
// SVD Line: 10724

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_EXICEN
//    <name> EXICEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080008) USB_EXICEN Output Pin Contro </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.10..10> EXICEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_DVSTCTR0_HNPBTOA  -------------------------------
// SVD Line: 10730

//  <item> SFDITEM_FIELD__USBF_DVSTCTR0_HNPBTOA
//    <name> HNPBTOA </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080008) Host Negotiation Protocol (HNP) Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DVSTCTR0 ) </loc>
//      <o.11..11> HNPBTOA
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_DVSTCTR0  ---------------------------------
// SVD Line: 10674

//  <rtree> SFDITEM_REG__USBF_DVSTCTR0
//    <name> DVSTCTR0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080008) Device State Control Register 0 </i>
//    <loc> ( (unsigned short)((USBF_DVSTCTR0 >> 0) & 0xFFFF), ((USBF_DVSTCTR0 = (USBF_DVSTCTR0 & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_RHST </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_UACT </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_RESUME </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_USBRST </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_RWUPE </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_WKUP </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_VBUSEN </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_EXICEN </item>
//    <item> SFDITEM_FIELD__USBF_DVSTCTR0_HNPBTOA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USBF_CFIFO  -------------------------------
// SVD Line: 10738

unsigned short USBF_CFIFO __AT (0x40080014);



// --------------------------------  Register Item: USBF_CFIFO  -----------------------------------
// SVD Line: 10738

//  <item> SFDITEM_REG__USBF_CFIFO
//    <name> CFIFO </name>
//    <i> [Bits 15..0] RW (@ 0x40080014) CFIFO Port Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_CFIFO >> 0) & 0xFFFFFFFF), ((USBF_CFIFO = (USBF_CFIFO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_CFIFOL  -------------------------------
// SVD Line: 10745

unsigned char USBF_CFIFOL __AT (0x40080014);



// -------------------------------  Register Item: USBF_CFIFOL  -----------------------------------
// SVD Line: 10745

//  <item> SFDITEM_REG__USBF_CFIFOL
//    <name> CFIFOL </name>
//    <i> [Bits 7..0] RW (@ 0x40080014) CFIFO Port Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_CFIFOL >> 0) & 0xFFFFFFFF), ((USBF_CFIFOL = (USBF_CFIFOL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_D0FIFO  -------------------------------
// SVD Line: 10753

unsigned short USBF_D0FIFO __AT (0x40080018);



// -------------------------------  Register Item: USBF_D0FIFO  -----------------------------------
// SVD Line: 10753

//  <item> SFDITEM_REG__USBF_D0FIFO
//    <name> D0FIFO </name>
//    <i> [Bits 15..0] RW (@ 0x40080018) D0FIFO Port Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_D0FIFO >> 0) & 0xFFFFFFFF), ((USBF_D0FIFO = (USBF_D0FIFO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_D0FIFOL  ------------------------------
// SVD Line: 10760

unsigned char USBF_D0FIFOL __AT (0x40080018);



// -------------------------------  Register Item: USBF_D0FIFOL  ----------------------------------
// SVD Line: 10760

//  <item> SFDITEM_REG__USBF_D0FIFOL
//    <name> D0FIFOL </name>
//    <i> [Bits 7..0] RW (@ 0x40080018) D0FIFO Port Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_D0FIFOL >> 0) & 0xFFFFFFFF), ((USBF_D0FIFOL = (USBF_D0FIFOL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_D1FIFO  -------------------------------
// SVD Line: 10768

unsigned short USBF_D1FIFO __AT (0x4008001C);



// -------------------------------  Register Item: USBF_D1FIFO  -----------------------------------
// SVD Line: 10768

//  <item> SFDITEM_REG__USBF_D1FIFO
//    <name> D1FIFO </name>
//    <i> [Bits 15..0] RW (@ 0x4008001C) D1FIFO Port Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_D1FIFO >> 0) & 0xFFFFFFFF), ((USBF_D1FIFO = (USBF_D1FIFO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_D1FIFOL  ------------------------------
// SVD Line: 10775

unsigned char USBF_D1FIFOL __AT (0x4008001C);



// -------------------------------  Register Item: USBF_D1FIFOL  ----------------------------------
// SVD Line: 10775

//  <item> SFDITEM_REG__USBF_D1FIFOL
//    <name> D1FIFOL </name>
//    <i> [Bits 7..0] RW (@ 0x4008001C) D1FIFO Port Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_D1FIFOL >> 0) & 0xFFFFFFFF), ((USBF_D1FIFOL = (USBF_D1FIFOL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: USBF_CFIFOSEL  ------------------------------
// SVD Line: 10783

unsigned short USBF_CFIFOSEL __AT (0x40080020);



// ----------------------------  Field Item: USBF_CFIFOSEL_CURPIPE  -------------------------------
// SVD Line: 10791

//  <item> SFDITEM_FIELD__USBF_CFIFOSEL_CURPIPE
//    <name> CURPIPE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40080020) CFIFO Port Access Pipe Specification </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_CFIFOSEL >> 0) & 0xF), ((USBF_CFIFOSEL = (USBF_CFIFOSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_CFIFOSEL_ISEL  ---------------------------------
// SVD Line: 10797

//  <item> SFDITEM_FIELD__USBF_CFIFOSEL_ISEL
//    <name> ISEL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080020) CFIFO Port Access Direction When DCP is Selected </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOSEL ) </loc>
//      <o.5..5> ISEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_CFIFOSEL_BIGEND  --------------------------------
// SVD Line: 10803

//  <item> SFDITEM_FIELD__USBF_CFIFOSEL_BIGEND
//    <name> BIGEND </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080020) CFIFO Port Endian Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOSEL ) </loc>
//      <o.8..8> BIGEND
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_CFIFOSEL_MBW  ---------------------------------
// SVD Line: 10809

//  <item> SFDITEM_FIELD__USBF_CFIFOSEL_MBW
//    <name> MBW </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080020) CFIFO Port Access Bit Width </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOSEL ) </loc>
//      <o.10..10> MBW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_CFIFOSEL_REW  ---------------------------------
// SVD Line: 10815

//  <item> SFDITEM_FIELD__USBF_CFIFOSEL_REW
//    <name> REW </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080020) USB_EXICEN Output Pin Contro </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOSEL ) </loc>
//      <o.14..14> REW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_CFIFOSEL_RCNT  ---------------------------------
// SVD Line: 10821

//  <item> SFDITEM_FIELD__USBF_CFIFOSEL_RCNT
//    <name> RCNT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080020) Read Count Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOSEL ) </loc>
//      <o.15..15> RCNT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_CFIFOSEL  ---------------------------------
// SVD Line: 10783

//  <rtree> SFDITEM_REG__USBF_CFIFOSEL
//    <name> CFIFOSEL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080020) CFIFO Port Select Register </i>
//    <loc> ( (unsigned short)((USBF_CFIFOSEL >> 0) & 0xFFFF), ((USBF_CFIFOSEL = (USBF_CFIFOSEL & ~(0xC52FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC52F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_CFIFOSEL_CURPIPE </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOSEL_ISEL </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOSEL_BIGEND </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOSEL_MBW </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOSEL_REW </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOSEL_RCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_D0FIFOSEL  -----------------------------
// SVD Line: 10829

unsigned short USBF_D0FIFOSEL __AT (0x40080028);



// ---------------------------  Field Item: USBF_D0FIFOSEL_CURPIPE  -------------------------------
// SVD Line: 10837

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_CURPIPE
//    <name> CURPIPE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40080028) FIFO Port Access Pipe Specification </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_D0FIFOSEL >> 0) & 0xF), ((USBF_D0FIFOSEL = (USBF_D0FIFOSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USBF_D0FIFOSEL_BIGEND  -------------------------------
// SVD Line: 10843

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_BIGEND
//    <name> BIGEND </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080028) FIFO Port Endian Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOSEL ) </loc>
//      <o.8..8> BIGEND
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D0FIFOSEL_MBW  ---------------------------------
// SVD Line: 10849

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_MBW
//    <name> MBW </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080028) FIFO Port Access Bit Width </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOSEL ) </loc>
//      <o.10..10> MBW
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_D0FIFOSEL_DREQE  --------------------------------
// SVD Line: 10855

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_DREQE
//    <name> DREQE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40080028) DMA/DTC Transfer Request Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOSEL ) </loc>
//      <o.12..12> DREQE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_D0FIFOSEL_DCLRM  --------------------------------
// SVD Line: 10861

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_DCLRM
//    <name> DCLRM </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40080028) Auto Buffer Memory Clear Mode Accessed after Specified Pipe Data is Read </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOSEL ) </loc>
//      <o.13..13> DCLRM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D0FIFOSEL_REW  ---------------------------------
// SVD Line: 10867

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_REW
//    <name> REW </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080028) USB_EXICEN Output Pin Contro </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOSEL ) </loc>
//      <o.14..14> REW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D0FIFOSEL_RCNT  --------------------------------
// SVD Line: 10873

//  <item> SFDITEM_FIELD__USBF_D0FIFOSEL_RCNT
//    <name> RCNT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080028) Read Count Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOSEL ) </loc>
//      <o.15..15> RCNT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USBF_D0FIFOSEL  ---------------------------------
// SVD Line: 10829

//  <rtree> SFDITEM_REG__USBF_D0FIFOSEL
//    <name> D0FIFOSEL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080028) D0FIFO Port Select Register </i>
//    <loc> ( (unsigned short)((USBF_D0FIFOSEL >> 0) & 0xFFFF), ((USBF_D0FIFOSEL = (USBF_D0FIFOSEL & ~(0xF50FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF50F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_CURPIPE </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_BIGEND </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_MBW </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_DREQE </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_DCLRM </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_REW </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOSEL_RCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_D1FIFOSEL  -----------------------------
// SVD Line: 10881

unsigned short USBF_D1FIFOSEL __AT (0x4008002C);



// ---------------------------  Field Item: USBF_D1FIFOSEL_CURPIPE  -------------------------------
// SVD Line: 10837

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_CURPIPE
//    <name> CURPIPE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4008002C) FIFO Port Access Pipe Specification </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_D1FIFOSEL >> 0) & 0xF), ((USBF_D1FIFOSEL = (USBF_D1FIFOSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USBF_D1FIFOSEL_BIGEND  -------------------------------
// SVD Line: 10843

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_BIGEND
//    <name> BIGEND </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008002C) FIFO Port Endian Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOSEL ) </loc>
//      <o.8..8> BIGEND
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D1FIFOSEL_MBW  ---------------------------------
// SVD Line: 10849

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_MBW
//    <name> MBW </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4008002C) FIFO Port Access Bit Width </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOSEL ) </loc>
//      <o.10..10> MBW
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_D1FIFOSEL_DREQE  --------------------------------
// SVD Line: 10855

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_DREQE
//    <name> DREQE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4008002C) DMA/DTC Transfer Request Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOSEL ) </loc>
//      <o.12..12> DREQE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_D1FIFOSEL_DCLRM  --------------------------------
// SVD Line: 10861

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_DCLRM
//    <name> DCLRM </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4008002C) Auto Buffer Memory Clear Mode Accessed after Specified Pipe Data is Read </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOSEL ) </loc>
//      <o.13..13> DCLRM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D1FIFOSEL_REW  ---------------------------------
// SVD Line: 10867

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_REW
//    <name> REW </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4008002C) USB_EXICEN Output Pin Contro </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOSEL ) </loc>
//      <o.14..14> REW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D1FIFOSEL_RCNT  --------------------------------
// SVD Line: 10873

//  <item> SFDITEM_FIELD__USBF_D1FIFOSEL_RCNT
//    <name> RCNT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008002C) Read Count Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOSEL ) </loc>
//      <o.15..15> RCNT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USBF_D1FIFOSEL  ---------------------------------
// SVD Line: 10881

//  <rtree> SFDITEM_REG__USBF_D1FIFOSEL
//    <name> D1FIFOSEL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008002C) D1FIFO Port Select Register </i>
//    <loc> ( (unsigned short)((USBF_D1FIFOSEL >> 0) & 0xFFFF), ((USBF_D1FIFOSEL = (USBF_D1FIFOSEL & ~(0xF50FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF50F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_CURPIPE </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_BIGEND </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_MBW </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_DREQE </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_DCLRM </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_REW </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOSEL_RCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_CFIFOCTR  ------------------------------
// SVD Line: 10887

unsigned short USBF_CFIFOCTR __AT (0x40080022);



// -----------------------------  Field Item: USBF_CFIFOCTR_DTLN  ---------------------------------
// SVD Line: 10895

//  <item> SFDITEM_FIELD__USBF_CFIFOCTR_DTLN
//    <name> DTLN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40080022) Receive Data Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_CFIFOCTR >> 0) & 0xFF), ((USBF_CFIFOCTR = (USBF_CFIFOCTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_CFIFOCTR_FRDY  ---------------------------------
// SVD Line: 10901

//  <item> SFDITEM_FIELD__USBF_CFIFOCTR_FRDY
//    <name> FRDY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40080022) FIFO Port Ready </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOCTR ) </loc>
//      <o.13..13> FRDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_CFIFOCTR_BCLR  ---------------------------------
// SVD Line: 10907

//  <item> SFDITEM_FIELD__USBF_CFIFOCTR_BCLR
//    <name> BCLR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080022) CPU Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOCTR ) </loc>
//      <o.14..14> BCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_CFIFOCTR_BVAL  ---------------------------------
// SVD Line: 10913

//  <item> SFDITEM_FIELD__USBF_CFIFOCTR_BVAL
//    <name> BVAL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080022) Buffer Memory Valid Flag </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_CFIFOCTR ) </loc>
//      <o.15..15> BVAL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_CFIFOCTR  ---------------------------------
// SVD Line: 10887

//  <rtree> SFDITEM_REG__USBF_CFIFOCTR
//    <name> CFIFOCTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080022) CFIFO Port Control Register </i>
//    <loc> ( (unsigned short)((USBF_CFIFOCTR >> 0) & 0xFFFF), ((USBF_CFIFOCTR = (USBF_CFIFOCTR & ~(0xE0FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE0FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_CFIFOCTR_DTLN </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOCTR_FRDY </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOCTR_BCLR </item>
//    <item> SFDITEM_FIELD__USBF_CFIFOCTR_BVAL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_D0FIFOCTR  -----------------------------
// SVD Line: 10921

unsigned short USBF_D0FIFOCTR __AT (0x4008002A);



// -----------------------------  Field Item: USBF_D0FIFOCTR_DTLN  --------------------------------
// SVD Line: 10895

//  <item> SFDITEM_FIELD__USBF_D0FIFOCTR_DTLN
//    <name> DTLN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008002A) Receive Data Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_D0FIFOCTR >> 0) & 0xFF), ((USBF_D0FIFOCTR = (USBF_D0FIFOCTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_D0FIFOCTR_FRDY  --------------------------------
// SVD Line: 10901

//  <item> SFDITEM_FIELD__USBF_D0FIFOCTR_FRDY
//    <name> FRDY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4008002A) FIFO Port Ready </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOCTR ) </loc>
//      <o.13..13> FRDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D0FIFOCTR_BCLR  --------------------------------
// SVD Line: 10907

//  <item> SFDITEM_FIELD__USBF_D0FIFOCTR_BCLR
//    <name> BCLR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4008002A) CPU Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOCTR ) </loc>
//      <o.14..14> BCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D0FIFOCTR_BVAL  --------------------------------
// SVD Line: 10913

//  <item> SFDITEM_FIELD__USBF_D0FIFOCTR_BVAL
//    <name> BVAL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008002A) Buffer Memory Valid Flag </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D0FIFOCTR ) </loc>
//      <o.15..15> BVAL
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USBF_D0FIFOCTR  ---------------------------------
// SVD Line: 10921

//  <rtree> SFDITEM_REG__USBF_D0FIFOCTR
//    <name> D0FIFOCTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008002A) D1FIFO Port Control Register </i>
//    <loc> ( (unsigned short)((USBF_D0FIFOCTR >> 0) & 0xFFFF), ((USBF_D0FIFOCTR = (USBF_D0FIFOCTR & ~(0xE0FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE0FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_D0FIFOCTR_DTLN </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOCTR_FRDY </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOCTR_BCLR </item>
//    <item> SFDITEM_FIELD__USBF_D0FIFOCTR_BVAL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_D1FIFOCTR  -----------------------------
// SVD Line: 10927

unsigned short USBF_D1FIFOCTR __AT (0x4008002E);



// -----------------------------  Field Item: USBF_D1FIFOCTR_DTLN  --------------------------------
// SVD Line: 10895

//  <item> SFDITEM_FIELD__USBF_D1FIFOCTR_DTLN
//    <name> DTLN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008002E) Receive Data Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_D1FIFOCTR >> 0) & 0xFF), ((USBF_D1FIFOCTR = (USBF_D1FIFOCTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_D1FIFOCTR_FRDY  --------------------------------
// SVD Line: 10901

//  <item> SFDITEM_FIELD__USBF_D1FIFOCTR_FRDY
//    <name> FRDY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4008002E) FIFO Port Ready </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOCTR ) </loc>
//      <o.13..13> FRDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D1FIFOCTR_BCLR  --------------------------------
// SVD Line: 10907

//  <item> SFDITEM_FIELD__USBF_D1FIFOCTR_BCLR
//    <name> BCLR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4008002E) CPU Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOCTR ) </loc>
//      <o.14..14> BCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_D1FIFOCTR_BVAL  --------------------------------
// SVD Line: 10913

//  <item> SFDITEM_FIELD__USBF_D1FIFOCTR_BVAL
//    <name> BVAL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008002E) Buffer Memory Valid Flag </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_D1FIFOCTR ) </loc>
//      <o.15..15> BVAL
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USBF_D1FIFOCTR  ---------------------------------
// SVD Line: 10927

//  <rtree> SFDITEM_REG__USBF_D1FIFOCTR
//    <name> D1FIFOCTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008002E) D1FIFO Port Control Register </i>
//    <loc> ( (unsigned short)((USBF_D1FIFOCTR >> 0) & 0xFFFF), ((USBF_D1FIFOCTR = (USBF_D1FIFOCTR & ~(0xE0FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE0FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_D1FIFOCTR_DTLN </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOCTR_FRDY </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOCTR_BCLR </item>
//    <item> SFDITEM_FIELD__USBF_D1FIFOCTR_BVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_INTENB0  ------------------------------
// SVD Line: 10933

unsigned short USBF_INTENB0 __AT (0x40080030);



// -----------------------------  Field Item: USBF_INTENB0_BRDYE  ---------------------------------
// SVD Line: 10941

//  <item> SFDITEM_FIELD__USBF_INTENB0_BRDYE
//    <name> BRDYE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080030) Buffer Ready Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.8..8> BRDYE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB0_NRDYE  ---------------------------------
// SVD Line: 10947

//  <item> SFDITEM_FIELD__USBF_INTENB0_NRDYE
//    <name> NRDYE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080030) Buffer Not Ready Response Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.9..9> NRDYE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB0_BEMPE  ---------------------------------
// SVD Line: 10953

//  <item> SFDITEM_FIELD__USBF_INTENB0_BEMPE
//    <name> BEMPE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080030) Buffer Empty Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.10..10> BEMPE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTENB0_CTRE  ---------------------------------
// SVD Line: 10959

//  <item> SFDITEM_FIELD__USBF_INTENB0_CTRE
//    <name> CTRE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080030) Control Transfer Stage Transition Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.11..11> CTRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTENB0_DVSE  ---------------------------------
// SVD Line: 10965

//  <item> SFDITEM_FIELD__USBF_INTENB0_DVSE
//    <name> DVSE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40080030) Device State Transition Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.12..12> DVSE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTENB0_SOFE  ---------------------------------
// SVD Line: 10971

//  <item> SFDITEM_FIELD__USBF_INTENB0_SOFE
//    <name> SOFE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40080030) Frame Number Update Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.13..13> SOFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTENB0_RSME  ---------------------------------
// SVD Line: 10977

//  <item> SFDITEM_FIELD__USBF_INTENB0_RSME
//    <name> RSME </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080030) Resume Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.14..14> RSME
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTENB0_VBSE  ---------------------------------
// SVD Line: 10983

//  <item> SFDITEM_FIELD__USBF_INTENB0_VBSE
//    <name> VBSE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080030) VBUS Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB0 ) </loc>
//      <o.15..15> VBSE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_INTENB0  ----------------------------------
// SVD Line: 10933

//  <rtree> SFDITEM_REG__USBF_INTENB0
//    <name> INTENB0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080030) Interrupt Enable Register 0 </i>
//    <loc> ( (unsigned short)((USBF_INTENB0 >> 0) & 0xFFFF), ((USBF_INTENB0 = (USBF_INTENB0 & ~(0xFF00UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_INTENB0_BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_CTRE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_DVSE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_SOFE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_RSME </item>
//    <item> SFDITEM_FIELD__USBF_INTENB0_VBSE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_INTENB1  ------------------------------
// SVD Line: 10991

unsigned short USBF_INTENB1 __AT (0x40080032);



// ---------------------------  Field Item: USBF_INTENB1_PDDETINTE0  ------------------------------
// SVD Line: 10999

//  <item> SFDITEM_FIELD__USBF_INTENB1_PDDETINTE0
//    <name> PDDETINTE0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080032) PDDETINT0 Detection Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.0..0> PDDETINTE0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB1_SACKE  ---------------------------------
// SVD Line: 11005

//  <item> SFDITEM_FIELD__USBF_INTENB1_SACKE
//    <name> SACKE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080032) Setup Transaction Normal Response Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.4..4> SACKE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB1_SIGNE  ---------------------------------
// SVD Line: 11011

//  <item> SFDITEM_FIELD__USBF_INTENB1_SIGNE
//    <name> SIGNE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080032) Setup Transaction Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.5..5> SIGNE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_INTENB1_EOFERRE  --------------------------------
// SVD Line: 11017

//  <item> SFDITEM_FIELD__USBF_INTENB1_EOFERRE
//    <name> EOFERRE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080032) Setup Transaction Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.6..6> EOFERRE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB1_ATTCHE  --------------------------------
// SVD Line: 11023

//  <item> SFDITEM_FIELD__USBF_INTENB1_ATTCHE
//    <name> ATTCHE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080032) Connection Detection Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.11..11> ATTCHE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB1_DTCHE  ---------------------------------
// SVD Line: 11029

//  <item> SFDITEM_FIELD__USBF_INTENB1_DTCHE
//    <name> DTCHE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40080032) Disconnection Detection Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.12..12> DTCHE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB1_BCHGE  ---------------------------------
// SVD Line: 11035

//  <item> SFDITEM_FIELD__USBF_INTENB1_BCHGE
//    <name> BCHGE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080032) USB Bus Change Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.14..14> BCHGE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTENB1_OVRCRE  --------------------------------
// SVD Line: 11041

//  <item> SFDITEM_FIELD__USBF_INTENB1_OVRCRE
//    <name> OVRCRE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080032) Overcurrent Input Change Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTENB1 ) </loc>
//      <o.15..15> OVRCRE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_INTENB1  ----------------------------------
// SVD Line: 10991

//  <rtree> SFDITEM_REG__USBF_INTENB1
//    <name> INTENB1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080032) Interrupt Enable Register 1 </i>
//    <loc> ( (unsigned short)((USBF_INTENB1 >> 0) & 0xFFFF), ((USBF_INTENB1 = (USBF_INTENB1 & ~(0xD871UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD871) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_INTENB1_PDDETINTE0 </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_SACKE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_SIGNE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_EOFERRE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_ATTCHE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_DTCHE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_BCHGE </item>
//    <item> SFDITEM_FIELD__USBF_INTENB1_OVRCRE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_BRDYENB  ------------------------------
// SVD Line: 11049

unsigned short USBF_BRDYENB __AT (0x40080036);



// ---------------------------  Field Item: USBF_BRDYENB_PIPE0BRDYE  ------------------------------
// SVD Line: 11057

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE0BRDYE
//    <name> PIPE0BRDYE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 0 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.0..0> PIPE0BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE1BRDYE  ------------------------------
// SVD Line: 11063

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE1BRDYE
//    <name> PIPE1BRDYE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 1 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.1..1> PIPE1BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE2BRDYE  ------------------------------
// SVD Line: 11069

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE2BRDYE
//    <name> PIPE2BRDYE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 2 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.2..2> PIPE2BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE3BRDYE  ------------------------------
// SVD Line: 11075

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE3BRDYE
//    <name> PIPE3BRDYE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 3 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.3..3> PIPE3BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE4BRDYE  ------------------------------
// SVD Line: 11081

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE4BRDYE
//    <name> PIPE4BRDYE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 4 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.4..4> PIPE4BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE5BRDYE  ------------------------------
// SVD Line: 11087

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE5BRDYE
//    <name> PIPE5BRDYE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 5 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.5..5> PIPE5BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE6BRDYE  ------------------------------
// SVD Line: 11093

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE6BRDYE
//    <name> PIPE6BRDYE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 6 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.6..6> PIPE6BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE7BRDYE  ------------------------------
// SVD Line: 11099

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE7BRDYE
//    <name> PIPE7BRDYE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 7 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.7..7> PIPE7BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE8BRDYE  ------------------------------
// SVD Line: 11105

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE8BRDYE
//    <name> PIPE8BRDYE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 8 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.8..8> PIPE8BRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYENB_PIPE9BRDYE  ------------------------------
// SVD Line: 11111

//  <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE9BRDYE
//    <name> PIPE9BRDYE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080036) BRDY Interrupt Enable for Pipe 9 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYENB ) </loc>
//      <o.9..9> PIPE9BRDYE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_BRDYENB  ----------------------------------
// SVD Line: 11049

//  <rtree> SFDITEM_REG__USBF_BRDYENB
//    <name> BRDYENB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080036) BRDY Interrupt Enable Register </i>
//    <loc> ( (unsigned short)((USBF_BRDYENB >> 0) & 0xFFFF), ((USBF_BRDYENB = (USBF_BRDYENB & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE0BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE1BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE2BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE3BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE4BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE5BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE6BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE7BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE8BRDYE </item>
//    <item> SFDITEM_FIELD__USBF_BRDYENB_PIPE9BRDYE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_NRDYENB  ------------------------------
// SVD Line: 11119

unsigned short USBF_NRDYENB __AT (0x40080038);



// ---------------------------  Field Item: USBF_NRDYENB_PIPE0NRDYE  ------------------------------
// SVD Line: 11127

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE0NRDYE
//    <name> PIPE0NRDYE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 0 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.0..0> PIPE0NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE1NRDYE  ------------------------------
// SVD Line: 11133

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE1NRDYE
//    <name> PIPE1NRDYE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 1 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.1..1> PIPE1NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE2NRDYE  ------------------------------
// SVD Line: 11139

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE2NRDYE
//    <name> PIPE2NRDYE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 2 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.2..2> PIPE2NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE3NRDYE  ------------------------------
// SVD Line: 11145

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE3NRDYE
//    <name> PIPE3NRDYE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 3 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.3..3> PIPE3NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE4NRDYE  ------------------------------
// SVD Line: 11151

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE4NRDYE
//    <name> PIPE4NRDYE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 4 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.4..4> PIPE4NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE5NRDYE  ------------------------------
// SVD Line: 11157

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE5NRDYE
//    <name> PIPE5NRDYE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 5 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.5..5> PIPE5NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE6NRDYE  ------------------------------
// SVD Line: 11163

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE6NRDYE
//    <name> PIPE6NRDYE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 6 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.6..6> PIPE6NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE7NRDYE  ------------------------------
// SVD Line: 11169

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE7NRDYE
//    <name> PIPE7NRDYE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 7 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.7..7> PIPE7NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE8NRDYE  ------------------------------
// SVD Line: 11175

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE8NRDYE
//    <name> PIPE8NRDYE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 8 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.8..8> PIPE8NRDYE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYENB_PIPE9NRDYE  ------------------------------
// SVD Line: 11181

//  <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE9NRDYE
//    <name> PIPE9NRDYE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080038) NRDY Interrupt Enable for Pipe 9 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYENB ) </loc>
//      <o.9..9> PIPE9NRDYE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_NRDYENB  ----------------------------------
// SVD Line: 11119

//  <rtree> SFDITEM_REG__USBF_NRDYENB
//    <name> NRDYENB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080038) NRDY Interrupt Enable Register </i>
//    <loc> ( (unsigned short)((USBF_NRDYENB >> 0) & 0xFFFF), ((USBF_NRDYENB = (USBF_NRDYENB & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE0NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE1NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE2NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE3NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE4NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE5NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE6NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE7NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE8NRDYE </item>
//    <item> SFDITEM_FIELD__USBF_NRDYENB_PIPE9NRDYE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_BEMPENB  ------------------------------
// SVD Line: 11189

unsigned short USBF_BEMPENB __AT (0x4008003A);



// ---------------------------  Field Item: USBF_BEMPENB_PIPE0BEMPE  ------------------------------
// SVD Line: 11197

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE0BEMPE
//    <name> PIPE0BEMPE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 0 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.0..0> PIPE0BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE1BEMPE  ------------------------------
// SVD Line: 11203

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE1BEMPE
//    <name> PIPE1BEMPE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 1 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.1..1> PIPE1BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE2BEMPE  ------------------------------
// SVD Line: 11209

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE2BEMPE
//    <name> PIPE2BEMPE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 2 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.2..2> PIPE2BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE3BEMPE  ------------------------------
// SVD Line: 11215

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE3BEMPE
//    <name> PIPE3BEMPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 3 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.3..3> PIPE3BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE4BEMPE  ------------------------------
// SVD Line: 11221

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE4BEMPE
//    <name> PIPE4BEMPE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 4 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.4..4> PIPE4BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE5BEMPE  ------------------------------
// SVD Line: 11227

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE5BEMPE
//    <name> PIPE5BEMPE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 5 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.5..5> PIPE5BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE6BEMPE  ------------------------------
// SVD Line: 11233

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE6BEMPE
//    <name> PIPE6BEMPE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 6 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.6..6> PIPE6BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE7BEMPE  ------------------------------
// SVD Line: 11239

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE7BEMPE
//    <name> PIPE7BEMPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 7 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.7..7> PIPE7BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE8BEMPE  ------------------------------
// SVD Line: 11245

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE8BEMPE
//    <name> PIPE8BEMPE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 8 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.8..8> PIPE8BEMPE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPENB_PIPE9BEMPE  ------------------------------
// SVD Line: 11251

//  <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE9BEMPE
//    <name> PIPE9BEMPE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008003A) BEMP Interrupt Enable for Pipe 9 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPENB ) </loc>
//      <o.9..9> PIPE9BEMPE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_BEMPENB  ----------------------------------
// SVD Line: 11189

//  <rtree> SFDITEM_REG__USBF_BEMPENB
//    <name> BEMPENB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008003A) BEMP Interrupt Enable Register </i>
//    <loc> ( (unsigned short)((USBF_BEMPENB >> 0) & 0xFFFF), ((USBF_BEMPENB = (USBF_BEMPENB & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE0BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE1BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE2BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE3BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE4BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE5BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE6BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE7BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE8BEMPE </item>
//    <item> SFDITEM_FIELD__USBF_BEMPENB_PIPE9BEMPE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_SOFCFG  -------------------------------
// SVD Line: 11259

unsigned short USBF_SOFCFG __AT (0x4008003C);



// -----------------------------  Field Item: USBF_SOFCFG_EDGESTS  --------------------------------
// SVD Line: 11267

//  <item> SFDITEM_FIELD__USBF_SOFCFG_EDGESTS
//    <name> EDGESTS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008003C) Edge Interrupt Output Status Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SOFCFG ) </loc>
//      <o.4..4> EDGESTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_SOFCFG_BRDYM  ---------------------------------
// SVD Line: 11273

//  <item> SFDITEM_FIELD__USBF_SOFCFG_BRDYM
//    <name> BRDYM </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008003C) BRDY Interrupt Status Clear Timing </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SOFCFG ) </loc>
//      <o.6..6> BRDYM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_SOFCFG_TRNENSEL  --------------------------------
// SVD Line: 11279

//  <item> SFDITEM_FIELD__USBF_SOFCFG_TRNENSEL
//    <name> TRNENSEL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008003C) Transaction-Enabled Time Select </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_SOFCFG ) </loc>
//      <o.8..8> TRNENSEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USBF_SOFCFG  ----------------------------------
// SVD Line: 11259

//  <rtree> SFDITEM_REG__USBF_SOFCFG
//    <name> SOFCFG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008003C) SOF Output Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_SOFCFG >> 0) & 0xFFFF), ((USBF_SOFCFG = (USBF_SOFCFG & ~(0x150UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x150) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_SOFCFG_EDGESTS </item>
//    <item> SFDITEM_FIELD__USBF_SOFCFG_BRDYM </item>
//    <item> SFDITEM_FIELD__USBF_SOFCFG_TRNENSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_INTSTS0  ------------------------------
// SVD Line: 11287

unsigned short USBF_INTSTS0 __AT (0x40080040);



// ------------------------------  Field Item: USBF_INTSTS0_CTSQ  ---------------------------------
// SVD Line: 11295

//  <item> SFDITEM_FIELD__USBF_INTSTS0_CTSQ
//    <name> CTSQ </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40080040) Control Transfer Stage </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_INTSTS0 >> 0) & 0x7), ((USBF_INTSTS0 = (USBF_INTSTS0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTSTS0_VALID  ---------------------------------
// SVD Line: 11301

//  <item> SFDITEM_FIELD__USBF_INTSTS0_VALID
//    <name> VALID </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080040) USB Request Reception </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.3..3> VALID
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_DVSQ  ---------------------------------
// SVD Line: 11307

//  <item> SFDITEM_FIELD__USBF_INTSTS0_DVSQ
//    <name> DVSQ </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40080040) Device State </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_INTSTS0 >> 4) & 0x7), ((USBF_INTSTS0 = (USBF_INTSTS0 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTSTS0_VBSTS  ---------------------------------
// SVD Line: 11313

//  <item> SFDITEM_FIELD__USBF_INTSTS0_VBSTS
//    <name> VBSTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080040) VBUS Input Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.7..7> VBSTS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_BRDY  ---------------------------------
// SVD Line: 11319

//  <item> SFDITEM_FIELD__USBF_INTSTS0_BRDY
//    <name> BRDY </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080040) Buffer Ready Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.8..8> BRDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_NRDY  ---------------------------------
// SVD Line: 11325

//  <item> SFDITEM_FIELD__USBF_INTSTS0_NRDY
//    <name> NRDY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080040) Buffer Not Ready Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.9..9> NRDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_BEMP  ---------------------------------
// SVD Line: 11331

//  <item> SFDITEM_FIELD__USBF_INTSTS0_BEMP
//    <name> BEMP </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080040) Buffer Empty Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.10..10> BEMP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_CTRT  ---------------------------------
// SVD Line: 11337

//  <item> SFDITEM_FIELD__USBF_INTSTS0_CTRT
//    <name> CTRT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080040) Control Transfer Stage Transition Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.11..11> CTRT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_DVST  ---------------------------------
// SVD Line: 11343

//  <item> SFDITEM_FIELD__USBF_INTSTS0_DVST
//    <name> DVST </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40080040) Device State Transition Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.12..12> DVST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_SOFR  ---------------------------------
// SVD Line: 11349

//  <item> SFDITEM_FIELD__USBF_INTSTS0_SOFR
//    <name> SOFR </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40080040) Frame Number Update Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.13..13> SOFR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS0_RESM  ---------------------------------
// SVD Line: 11355

//  <item> SFDITEM_FIELD__USBF_INTSTS0_RESM
//    <name> RESM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080040) Resume Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.14..14> RESM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTSTS0_VBINT  ---------------------------------
// SVD Line: 11361

//  <item> SFDITEM_FIELD__USBF_INTSTS0_VBINT
//    <name> VBINT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080040) VBUS Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS0 ) </loc>
//      <o.15..15> VBINT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_INTSTS0  ----------------------------------
// SVD Line: 11287

//  <rtree> SFDITEM_REG__USBF_INTSTS0
//    <name> INTSTS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080040) Interrupt Status Register 0 </i>
//    <loc> ( (unsigned short)((USBF_INTSTS0 >> 0) & 0xFFFF), ((USBF_INTSTS0 = (USBF_INTSTS0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_CTSQ </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_VALID </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_DVSQ </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_VBSTS </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_BRDY </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_NRDY </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_BEMP </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_CTRT </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_DVST </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_SOFR </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_RESM </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS0_VBINT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_INTSTS1  ------------------------------
// SVD Line: 11369

unsigned short USBF_INTSTS1 __AT (0x40080042);



// ---------------------------  Field Item: USBF_INTSTS1_PDDETINT0  -------------------------------
// SVD Line: 11377

//  <item> SFDITEM_FIELD__USBF_INTSTS1_PDDETINT0
//    <name> PDDETINT0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080042) PDDETINT0 Detection Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.0..0> PDDETINT0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS1_SACK  ---------------------------------
// SVD Line: 11383

//  <item> SFDITEM_FIELD__USBF_INTSTS1_SACK
//    <name> SACK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080042) Setup Transaction Normal Response Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.4..4> SACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS1_SIGN  ---------------------------------
// SVD Line: 11389

//  <item> SFDITEM_FIELD__USBF_INTSTS1_SIGN
//    <name> SIGN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080042) Setup Transaction Error Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.5..5> SIGN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTSTS1_EOFERR  --------------------------------
// SVD Line: 11395

//  <item> SFDITEM_FIELD__USBF_INTSTS1_EOFERR
//    <name> EOFERR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080042) Setup Transaction Error Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.6..6> EOFERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTSTS1_ATTCH  ---------------------------------
// SVD Line: 11401

//  <item> SFDITEM_FIELD__USBF_INTSTS1_ATTCH
//    <name> ATTCH </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080042) Connection Detection Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.11..11> ATTCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS1_DTCH  ---------------------------------
// SVD Line: 11407

//  <item> SFDITEM_FIELD__USBF_INTSTS1_DTCH
//    <name> DTCH </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40080042) Disconnection Detection Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.12..12> DTCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_INTSTS1_BCHG  ---------------------------------
// SVD Line: 11413

//  <item> SFDITEM_FIELD__USBF_INTSTS1_BCHG
//    <name> BCHG </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080042) USB Bus Change Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.14..14> BCHG
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_INTSTS1_OVRCR  ---------------------------------
// SVD Line: 11419

//  <item> SFDITEM_FIELD__USBF_INTSTS1_OVRCR
//    <name> OVRCR </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080042) Overcurrent Input Change Interrupt Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_INTSTS1 ) </loc>
//      <o.15..15> OVRCR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_INTSTS1  ----------------------------------
// SVD Line: 11369

//  <rtree> SFDITEM_REG__USBF_INTSTS1
//    <name> INTSTS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080042) Interrupt Status Register 1 </i>
//    <loc> ( (unsigned short)((USBF_INTSTS1 >> 0) & 0xFFFF), ((USBF_INTSTS1 = (USBF_INTSTS1 & ~(0xD871UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD871) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_PDDETINT0 </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_SACK </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_SIGN </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_EOFERR </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_ATTCH </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_DTCH </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_BCHG </item>
//    <item> SFDITEM_FIELD__USBF_INTSTS1_OVRCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_BRDYSTS  ------------------------------
// SVD Line: 11427

unsigned short USBF_BRDYSTS __AT (0x40080046);



// ---------------------------  Field Item: USBF_BRDYSTS_PIPE0BRDY  -------------------------------
// SVD Line: 11435

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE0BRDY
//    <name> PIPE0BRDY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 0 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.0..0> PIPE0BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE1BRDY  -------------------------------
// SVD Line: 11441

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE1BRDY
//    <name> PIPE1BRDY </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 1 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.1..1> PIPE1BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE2BRDY  -------------------------------
// SVD Line: 11447

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE2BRDY
//    <name> PIPE2BRDY </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 2 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.2..2> PIPE2BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE3BRDY  -------------------------------
// SVD Line: 11453

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE3BRDY
//    <name> PIPE3BRDY </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 3 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.3..3> PIPE3BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE4BRDY  -------------------------------
// SVD Line: 11459

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE4BRDY
//    <name> PIPE4BRDY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 4 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.4..4> PIPE4BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE5BRDY  -------------------------------
// SVD Line: 11465

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE5BRDY
//    <name> PIPE5BRDY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 5 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.5..5> PIPE5BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE6BRDY  -------------------------------
// SVD Line: 11471

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE6BRDY
//    <name> PIPE6BRDY </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 6 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.6..6> PIPE6BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE7BRDY  -------------------------------
// SVD Line: 11477

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE7BRDY
//    <name> PIPE7BRDY </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 7 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.7..7> PIPE7BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE8BRDY  -------------------------------
// SVD Line: 11483

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE8BRDY
//    <name> PIPE8BRDY </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 8 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.8..8> PIPE8BRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BRDYSTS_PIPE9BRDY  -------------------------------
// SVD Line: 11489

//  <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE9BRDY
//    <name> PIPE9BRDY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080046) BRDY Interrupt Status for Pipe 9 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BRDYSTS ) </loc>
//      <o.9..9> PIPE9BRDY
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_BRDYSTS  ----------------------------------
// SVD Line: 11427

//  <rtree> SFDITEM_REG__USBF_BRDYSTS
//    <name> BRDYSTS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080046) BRDY Interrupt Status Register </i>
//    <loc> ( (unsigned short)((USBF_BRDYSTS >> 0) & 0xFFFF), ((USBF_BRDYSTS = (USBF_BRDYSTS & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE0BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE1BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE2BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE3BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE4BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE5BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE6BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE7BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE8BRDY </item>
//    <item> SFDITEM_FIELD__USBF_BRDYSTS_PIPE9BRDY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_NRDYSTS  ------------------------------
// SVD Line: 11497

unsigned short USBF_NRDYSTS __AT (0x40080048);



// ---------------------------  Field Item: USBF_NRDYSTS_PIPE0NRDY  -------------------------------
// SVD Line: 11505

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE0NRDY
//    <name> PIPE0NRDY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 0 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.0..0> PIPE0NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE1NRDY  -------------------------------
// SVD Line: 11511

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE1NRDY
//    <name> PIPE1NRDY </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 1 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.1..1> PIPE1NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE2NRDY  -------------------------------
// SVD Line: 11517

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE2NRDY
//    <name> PIPE2NRDY </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 2 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.2..2> PIPE2NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE3NRDY  -------------------------------
// SVD Line: 11523

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE3NRDY
//    <name> PIPE3NRDY </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 3 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.3..3> PIPE3NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE4NRDY  -------------------------------
// SVD Line: 11529

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE4NRDY
//    <name> PIPE4NRDY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 4 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.4..4> PIPE4NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE5NRDY  -------------------------------
// SVD Line: 11535

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE5NRDY
//    <name> PIPE5NRDY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 5 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.5..5> PIPE5NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE6NRDY  -------------------------------
// SVD Line: 11541

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE6NRDY
//    <name> PIPE6NRDY </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 6 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.6..6> PIPE6NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE7NRDY  -------------------------------
// SVD Line: 11547

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE7NRDY
//    <name> PIPE7NRDY </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 7 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.7..7> PIPE7NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE8NRDY  -------------------------------
// SVD Line: 11553

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE8NRDY
//    <name> PIPE8NRDY </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 8 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.8..8> PIPE8NRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_NRDYSTS_PIPE9NRDY  -------------------------------
// SVD Line: 11559

//  <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE9NRDY
//    <name> PIPE9NRDY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080048) NRDY Interrupt Status for Pipe 9 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_NRDYSTS ) </loc>
//      <o.9..9> PIPE9NRDY
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_NRDYSTS  ----------------------------------
// SVD Line: 11497

//  <rtree> SFDITEM_REG__USBF_NRDYSTS
//    <name> NRDYSTS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080048) NRDY Interrupt Status Register </i>
//    <loc> ( (unsigned short)((USBF_NRDYSTS >> 0) & 0xFFFF), ((USBF_NRDYSTS = (USBF_NRDYSTS & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE0NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE1NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE2NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE3NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE4NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE5NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE6NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE7NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE8NRDY </item>
//    <item> SFDITEM_FIELD__USBF_NRDYSTS_PIPE9NRDY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_BEMPSTS  ------------------------------
// SVD Line: 11567

unsigned short USBF_BEMPSTS __AT (0x4008004A);



// ---------------------------  Field Item: USBF_BEMPSTS_PIPE0BEMP  -------------------------------
// SVD Line: 11575

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE0BEMP
//    <name> PIPE0BEMP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 0 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.0..0> PIPE0BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE1BEMP  -------------------------------
// SVD Line: 11581

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE1BEMP
//    <name> PIPE1BEMP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 1 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.1..1> PIPE1BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE2BEMP  -------------------------------
// SVD Line: 11587

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE2BEMP
//    <name> PIPE2BEMP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 2 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.2..2> PIPE2BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE3BEMP  -------------------------------
// SVD Line: 11593

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE3BEMP
//    <name> PIPE3BEMP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 3 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.3..3> PIPE3BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE4BEMP  -------------------------------
// SVD Line: 11599

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE4BEMP
//    <name> PIPE4BEMP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 4 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.4..4> PIPE4BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE5BEMP  -------------------------------
// SVD Line: 11605

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE5BEMP
//    <name> PIPE5BEMP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 5 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.5..5> PIPE5BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE6BEMP  -------------------------------
// SVD Line: 11611

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE6BEMP
//    <name> PIPE6BEMP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 6 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.6..6> PIPE6BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE7BEMP  -------------------------------
// SVD Line: 11617

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE7BEMP
//    <name> PIPE7BEMP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 7 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.7..7> PIPE7BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE8BEMP  -------------------------------
// SVD Line: 11623

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE8BEMP
//    <name> PIPE8BEMP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 8 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.8..8> PIPE8BEMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_BEMPSTS_PIPE9BEMP  -------------------------------
// SVD Line: 11629

//  <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE9BEMP
//    <name> PIPE9BEMP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008004A) BEMP Interrupt Status for Pipe 9 </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_BEMPSTS ) </loc>
//      <o.9..9> PIPE9BEMP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_BEMPSTS  ----------------------------------
// SVD Line: 11567

//  <rtree> SFDITEM_REG__USBF_BEMPSTS
//    <name> BEMPSTS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008004A) BEMP Interrupt Status Register </i>
//    <loc> ( (unsigned short)((USBF_BEMPSTS >> 0) & 0xFFFF), ((USBF_BEMPSTS = (USBF_BEMPSTS & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE0BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE1BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE2BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE3BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE4BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE5BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE6BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE7BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE8BEMP </item>
//    <item> SFDITEM_FIELD__USBF_BEMPSTS_PIPE9BEMP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_FRMNUM  -------------------------------
// SVD Line: 11637

unsigned short USBF_FRMNUM __AT (0x4008004C);



// ------------------------------  Field Item: USBF_FRMNUM_FRNM  ----------------------------------
// SVD Line: 11645

//  <item> SFDITEM_FIELD__USBF_FRMNUM_FRNM
//    <name> FRNM </name>
//    <r> 
//    <i> [Bits 10..0] RO (@ 0x4008004C) Frame Number </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_FRMNUM >> 0) & 0x7FF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USBF_FRMNUM_CRCE  ----------------------------------
// SVD Line: 11652

//  <item> SFDITEM_FIELD__USBF_FRMNUM_CRCE
//    <name> CRCE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4008004C) Receive Data Error </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_FRMNUM ) </loc>
//      <o.14..14> CRCE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_FRMNUM_OVRN  ----------------------------------
// SVD Line: 11658

//  <item> SFDITEM_FIELD__USBF_FRMNUM_OVRN
//    <name> OVRN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008004C) Overrun/Underrun Detection Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_FRMNUM ) </loc>
//      <o.15..15> OVRN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USBF_FRMNUM  ----------------------------------
// SVD Line: 11637

//  <rtree> SFDITEM_REG__USBF_FRMNUM
//    <name> FRMNUM </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008004C) Frame Number Register </i>
//    <loc> ( (unsigned short)((USBF_FRMNUM >> 0) & 0xFFFF), ((USBF_FRMNUM = (USBF_FRMNUM & ~(0xC000UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_FRMNUM_FRNM </item>
//    <item> SFDITEM_FIELD__USBF_FRMNUM_CRCE </item>
//    <item> SFDITEM_FIELD__USBF_FRMNUM_OVRN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_USBREQ  -------------------------------
// SVD Line: 11666

unsigned short USBF_USBREQ __AT (0x40080054);



// --------------------------  Field Item: USBF_USBREQ_BMREQUESTTYPE  -----------------------------
// SVD Line: 11674

//  <item> SFDITEM_FIELD__USBF_USBREQ_BMREQUESTTYPE
//    <name> BMREQUESTTYPE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40080054) Request Type </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_USBREQ >> 0) & 0xFF), ((USBF_USBREQ = (USBF_USBREQ & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USBF_USBREQ_BREQUEST  --------------------------------
// SVD Line: 11680

//  <item> SFDITEM_FIELD__USBF_USBREQ_BREQUEST
//    <name> BREQUEST </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40080054) Request </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_USBREQ >> 8) & 0xFF), ((USBF_USBREQ = (USBF_USBREQ & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: USBF_USBREQ  ----------------------------------
// SVD Line: 11666

//  <rtree> SFDITEM_REG__USBF_USBREQ
//    <name> USBREQ </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080054) USB Request Type Register </i>
//    <loc> ( (unsigned short)((USBF_USBREQ >> 0) & 0xFFFF), ((USBF_USBREQ = (USBF_USBREQ & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_USBREQ_BMREQUESTTYPE </item>
//    <item> SFDITEM_FIELD__USBF_USBREQ_BREQUEST </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_USBVAL  -------------------------------
// SVD Line: 11688

unsigned short USBF_USBVAL __AT (0x40080056);



// -------------------------------  Register Item: USBF_USBVAL  -----------------------------------
// SVD Line: 11688

//  <item> SFDITEM_REG__USBF_USBVAL
//    <name> USBVAL </name>
//    <i> [Bits 15..0] RW (@ 0x40080056) USB Request Value Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_USBVAL >> 0) & 0xFFFFFFFF), ((USBF_USBVAL = (USBF_USBVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_USBINDX  ------------------------------
// SVD Line: 11696

unsigned short USBF_USBINDX __AT (0x40080058);



// -------------------------------  Register Item: USBF_USBINDX  ----------------------------------
// SVD Line: 11696

//  <item> SFDITEM_REG__USBF_USBINDX
//    <name> USBINDX </name>
//    <i> [Bits 15..0] RW (@ 0x40080058) USB Request Index Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_USBINDX >> 0) & 0xFFFFFFFF), ((USBF_USBINDX = (USBF_USBINDX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_USBLENG  ------------------------------
// SVD Line: 11704

unsigned short USBF_USBLENG __AT (0x4008005A);



// -------------------------------  Register Item: USBF_USBLENG  ----------------------------------
// SVD Line: 11704

//  <item> SFDITEM_REG__USBF_USBLENG
//    <name> USBLENG </name>
//    <i> [Bits 15..0] RW (@ 0x4008005A) USB Request Length Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_USBLENG >> 0) & 0xFFFFFFFF), ((USBF_USBLENG = (USBF_USBLENG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: USBF_DCPCFG  -------------------------------
// SVD Line: 11712

unsigned short USBF_DCPCFG __AT (0x4008005C);



// -------------------------------  Field Item: USBF_DCPCFG_DIR  ----------------------------------
// SVD Line: 11720

//  <item> SFDITEM_FIELD__USBF_DCPCFG_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008005C) Transfer Direction </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCFG ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_DCPCFG_SHTNAK  ---------------------------------
// SVD Line: 11726

//  <item> SFDITEM_FIELD__USBF_DCPCFG_SHTNAK
//    <name> SHTNAK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008005C) Pipe Disabled at End of Transfer </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCFG ) </loc>
//      <o.7..7> SHTNAK
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USBF_DCPCFG  ----------------------------------
// SVD Line: 11712

//  <rtree> SFDITEM_REG__USBF_DCPCFG
//    <name> DCPCFG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008005C) DCP Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DCPCFG >> 0) & 0xFFFF), ((USBF_DCPCFG = (USBF_DCPCFG & ~(0x90UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x90) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DCPCFG_DIR </item>
//    <item> SFDITEM_FIELD__USBF_DCPCFG_SHTNAK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_DCPMAXP  ------------------------------
// SVD Line: 11734

unsigned short USBF_DCPMAXP __AT (0x4008005E);



// ------------------------------  Field Item: USBF_DCPMAXP_MXPS  ---------------------------------
// SVD Line: 11742

//  <item> SFDITEM_FIELD__USBF_DCPMAXP_MXPS
//    <name> MXPS </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x4008005E) Maximum Packet Size </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DCPMAXP >> 0) & 0x7F), ((USBF_DCPMAXP = (USBF_DCPMAXP & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_DCPMAXP_DEVSEL  --------------------------------
// SVD Line: 11748

//  <item> SFDITEM_FIELD__USBF_DCPMAXP_DEVSEL
//    <name> DEVSEL </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4008005E) Device Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DCPMAXP >> 12) & 0xF), ((USBF_DCPMAXP = (USBF_DCPMAXP & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USBF_DCPMAXP  ----------------------------------
// SVD Line: 11734

//  <rtree> SFDITEM_REG__USBF_DCPMAXP
//    <name> DCPMAXP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008005E) DCP Maximum Packet Size Register </i>
//    <loc> ( (unsigned short)((USBF_DCPMAXP >> 0) & 0xFFFF), ((USBF_DCPMAXP = (USBF_DCPMAXP & ~(0xF07FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF07F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DCPMAXP_MXPS </item>
//    <item> SFDITEM_FIELD__USBF_DCPMAXP_DEVSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_DCPCTR  -------------------------------
// SVD Line: 11756

unsigned short USBF_DCPCTR __AT (0x40080060);



// -------------------------------  Field Item: USBF_DCPCTR_PID  ----------------------------------
// SVD Line: 11764

//  <item> SFDITEM_FIELD__USBF_DCPCTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080060) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DCPCTR >> 0) & 0x3), ((USBF_DCPCTR = (USBF_DCPCTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_CCPL  ----------------------------------
// SVD Line: 11770

//  <item> SFDITEM_FIELD__USBF_DCPCTR_CCPL
//    <name> CCPL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080060) Control Transfer End Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.2..2> CCPL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_PBUSY  ---------------------------------
// SVD Line: 11776

//  <item> SFDITEM_FIELD__USBF_DCPCTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080060) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_SQMON  ---------------------------------
// SVD Line: 11782

//  <item> SFDITEM_FIELD__USBF_DCPCTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080060) Sequence Toggle Bit Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_SQSET  ---------------------------------
// SVD Line: 11788

//  <item> SFDITEM_FIELD__USBF_DCPCTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080060) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_SQCLR  ---------------------------------
// SVD Line: 11794

//  <item> SFDITEM_FIELD__USBF_DCPCTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080060) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_DCPCTR_SUREQCLR  --------------------------------
// SVD Line: 11800

//  <item> SFDITEM_FIELD__USBF_DCPCTR_SUREQCLR
//    <name> SUREQCLR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080060) SUREQ Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.11..11> SUREQCLR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_SUREQ  ---------------------------------
// SVD Line: 11806

//  <item> SFDITEM_FIELD__USBF_DCPCTR_SUREQ
//    <name> SUREQ </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080060) Setup Token Transmission </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.14..14> SUREQ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_DCPCTR_BSTS  ----------------------------------
// SVD Line: 11812

//  <item> SFDITEM_FIELD__USBF_DCPCTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080060) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_DCPCTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USBF_DCPCTR  ----------------------------------
// SVD Line: 11756

//  <rtree> SFDITEM_REG__USBF_DCPCTR
//    <name> DCPCTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080060) DCP Control Register </i>
//    <loc> ( (unsigned short)((USBF_DCPCTR >> 0) & 0xFFFF), ((USBF_DCPCTR = (USBF_DCPCTR & ~(0xC9E7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC9E7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_CCPL </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_SUREQCLR </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_SUREQ </item>
//    <item> SFDITEM_FIELD__USBF_DCPCTR_BSTS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_PIPESEL  ------------------------------
// SVD Line: 11820

unsigned short USBF_PIPESEL __AT (0x40080064);



// ----------------------------  Field Item: USBF_PIPESEL_PIPESEL  --------------------------------
// SVD Line: 11828

//  <item> SFDITEM_FIELD__USBF_PIPESEL_PIPESEL
//    <name> PIPESEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40080064) Pipe Window Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPESEL >> 0) & 0xF), ((USBF_PIPESEL = (USBF_PIPESEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPESEL  ----------------------------------
// SVD Line: 11820

//  <rtree> SFDITEM_REG__USBF_PIPESEL
//    <name> PIPESEL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080064) Pipe Window Select Register </i>
//    <loc> ( (unsigned short)((USBF_PIPESEL >> 0) & 0xFFFF), ((USBF_PIPESEL = (USBF_PIPESEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPESEL_PIPESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USBF_PIPECFG  ------------------------------
// SVD Line: 11836

unsigned short USBF_PIPECFG __AT (0x40080068);



// -----------------------------  Field Item: USBF_PIPECFG_EPNUM  ---------------------------------
// SVD Line: 11844

//  <item> SFDITEM_FIELD__USBF_PIPECFG_EPNUM
//    <name> EPNUM </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40080068) Endpoint Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPECFG >> 0) & 0xF), ((USBF_PIPECFG = (USBF_PIPECFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: USBF_PIPECFG_DIR  ----------------------------------
// SVD Line: 11850

//  <item> SFDITEM_FIELD__USBF_PIPECFG_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080068) Transfer Direction </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPECFG ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPECFG_SHTNAK  --------------------------------
// SVD Line: 11856

//  <item> SFDITEM_FIELD__USBF_PIPECFG_SHTNAK
//    <name> SHTNAK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080068) Pipe Disabled at End of Transfer </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPECFG ) </loc>
//      <o.7..7> SHTNAK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_PIPECFG_DBLB  ---------------------------------
// SVD Line: 11862

//  <item> SFDITEM_FIELD__USBF_PIPECFG_DBLB
//    <name> DBLB </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080068) Double Buffer Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPECFG ) </loc>
//      <o.9..9> DBLB
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_PIPECFG_BFRE  ---------------------------------
// SVD Line: 11868

//  <item> SFDITEM_FIELD__USBF_PIPECFG_BFRE
//    <name> BFRE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080068) BRDY Interrupt Operation Specification </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPECFG ) </loc>
//      <o.10..10> BFRE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_PIPECFG_TYPE  ---------------------------------
// SVD Line: 11874

//  <item> SFDITEM_FIELD__USBF_PIPECFG_TYPE
//    <name> TYPE </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40080068) Transfer Type </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPECFG >> 14) & 0x3), ((USBF_PIPECFG = (USBF_PIPECFG & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPECFG  ----------------------------------
// SVD Line: 11836

//  <rtree> SFDITEM_REG__USBF_PIPECFG
//    <name> PIPECFG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080068) Pipe Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_PIPECFG >> 0) & 0xFFFF), ((USBF_PIPECFG = (USBF_PIPECFG & ~(0xC69FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC69F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPECFG_EPNUM </item>
//    <item> SFDITEM_FIELD__USBF_PIPECFG_DIR </item>
//    <item> SFDITEM_FIELD__USBF_PIPECFG_SHTNAK </item>
//    <item> SFDITEM_FIELD__USBF_PIPECFG_DBLB </item>
//    <item> SFDITEM_FIELD__USBF_PIPECFG_BFRE </item>
//    <item> SFDITEM_FIELD__USBF_PIPECFG_TYPE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPEMAXP  ------------------------------
// SVD Line: 11882

unsigned short USBF_PIPEMAXP __AT (0x4008006C);



// -----------------------------  Field Item: USBF_PIPEMAXP_MXPS  ---------------------------------
// SVD Line: 11890

//  <item> SFDITEM_FIELD__USBF_PIPEMAXP_MXPS
//    <name> MXPS </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x4008006C) Maximum Packet Size </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_PIPEMAXP >> 0) & 0x1FF), ((USBF_PIPEMAXP = (USBF_PIPEMAXP & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPEMAXP_DEVSEL  --------------------------------
// SVD Line: 11896

//  <item> SFDITEM_FIELD__USBF_PIPEMAXP_DEVSEL
//    <name> DEVSEL </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4008006C) Device Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPEMAXP >> 12) & 0xF), ((USBF_PIPEMAXP = (USBF_PIPEMAXP & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPEMAXP  ---------------------------------
// SVD Line: 11882

//  <rtree> SFDITEM_REG__USBF_PIPEMAXP
//    <name> PIPEMAXP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008006C) Pipe Maximum Packet Size Register </i>
//    <loc> ( (unsigned short)((USBF_PIPEMAXP >> 0) & 0xFFFF), ((USBF_PIPEMAXP = (USBF_PIPEMAXP & ~(0xF1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPEMAXP_MXPS </item>
//    <item> SFDITEM_FIELD__USBF_PIPEMAXP_DEVSEL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPEPERI  ------------------------------
// SVD Line: 11904

unsigned short USBF_PIPEPERI __AT (0x4008006E);



// -----------------------------  Field Item: USBF_PIPEPERI_IITV  ---------------------------------
// SVD Line: 11912

//  <item> SFDITEM_FIELD__USBF_PIPEPERI_IITV
//    <name> IITV </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4008006E) Interval Error Detection Interval </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPEPERI >> 0) & 0x7), ((USBF_PIPEPERI = (USBF_PIPEPERI & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPEPERI_IFIS  ---------------------------------
// SVD Line: 11918

//  <item> SFDITEM_FIELD__USBF_PIPEPERI_IFIS
//    <name> IFIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4008006E) Isochronous IN Buffer Flush </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPEPERI ) </loc>
//      <o.12..12> IFIS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPEPERI  ---------------------------------
// SVD Line: 11904

//  <rtree> SFDITEM_REG__USBF_PIPEPERI
//    <name> PIPEPERI </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008006E) Pipe Cycle Control Register </i>
//    <loc> ( (unsigned short)((USBF_PIPEPERI >> 0) & 0xFFFF), ((USBF_PIPEPERI = (USBF_PIPEPERI & ~(0x1007UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPEPERI_IITV </item>
//    <item> SFDITEM_FIELD__USBF_PIPEPERI_IFIS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE1CTR  ------------------------------
// SVD Line: 11926

unsigned short USBF_PIPE1CTR __AT (0x40080070);



// ------------------------------  Field Item: USBF_PIPE1CTR_PID  ---------------------------------
// SVD Line: 11934

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080070) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE1CTR >> 0) & 0x3), ((USBF_PIPE1CTR = (USBF_PIPE1CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE1CTR_PBUSY  --------------------------------
// SVD Line: 11940

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080070) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE1CTR_SQMON  --------------------------------
// SVD Line: 11946

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080070) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE1CTR_SQSET  --------------------------------
// SVD Line: 11952

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080070) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE1CTR_SQCLR  --------------------------------
// SVD Line: 11958

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080070) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE1CTR_ACLRM  --------------------------------
// SVD Line: 11964

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080070) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE1CTR_ATREPM  --------------------------------
// SVD Line: 11970

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_ATREPM
//    <name> ATREPM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080070) Auto Response Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.10..10> ATREPM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE1CTR_INBUFM  --------------------------------
// SVD Line: 11976

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_INBUFM
//    <name> INBUFM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080070) Transmit Buffer Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.14..14> INBUFM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE1CTR_BSTS  ---------------------------------
// SVD Line: 11982

//  <item> SFDITEM_FIELD__USBF_PIPE1CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080070) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE1CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE1CTR  ---------------------------------
// SVD Line: 11926

//  <rtree> SFDITEM_REG__USBF_PIPE1CTR
//    <name> PIPE1CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080070) PIPE1 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE1CTR >> 0) & 0xFFFF), ((USBF_PIPE1CTR = (USBF_PIPE1CTR & ~(0xC7E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC7E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_ATREPM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_INBUFM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE1CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE2CTR  ------------------------------
// SVD Line: 11990

unsigned short USBF_PIPE2CTR __AT (0x40080072);



// ------------------------------  Field Item: USBF_PIPE2CTR_PID  ---------------------------------
// SVD Line: 11934

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080072) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE2CTR >> 0) & 0x3), ((USBF_PIPE2CTR = (USBF_PIPE2CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE2CTR_PBUSY  --------------------------------
// SVD Line: 11940

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080072) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE2CTR_SQMON  --------------------------------
// SVD Line: 11946

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080072) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE2CTR_SQSET  --------------------------------
// SVD Line: 11952

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080072) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE2CTR_SQCLR  --------------------------------
// SVD Line: 11958

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080072) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE2CTR_ACLRM  --------------------------------
// SVD Line: 11964

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080072) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE2CTR_ATREPM  --------------------------------
// SVD Line: 11970

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_ATREPM
//    <name> ATREPM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080072) Auto Response Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.10..10> ATREPM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE2CTR_INBUFM  --------------------------------
// SVD Line: 11976

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_INBUFM
//    <name> INBUFM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080072) Transmit Buffer Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.14..14> INBUFM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE2CTR_BSTS  ---------------------------------
// SVD Line: 11982

//  <item> SFDITEM_FIELD__USBF_PIPE2CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080072) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE2CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE2CTR  ---------------------------------
// SVD Line: 11990

//  <rtree> SFDITEM_REG__USBF_PIPE2CTR
//    <name> PIPE2CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080072) PIPE2 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE2CTR >> 0) & 0xFFFF), ((USBF_PIPE2CTR = (USBF_PIPE2CTR & ~(0xC7E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC7E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_ATREPM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_INBUFM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE2CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE3CTR  ------------------------------
// SVD Line: 11996

unsigned short USBF_PIPE3CTR __AT (0x40080074);



// ------------------------------  Field Item: USBF_PIPE3CTR_PID  ---------------------------------
// SVD Line: 11934

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080074) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE3CTR >> 0) & 0x3), ((USBF_PIPE3CTR = (USBF_PIPE3CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE3CTR_PBUSY  --------------------------------
// SVD Line: 11940

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080074) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE3CTR_SQMON  --------------------------------
// SVD Line: 11946

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080074) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE3CTR_SQSET  --------------------------------
// SVD Line: 11952

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080074) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE3CTR_SQCLR  --------------------------------
// SVD Line: 11958

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080074) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE3CTR_ACLRM  --------------------------------
// SVD Line: 11964

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080074) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE3CTR_ATREPM  --------------------------------
// SVD Line: 11970

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_ATREPM
//    <name> ATREPM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080074) Auto Response Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.10..10> ATREPM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE3CTR_INBUFM  --------------------------------
// SVD Line: 11976

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_INBUFM
//    <name> INBUFM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080074) Transmit Buffer Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.14..14> INBUFM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE3CTR_BSTS  ---------------------------------
// SVD Line: 11982

//  <item> SFDITEM_FIELD__USBF_PIPE3CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080074) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE3CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE3CTR  ---------------------------------
// SVD Line: 11996

//  <rtree> SFDITEM_REG__USBF_PIPE3CTR
//    <name> PIPE3CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080074) PIPE3 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE3CTR >> 0) & 0xFFFF), ((USBF_PIPE3CTR = (USBF_PIPE3CTR & ~(0xC7E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC7E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_ATREPM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_INBUFM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE3CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE4CTR  ------------------------------
// SVD Line: 12002

unsigned short USBF_PIPE4CTR __AT (0x40080076);



// ------------------------------  Field Item: USBF_PIPE4CTR_PID  ---------------------------------
// SVD Line: 11934

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080076) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE4CTR >> 0) & 0x3), ((USBF_PIPE4CTR = (USBF_PIPE4CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE4CTR_PBUSY  --------------------------------
// SVD Line: 11940

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080076) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE4CTR_SQMON  --------------------------------
// SVD Line: 11946

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080076) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE4CTR_SQSET  --------------------------------
// SVD Line: 11952

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080076) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE4CTR_SQCLR  --------------------------------
// SVD Line: 11958

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080076) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE4CTR_ACLRM  --------------------------------
// SVD Line: 11964

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080076) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE4CTR_ATREPM  --------------------------------
// SVD Line: 11970

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_ATREPM
//    <name> ATREPM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080076) Auto Response Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.10..10> ATREPM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE4CTR_INBUFM  --------------------------------
// SVD Line: 11976

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_INBUFM
//    <name> INBUFM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080076) Transmit Buffer Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.14..14> INBUFM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE4CTR_BSTS  ---------------------------------
// SVD Line: 11982

//  <item> SFDITEM_FIELD__USBF_PIPE4CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080076) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE4CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE4CTR  ---------------------------------
// SVD Line: 12002

//  <rtree> SFDITEM_REG__USBF_PIPE4CTR
//    <name> PIPE4CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080076) PIPE4 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE4CTR >> 0) & 0xFFFF), ((USBF_PIPE4CTR = (USBF_PIPE4CTR & ~(0xC7E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC7E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_ATREPM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_INBUFM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE4CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE5CTR  ------------------------------
// SVD Line: 12008

unsigned short USBF_PIPE5CTR __AT (0x40080078);



// ------------------------------  Field Item: USBF_PIPE5CTR_PID  ---------------------------------
// SVD Line: 11934

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080078) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE5CTR >> 0) & 0x3), ((USBF_PIPE5CTR = (USBF_PIPE5CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE5CTR_PBUSY  --------------------------------
// SVD Line: 11940

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080078) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE5CTR_SQMON  --------------------------------
// SVD Line: 11946

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080078) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE5CTR_SQSET  --------------------------------
// SVD Line: 11952

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080078) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE5CTR_SQCLR  --------------------------------
// SVD Line: 11958

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080078) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE5CTR_ACLRM  --------------------------------
// SVD Line: 11964

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080078) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE5CTR_ATREPM  --------------------------------
// SVD Line: 11970

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_ATREPM
//    <name> ATREPM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40080078) Auto Response Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.10..10> ATREPM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USBF_PIPE5CTR_INBUFM  --------------------------------
// SVD Line: 11976

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_INBUFM
//    <name> INBUFM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40080078) Transmit Buffer Monitor </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.14..14> INBUFM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE5CTR_BSTS  ---------------------------------
// SVD Line: 11982

//  <item> SFDITEM_FIELD__USBF_PIPE5CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080078) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE5CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE5CTR  ---------------------------------
// SVD Line: 12008

//  <rtree> SFDITEM_REG__USBF_PIPE5CTR
//    <name> PIPE5CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080078) PIPE5 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE5CTR >> 0) & 0xFFFF), ((USBF_PIPE5CTR = (USBF_PIPE5CTR & ~(0xC7E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC7E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_ATREPM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_INBUFM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE5CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE6CTR  ------------------------------
// SVD Line: 12014

unsigned short USBF_PIPE6CTR __AT (0x4008007A);



// ------------------------------  Field Item: USBF_PIPE6CTR_PID  ---------------------------------
// SVD Line: 12022

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4008007A) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE6CTR >> 0) & 0x3), ((USBF_PIPE6CTR = (USBF_PIPE6CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE6CTR_PBUSY  --------------------------------
// SVD Line: 12028

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008007A) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE6CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE6CTR_SQMON  --------------------------------
// SVD Line: 12034

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008007A) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE6CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE6CTR_SQSET  --------------------------------
// SVD Line: 12040

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008007A) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE6CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE6CTR_SQCLR  --------------------------------
// SVD Line: 12046

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008007A) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE6CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE6CTR_ACLRM  --------------------------------
// SVD Line: 12052

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008007A) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE6CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE6CTR_BSTS  ---------------------------------
// SVD Line: 12058

//  <item> SFDITEM_FIELD__USBF_PIPE6CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008007A) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE6CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE6CTR  ---------------------------------
// SVD Line: 12014

//  <rtree> SFDITEM_REG__USBF_PIPE6CTR
//    <name> PIPE6CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008007A) PIPE6 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE6CTR >> 0) & 0xFFFF), ((USBF_PIPE6CTR = (USBF_PIPE6CTR & ~(0x83E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x83E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE6CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE7CTR  ------------------------------
// SVD Line: 12066

unsigned short USBF_PIPE7CTR __AT (0x4008007C);



// ------------------------------  Field Item: USBF_PIPE7CTR_PID  ---------------------------------
// SVD Line: 12022

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4008007C) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE7CTR >> 0) & 0x3), ((USBF_PIPE7CTR = (USBF_PIPE7CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE7CTR_PBUSY  --------------------------------
// SVD Line: 12028

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008007C) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE7CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE7CTR_SQMON  --------------------------------
// SVD Line: 12034

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008007C) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE7CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE7CTR_SQSET  --------------------------------
// SVD Line: 12040

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008007C) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE7CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE7CTR_SQCLR  --------------------------------
// SVD Line: 12046

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008007C) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE7CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE7CTR_ACLRM  --------------------------------
// SVD Line: 12052

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008007C) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE7CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE7CTR_BSTS  ---------------------------------
// SVD Line: 12058

//  <item> SFDITEM_FIELD__USBF_PIPE7CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008007C) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE7CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE7CTR  ---------------------------------
// SVD Line: 12066

//  <rtree> SFDITEM_REG__USBF_PIPE7CTR
//    <name> PIPE7CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008007C) PIPE7 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE7CTR >> 0) & 0xFFFF), ((USBF_PIPE7CTR = (USBF_PIPE7CTR & ~(0x83E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x83E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE7CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE8CTR  ------------------------------
// SVD Line: 12072

unsigned short USBF_PIPE8CTR __AT (0x4008007E);



// ------------------------------  Field Item: USBF_PIPE8CTR_PID  ---------------------------------
// SVD Line: 12022

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4008007E) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE8CTR >> 0) & 0x3), ((USBF_PIPE8CTR = (USBF_PIPE8CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE8CTR_PBUSY  --------------------------------
// SVD Line: 12028

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008007E) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE8CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE8CTR_SQMON  --------------------------------
// SVD Line: 12034

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008007E) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE8CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE8CTR_SQSET  --------------------------------
// SVD Line: 12040

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008007E) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE8CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE8CTR_SQCLR  --------------------------------
// SVD Line: 12046

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008007E) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE8CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE8CTR_ACLRM  --------------------------------
// SVD Line: 12052

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008007E) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE8CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE8CTR_BSTS  ---------------------------------
// SVD Line: 12058

//  <item> SFDITEM_FIELD__USBF_PIPE8CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008007E) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE8CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE8CTR  ---------------------------------
// SVD Line: 12072

//  <rtree> SFDITEM_REG__USBF_PIPE8CTR
//    <name> PIPE8CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008007E) PIPE8 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE8CTR >> 0) & 0xFFFF), ((USBF_PIPE8CTR = (USBF_PIPE8CTR & ~(0x83E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x83E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE8CTR_BSTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_PIPE9CTR  ------------------------------
// SVD Line: 12078

unsigned short USBF_PIPE9CTR __AT (0x40080080);



// ------------------------------  Field Item: USBF_PIPE9CTR_PID  ---------------------------------
// SVD Line: 12022

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_PID
//    <name> PID </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080080) Response PID </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_PIPE9CTR >> 0) & 0x3), ((USBF_PIPE9CTR = (USBF_PIPE9CTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE9CTR_PBUSY  --------------------------------
// SVD Line: 12028

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_PBUSY
//    <name> PBUSY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080080) Pipe Busy </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE9CTR ) </loc>
//      <o.5..5> PBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE9CTR_SQMON  --------------------------------
// SVD Line: 12034

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_SQMON
//    <name> SQMON </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080080) Sequence Toggle Bit Confirmation </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE9CTR ) </loc>
//      <o.6..6> SQMON
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE9CTR_SQSET  --------------------------------
// SVD Line: 12040

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_SQSET
//    <name> SQSET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080080) Sequence Toggle Bit Set </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE9CTR ) </loc>
//      <o.7..7> SQSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE9CTR_SQCLR  --------------------------------
// SVD Line: 12046

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_SQCLR
//    <name> SQCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080080) Sequence Toggle Bit Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE9CTR ) </loc>
//      <o.8..8> SQCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE9CTR_ACLRM  --------------------------------
// SVD Line: 12052

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_ACLRM
//    <name> ACLRM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080080) Auto Buffer Clear Mode </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE9CTR ) </loc>
//      <o.9..9> ACLRM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USBF_PIPE9CTR_BSTS  ---------------------------------
// SVD Line: 12058

//  <item> SFDITEM_FIELD__USBF_PIPE9CTR_BSTS
//    <name> BSTS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40080080) Buffer Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPE9CTR ) </loc>
//      <o.15..15> BSTS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USBF_PIPE9CTR  ---------------------------------
// SVD Line: 12078

//  <rtree> SFDITEM_REG__USBF_PIPE9CTR
//    <name> PIPE9CTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080080) PIPE9 Control Registers </i>
//    <loc> ( (unsigned short)((USBF_PIPE9CTR >> 0) & 0xFFFF), ((USBF_PIPE9CTR = (USBF_PIPE9CTR & ~(0x83E3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x83E3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_PID </item>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_PBUSY </item>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_SQMON </item>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_SQSET </item>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_SQCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_ACLRM </item>
//    <item> SFDITEM_FIELD__USBF_PIPE9CTR_BSTS </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_PIPETRE_PIPETRE_PIPE1TRE  ----------------------
// SVD Line: 12084

unsigned short USBF_PIPETRE_PIPETRE_PIPE1TRE __AT (0x40080090);



// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE1TRE_TRCLR  ------------------------
// SVD Line: 12095

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE1TRE_TRCLR
//    <name> TRCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080090) Transaction Counter Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE1TRE ) </loc>
//      <o.8..8> TRCLR
//    </check>
//  </item>
//  


// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE1TRE_TRENB  ------------------------
// SVD Line: 12101

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE1TRE_TRENB
//    <name> TRENB </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080090) Transaction Counter Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE1TRE ) </loc>
//      <o.9..9> TRENB
//    </check>
//  </item>
//  


// ----------------------  Register RTree: USBF_PIPETRE_PIPETRE_PIPE1TRE  -------------------------
// SVD Line: 12084

//  <rtree> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE1TRE
//    <name> PIPE1TRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080090) PIPE1 Transaction Counter Enable Register </i>
//    <loc> ( (unsigned short)((USBF_PIPETRE_PIPETRE_PIPE1TRE >> 0) & 0xFFFF), ((USBF_PIPETRE_PIPETRE_PIPE1TRE = (USBF_PIPETRE_PIPETRE_PIPE1TRE & ~(0x300UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x300) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE1TRE_TRCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE1TRE_TRENB </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_PIPETRE_PIPETRE_PIPE2TRE  ----------------------
// SVD Line: 12084

unsigned short USBF_PIPETRE_PIPETRE_PIPE2TRE __AT (0x40080094);



// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE2TRE_TRCLR  ------------------------
// SVD Line: 12095

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE2TRE_TRCLR
//    <name> TRCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080094) Transaction Counter Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE2TRE ) </loc>
//      <o.8..8> TRCLR
//    </check>
//  </item>
//  


// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE2TRE_TRENB  ------------------------
// SVD Line: 12101

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE2TRE_TRENB
//    <name> TRENB </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080094) Transaction Counter Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE2TRE ) </loc>
//      <o.9..9> TRENB
//    </check>
//  </item>
//  


// ----------------------  Register RTree: USBF_PIPETRE_PIPETRE_PIPE2TRE  -------------------------
// SVD Line: 12084

//  <rtree> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE2TRE
//    <name> PIPE2TRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080094) PIPE2 Transaction Counter Enable Register </i>
//    <loc> ( (unsigned short)((USBF_PIPETRE_PIPETRE_PIPE2TRE >> 0) & 0xFFFF), ((USBF_PIPETRE_PIPETRE_PIPE2TRE = (USBF_PIPETRE_PIPETRE_PIPE2TRE & ~(0x300UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x300) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE2TRE_TRCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE2TRE_TRENB </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_PIPETRE_PIPETRE_PIPE3TRE  ----------------------
// SVD Line: 12084

unsigned short USBF_PIPETRE_PIPETRE_PIPE3TRE __AT (0x40080098);



// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE3TRE_TRCLR  ------------------------
// SVD Line: 12095

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE3TRE_TRCLR
//    <name> TRCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40080098) Transaction Counter Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE3TRE ) </loc>
//      <o.8..8> TRCLR
//    </check>
//  </item>
//  


// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE3TRE_TRENB  ------------------------
// SVD Line: 12101

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE3TRE_TRENB
//    <name> TRENB </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40080098) Transaction Counter Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE3TRE ) </loc>
//      <o.9..9> TRENB
//    </check>
//  </item>
//  


// ----------------------  Register RTree: USBF_PIPETRE_PIPETRE_PIPE3TRE  -------------------------
// SVD Line: 12084

//  <rtree> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE3TRE
//    <name> PIPE3TRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080098) PIPE3 Transaction Counter Enable Register </i>
//    <loc> ( (unsigned short)((USBF_PIPETRE_PIPETRE_PIPE3TRE >> 0) & 0xFFFF), ((USBF_PIPETRE_PIPETRE_PIPE3TRE = (USBF_PIPETRE_PIPETRE_PIPE3TRE & ~(0x300UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x300) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE3TRE_TRCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE3TRE_TRENB </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_PIPETRE_PIPETRE_PIPE4TRE  ----------------------
// SVD Line: 12084

unsigned short USBF_PIPETRE_PIPETRE_PIPE4TRE __AT (0x4008009C);



// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE4TRE_TRCLR  ------------------------
// SVD Line: 12095

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE4TRE_TRCLR
//    <name> TRCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008009C) Transaction Counter Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE4TRE ) </loc>
//      <o.8..8> TRCLR
//    </check>
//  </item>
//  


// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE4TRE_TRENB  ------------------------
// SVD Line: 12101

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE4TRE_TRENB
//    <name> TRENB </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008009C) Transaction Counter Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE4TRE ) </loc>
//      <o.9..9> TRENB
//    </check>
//  </item>
//  


// ----------------------  Register RTree: USBF_PIPETRE_PIPETRE_PIPE4TRE  -------------------------
// SVD Line: 12084

//  <rtree> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE4TRE
//    <name> PIPE4TRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008009C) PIPE4 Transaction Counter Enable Register </i>
//    <loc> ( (unsigned short)((USBF_PIPETRE_PIPETRE_PIPE4TRE >> 0) & 0xFFFF), ((USBF_PIPETRE_PIPETRE_PIPE4TRE = (USBF_PIPETRE_PIPETRE_PIPE4TRE & ~(0x300UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x300) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE4TRE_TRCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE4TRE_TRENB </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_PIPETRE_PIPETRE_PIPE5TRE  ----------------------
// SVD Line: 12084

unsigned short USBF_PIPETRE_PIPETRE_PIPE5TRE __AT (0x400800A0);



// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE5TRE_TRCLR  ------------------------
// SVD Line: 12095

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE5TRE_TRCLR
//    <name> TRCLR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400800A0) Transaction Counter Clear </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE5TRE ) </loc>
//      <o.8..8> TRCLR
//    </check>
//  </item>
//  


// ---------------------  Field Item: USBF_PIPETRE_PIPETRE_PIPE5TRE_TRENB  ------------------------
// SVD Line: 12101

//  <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE5TRE_TRENB
//    <name> TRENB </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400800A0) Transaction Counter Enable </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_PIPETRE_PIPETRE_PIPE5TRE ) </loc>
//      <o.9..9> TRENB
//    </check>
//  </item>
//  


// ----------------------  Register RTree: USBF_PIPETRE_PIPETRE_PIPE5TRE  -------------------------
// SVD Line: 12084

//  <rtree> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE5TRE
//    <name> PIPE5TRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800A0) PIPE5 Transaction Counter Enable Register </i>
//    <loc> ( (unsigned short)((USBF_PIPETRE_PIPETRE_PIPE5TRE >> 0) & 0xFFFF), ((USBF_PIPETRE_PIPETRE_PIPE5TRE = (USBF_PIPETRE_PIPETRE_PIPE5TRE & ~(0x300UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x300) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE5TRE_TRCLR </item>
//    <item> SFDITEM_FIELD__USBF_PIPETRE_PIPETRE_PIPE5TRE_TRENB </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_PIPETRN_PIPETRN_PIPE1TRN  ----------------------
// SVD Line: 12109

unsigned short USBF_PIPETRN_PIPETRN_PIPE1TRN __AT (0x40080092);



// ----------------------  Register Item: USBF_PIPETRN_PIPETRN_PIPE1TRN  --------------------------
// SVD Line: 12109

//  <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE1TRN
//    <name> PIPE1TRN </name>
//    <i> [Bits 15..0] RW (@ 0x40080092) PIPE1 Transaction Counter Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_PIPETRN_PIPETRN_PIPE1TRN >> 0) & 0xFFFFFFFF), ((USBF_PIPETRN_PIPETRN_PIPE1TRN = (USBF_PIPETRN_PIPETRN_PIPE1TRN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: USBF_PIPETRN_PIPETRN_PIPE2TRN  ----------------------
// SVD Line: 12109

unsigned short USBF_PIPETRN_PIPETRN_PIPE2TRN __AT (0x40080096);



// ----------------------  Register Item: USBF_PIPETRN_PIPETRN_PIPE2TRN  --------------------------
// SVD Line: 12109

//  <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE2TRN
//    <name> PIPE2TRN </name>
//    <i> [Bits 15..0] RW (@ 0x40080096) PIPE2 Transaction Counter Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_PIPETRN_PIPETRN_PIPE2TRN >> 0) & 0xFFFFFFFF), ((USBF_PIPETRN_PIPETRN_PIPE2TRN = (USBF_PIPETRN_PIPETRN_PIPE2TRN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: USBF_PIPETRN_PIPETRN_PIPE3TRN  ----------------------
// SVD Line: 12109

unsigned short USBF_PIPETRN_PIPETRN_PIPE3TRN __AT (0x4008009A);



// ----------------------  Register Item: USBF_PIPETRN_PIPETRN_PIPE3TRN  --------------------------
// SVD Line: 12109

//  <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE3TRN
//    <name> PIPE3TRN </name>
//    <i> [Bits 15..0] RW (@ 0x4008009A) PIPE3 Transaction Counter Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_PIPETRN_PIPETRN_PIPE3TRN >> 0) & 0xFFFFFFFF), ((USBF_PIPETRN_PIPETRN_PIPE3TRN = (USBF_PIPETRN_PIPETRN_PIPE3TRN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: USBF_PIPETRN_PIPETRN_PIPE4TRN  ----------------------
// SVD Line: 12109

unsigned short USBF_PIPETRN_PIPETRN_PIPE4TRN __AT (0x4008009E);



// ----------------------  Register Item: USBF_PIPETRN_PIPETRN_PIPE4TRN  --------------------------
// SVD Line: 12109

//  <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE4TRN
//    <name> PIPE4TRN </name>
//    <i> [Bits 15..0] RW (@ 0x4008009E) PIPE4 Transaction Counter Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_PIPETRN_PIPETRN_PIPE4TRN >> 0) & 0xFFFFFFFF), ((USBF_PIPETRN_PIPETRN_PIPE4TRN = (USBF_PIPETRN_PIPETRN_PIPE4TRN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: USBF_PIPETRN_PIPETRN_PIPE5TRN  ----------------------
// SVD Line: 12109

unsigned short USBF_PIPETRN_PIPETRN_PIPE5TRN __AT (0x400800A2);



// ----------------------  Register Item: USBF_PIPETRN_PIPETRN_PIPE5TRN  --------------------------
// SVD Line: 12109

//  <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE5TRN
//    <name> PIPE5TRN </name>
//    <i> [Bits 15..0] RW (@ 0x400800A2) PIPE5 Transaction Counter Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((USBF_PIPETRN_PIPETRN_PIPE5TRN >> 0) & 0xFFFFFFFF), ((USBF_PIPETRN_PIPETRN_PIPE5TRN = (USBF_PIPETRN_PIPETRN_PIPE5TRN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: USBF_DEVADDn_DEVADDn_DEVADDn0  ----------------------
// SVD Line: 12121

unsigned short USBF_DEVADDn_DEVADDn_DEVADDn0 __AT (0x400800D0);



// --------------------  Field Item: USBF_DEVADDn_DEVADDn_DEVADDn0_USBSPD  ------------------------
// SVD Line: 12132

//  <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn0_USBSPD
//    <name> USBSPD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x400800D0) Transfer Speed of Communication Target Device </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DEVADDn_DEVADDn_DEVADDn0 >> 6) & 0x3), ((USBF_DEVADDn_DEVADDn_DEVADDn0 = (USBF_DEVADDn_DEVADDn_DEVADDn0 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: USBF_DEVADDn_DEVADDn_DEVADDn0  -------------------------
// SVD Line: 12121

//  <rtree> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn0
//    <name> DEVADDn0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800D0) Device Address 0 Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DEVADDn_DEVADDn_DEVADDn0 >> 0) & 0xFFFF), ((USBF_DEVADDn_DEVADDn_DEVADDn0 = (USBF_DEVADDn_DEVADDn_DEVADDn0 & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn0_USBSPD </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_DEVADDn_DEVADDn_DEVADDn1  ----------------------
// SVD Line: 12121

unsigned short USBF_DEVADDn_DEVADDn_DEVADDn1 __AT (0x400800D2);



// --------------------  Field Item: USBF_DEVADDn_DEVADDn_DEVADDn1_USBSPD  ------------------------
// SVD Line: 12132

//  <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn1_USBSPD
//    <name> USBSPD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x400800D2) Transfer Speed of Communication Target Device </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DEVADDn_DEVADDn_DEVADDn1 >> 6) & 0x3), ((USBF_DEVADDn_DEVADDn_DEVADDn1 = (USBF_DEVADDn_DEVADDn_DEVADDn1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: USBF_DEVADDn_DEVADDn_DEVADDn1  -------------------------
// SVD Line: 12121

//  <rtree> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn1
//    <name> DEVADDn1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800D2) Device Address 1 Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DEVADDn_DEVADDn_DEVADDn1 >> 0) & 0xFFFF), ((USBF_DEVADDn_DEVADDn_DEVADDn1 = (USBF_DEVADDn_DEVADDn_DEVADDn1 & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn1_USBSPD </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_DEVADDn_DEVADDn_DEVADDn2  ----------------------
// SVD Line: 12121

unsigned short USBF_DEVADDn_DEVADDn_DEVADDn2 __AT (0x400800D4);



// --------------------  Field Item: USBF_DEVADDn_DEVADDn_DEVADDn2_USBSPD  ------------------------
// SVD Line: 12132

//  <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn2_USBSPD
//    <name> USBSPD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x400800D4) Transfer Speed of Communication Target Device </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DEVADDn_DEVADDn_DEVADDn2 >> 6) & 0x3), ((USBF_DEVADDn_DEVADDn_DEVADDn2 = (USBF_DEVADDn_DEVADDn_DEVADDn2 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: USBF_DEVADDn_DEVADDn_DEVADDn2  -------------------------
// SVD Line: 12121

//  <rtree> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn2
//    <name> DEVADDn2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800D4) Device Address 2 Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DEVADDn_DEVADDn_DEVADDn2 >> 0) & 0xFFFF), ((USBF_DEVADDn_DEVADDn_DEVADDn2 = (USBF_DEVADDn_DEVADDn_DEVADDn2 & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn2_USBSPD </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_DEVADDn_DEVADDn_DEVADDn3  ----------------------
// SVD Line: 12121

unsigned short USBF_DEVADDn_DEVADDn_DEVADDn3 __AT (0x400800D6);



// --------------------  Field Item: USBF_DEVADDn_DEVADDn_DEVADDn3_USBSPD  ------------------------
// SVD Line: 12132

//  <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn3_USBSPD
//    <name> USBSPD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x400800D6) Transfer Speed of Communication Target Device </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DEVADDn_DEVADDn_DEVADDn3 >> 6) & 0x3), ((USBF_DEVADDn_DEVADDn_DEVADDn3 = (USBF_DEVADDn_DEVADDn_DEVADDn3 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: USBF_DEVADDn_DEVADDn_DEVADDn3  -------------------------
// SVD Line: 12121

//  <rtree> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn3
//    <name> DEVADDn3 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800D6) Device Address 3 Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DEVADDn_DEVADDn_DEVADDn3 >> 0) & 0xFFFF), ((USBF_DEVADDn_DEVADDn_DEVADDn3 = (USBF_DEVADDn_DEVADDn_DEVADDn3 & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn3_USBSPD </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_DEVADDn_DEVADDn_DEVADDn4  ----------------------
// SVD Line: 12121

unsigned short USBF_DEVADDn_DEVADDn_DEVADDn4 __AT (0x400800D8);



// --------------------  Field Item: USBF_DEVADDn_DEVADDn_DEVADDn4_USBSPD  ------------------------
// SVD Line: 12132

//  <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn4_USBSPD
//    <name> USBSPD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x400800D8) Transfer Speed of Communication Target Device </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DEVADDn_DEVADDn_DEVADDn4 >> 6) & 0x3), ((USBF_DEVADDn_DEVADDn_DEVADDn4 = (USBF_DEVADDn_DEVADDn_DEVADDn4 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: USBF_DEVADDn_DEVADDn_DEVADDn4  -------------------------
// SVD Line: 12121

//  <rtree> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn4
//    <name> DEVADDn4 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800D8) Device Address 4 Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DEVADDn_DEVADDn_DEVADDn4 >> 0) & 0xFFFF), ((USBF_DEVADDn_DEVADDn_DEVADDn4 = (USBF_DEVADDn_DEVADDn_DEVADDn4 & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn4_USBSPD </item>
//  </rtree>
//  


// ------------------  Register Item Address: USBF_DEVADDn_DEVADDn_DEVADDn5  ----------------------
// SVD Line: 12121

unsigned short USBF_DEVADDn_DEVADDn_DEVADDn5 __AT (0x400800DA);



// --------------------  Field Item: USBF_DEVADDn_DEVADDn_DEVADDn5_USBSPD  ------------------------
// SVD Line: 12132

//  <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn5_USBSPD
//    <name> USBSPD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x400800DA) Transfer Speed of Communication Target Device </i>
//    <edit> 
//      <loc> ( (unsigned char)((USBF_DEVADDn_DEVADDn_DEVADDn5 >> 6) & 0x3), ((USBF_DEVADDn_DEVADDn_DEVADDn5 = (USBF_DEVADDn_DEVADDn_DEVADDn5 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: USBF_DEVADDn_DEVADDn_DEVADDn5  -------------------------
// SVD Line: 12121

//  <rtree> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn5
//    <name> DEVADDn5 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800DA) Device Address 5 Configuration Register </i>
//    <loc> ( (unsigned short)((USBF_DEVADDn_DEVADDn_DEVADDn5 >> 0) & 0xFFFF), ((USBF_DEVADDn_DEVADDn_DEVADDn5 = (USBF_DEVADDn_DEVADDn_DEVADDn5 & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_DEVADDn_DEVADDn_DEVADDn5_USBSPD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USBF_USBMC  -------------------------------
// SVD Line: 12140

unsigned short USBF_USBMC __AT (0x400800CC);



// -----------------------------  Field Item: USBF_USBMC_VDDUSBE  ---------------------------------
// SVD Line: 12148

//  <item> SFDITEM_FIELD__USBF_USBMC_VDDUSBE
//    <name> VDDUSBE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400800CC) USB Reference Power Supply Circuit On/Off Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBMC ) </loc>
//      <o.0..0> VDDUSBE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USBF_USBMC_VDCEN  ----------------------------------
// SVD Line: 12154

//  <item> SFDITEM_FIELD__USBF_USBMC_VDCEN
//    <name> VDCEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400800CC) USB Regulator On/Off Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBMC ) </loc>
//      <o.7..7> VDCEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USBF_USBMC  -----------------------------------
// SVD Line: 12140

//  <rtree> SFDITEM_REG__USBF_USBMC
//    <name> USBMC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800CC) USB Module Control Register </i>
//    <loc> ( (unsigned short)((USBF_USBMC >> 0) & 0xFFFF), ((USBF_USBMC = (USBF_USBMC & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_USBMC_VDDUSBE </item>
//    <item> SFDITEM_FIELD__USBF_USBMC_VDCEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USBF_USBBCCTRL  -----------------------------
// SVD Line: 12162

unsigned short USBF_USBBCCTRL __AT (0x400800B0);



// ----------------------------  Field Item: USBF_USBBCCTRL_RPDME0  -------------------------------
// SVD Line: 12170

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_RPDME0
//    <name> RPDME0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400800B0) D- Pin Pull-Down Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.0..0> RPDME0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_USBBCCTRL_IDPSRCE0  ------------------------------
// SVD Line: 12176

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_IDPSRCE0
//    <name> IDPSRCE0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400800B0) D+ Pin IDPSRC Output Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.1..1> IDPSRCE0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USBF_USBBCCTRL_IDMSINKE0  ------------------------------
// SVD Line: 12182

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_IDMSINKE0
//    <name> IDMSINKE0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400800B0) D- Pin 0.6 V Input Detection (Comparator and Sink) Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.2..2> IDMSINKE0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_USBBCCTRL_VDPSRCE0  ------------------------------
// SVD Line: 12188

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_VDPSRCE0
//    <name> VDPSRCE0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400800B0) D+ Pin VDPSRC (0.6 V) Output Contro </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.3..3> VDPSRCE0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USBF_USBBCCTRL_IDPSINKE0  ------------------------------
// SVD Line: 12194

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_IDPSINKE0
//    <name> IDPSINKE0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400800B0) D+ Pin 0.6 V Input Detection (Comparator and Sink) Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.4..4> IDPSINKE0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_USBBCCTRL_VDMSRCE0  ------------------------------
// SVD Line: 12200

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_VDMSRCE0
//    <name> VDMSRCE0 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400800B0) D- Pin VDMSRC (0.6 V) Output Contro </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.5..5> VDMSRCE0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USBF_USBBCCTRL_BATCHGE0  ------------------------------
// SVD Line: 12206

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_BATCHGE0
//    <name> BATCHGE0 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400800B0) BC (Battery Charger) Function General Enable Control </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.7..7> BATCHGE0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USBF_USBBCCTRL_CHGDETSTS0  -----------------------------
// SVD Line: 12212

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_CHGDETSTS0
//    <name> CHGDETSTS0 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400800B0) D- Pin 0.6 V Input Detection Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.8..8> CHGDETSTS0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USBF_USBBCCTRL_PDDETSTS0  ------------------------------
// SVD Line: 12218

//  <item> SFDITEM_FIELD__USBF_USBBCCTRL_PDDETSTS0
//    <name> PDDETSTS0 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400800B0) D+ Pin 0.6 V Input Detection Status </i>
//    <check> 
//      <loc> ( (unsigned short) USBF_USBBCCTRL ) </loc>
//      <o.9..9> PDDETSTS0
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USBF_USBBCCTRL  ---------------------------------
// SVD Line: 12162

//  <rtree> SFDITEM_REG__USBF_USBBCCTRL
//    <name> USBBCCTRL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400800B0) BC Control Register 0 </i>
//    <loc> ( (unsigned short)((USBF_USBBCCTRL >> 0) & 0xFFFF), ((USBF_USBBCCTRL = (USBF_USBBCCTRL & ~(0x3BFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_RPDME0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_IDPSRCE0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_IDMSINKE0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_VDPSRCE0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_IDPSINKE0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_VDMSRCE0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_BATCHGE0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_CHGDETSTS0 </item>
//    <item> SFDITEM_FIELD__USBF_USBBCCTRL_PDDETSTS0 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: USBF  -------------------------------------
// SVD Line: 10546

//  <view> USBF
//    <name> USBF </name>
//    <item> SFDITEM_REG__USBF_SYSCFG </item>
//    <item> SFDITEM_REG__USBF_SYSSTS0 </item>
//    <item> SFDITEM_REG__USBF_DVSTCTR0 </item>
//    <item> SFDITEM_REG__USBF_CFIFO </item>
//    <item> SFDITEM_REG__USBF_CFIFOL </item>
//    <item> SFDITEM_REG__USBF_D0FIFO </item>
//    <item> SFDITEM_REG__USBF_D0FIFOL </item>
//    <item> SFDITEM_REG__USBF_D1FIFO </item>
//    <item> SFDITEM_REG__USBF_D1FIFOL </item>
//    <item> SFDITEM_REG__USBF_CFIFOSEL </item>
//    <item> SFDITEM_REG__USBF_D0FIFOSEL </item>
//    <item> SFDITEM_REG__USBF_D1FIFOSEL </item>
//    <item> SFDITEM_REG__USBF_CFIFOCTR </item>
//    <item> SFDITEM_REG__USBF_D0FIFOCTR </item>
//    <item> SFDITEM_REG__USBF_D1FIFOCTR </item>
//    <item> SFDITEM_REG__USBF_INTENB0 </item>
//    <item> SFDITEM_REG__USBF_INTENB1 </item>
//    <item> SFDITEM_REG__USBF_BRDYENB </item>
//    <item> SFDITEM_REG__USBF_NRDYENB </item>
//    <item> SFDITEM_REG__USBF_BEMPENB </item>
//    <item> SFDITEM_REG__USBF_SOFCFG </item>
//    <item> SFDITEM_REG__USBF_INTSTS0 </item>
//    <item> SFDITEM_REG__USBF_INTSTS1 </item>
//    <item> SFDITEM_REG__USBF_BRDYSTS </item>
//    <item> SFDITEM_REG__USBF_NRDYSTS </item>
//    <item> SFDITEM_REG__USBF_BEMPSTS </item>
//    <item> SFDITEM_REG__USBF_FRMNUM </item>
//    <item> SFDITEM_REG__USBF_USBREQ </item>
//    <item> SFDITEM_REG__USBF_USBVAL </item>
//    <item> SFDITEM_REG__USBF_USBINDX </item>
//    <item> SFDITEM_REG__USBF_USBLENG </item>
//    <item> SFDITEM_REG__USBF_DCPCFG </item>
//    <item> SFDITEM_REG__USBF_DCPMAXP </item>
//    <item> SFDITEM_REG__USBF_DCPCTR </item>
//    <item> SFDITEM_REG__USBF_PIPESEL </item>
//    <item> SFDITEM_REG__USBF_PIPECFG </item>
//    <item> SFDITEM_REG__USBF_PIPEMAXP </item>
//    <item> SFDITEM_REG__USBF_PIPEPERI </item>
//    <item> SFDITEM_REG__USBF_PIPE1CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE2CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE3CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE4CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE5CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE6CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE7CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE8CTR </item>
//    <item> SFDITEM_REG__USBF_PIPE9CTR </item>
//    <item> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE1TRE </item>
//    <item> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE2TRE </item>
//    <item> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE3TRE </item>
//    <item> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE4TRE </item>
//    <item> SFDITEM_REG__USBF_PIPETRE_PIPETRE_PIPE5TRE </item>
//    <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE1TRN </item>
//    <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE2TRN </item>
//    <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE3TRN </item>
//    <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE4TRN </item>
//    <item> SFDITEM_REG__USBF_PIPETRN_PIPETRN_PIPE5TRN </item>
//    <item> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn0 </item>
//    <item> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn1 </item>
//    <item> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn2 </item>
//    <item> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn3 </item>
//    <item> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn4 </item>
//    <item> SFDITEM_REG__USBF_DEVADDn_DEVADDn_DEVADDn5 </item>
//    <item> SFDITEM_REG__USBF_USBMC </item>
//    <item> SFDITEM_REG__USBF_USBBCCTRL </item>
//  </view>
//  


// ----------------------------  Register Item Address: DBG_DBGSTR  -------------------------------
// SVD Line: 12284

unsigned int DBG_DBGSTR __AT (0x4001B000);



// ---------------------------  Field Item: DBG_DBGSTR_CDBGPWRUPACK  ------------------------------
// SVD Line: 12292

//  <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPACK
//    <name> CDBGPWRUPACK </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x4001B000) DBG Power Up Acknowledgement </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTR ) </loc>
//      <o.29..29> CDBGPWRUPACK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DBG_DBGSTR_CDBGPWRUPREQ  ------------------------------
// SVD Line: 12298

//  <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPREQ
//    <name> CDBGPWRUPREQ </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x4001B000) DBG Power Up Request </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTR ) </loc>
//      <o.28..28> CDBGPWRUPREQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DBG_DBGSTR  -----------------------------------
// SVD Line: 12284

//  <rtree> SFDITEM_REG__DBG_DBGSTR
//    <name> DBGSTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001B000) Debug status register </i>
//    <loc> ( (unsigned int)((DBG_DBGSTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPACK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPREQ </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DBG_DBGSTOPCR  ------------------------------
// SVD Line: 12306

unsigned int DBG_DBGSTOPCR __AT (0x4001B004);



// -----------------------------  Field Item: DBG_DBGSTOPCR_SWDIS  --------------------------------
// SVD Line: 12314

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_SWDIS
//    <name> SWDIS </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4001B004) SWD Disable </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.24..24> SWDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_RPERMSK  -------------------------------
// SVD Line: 12320

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RPERMSK
//    <name> RPERMSK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001B004) Mask RAM parity error in debug mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.16..16> RPERMSK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_RESMSK  --------------------------------
// SVD Line: 12326

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RESMSK
//    <name> RESMSK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B004) Mask internal reset in debug mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.2..2> RESMSK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_FRZEN1  --------------------------------
// SVD Line: 12332

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN1
//    <name> FRZEN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B004) Stop Communation family macros when cpu halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.1..1> FRZEN1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_FRZEN0  --------------------------------
// SVD Line: 12338

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN0
//    <name> FRZEN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B004) Stop Timer family macros when cpu halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.0..0> FRZEN0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: DBG_DBGSTOPCR  ---------------------------------
// SVD Line: 12306

//  <rtree> SFDITEM_REG__DBG_DBGSTOPCR
//    <name> DBGSTOPCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B004) Debug Stop Control register </i>
//    <loc> ( (unsigned int)((DBG_DBGSTOPCR >> 0) & 0xFFFFFFFF), ((DBG_DBGSTOPCR = (DBG_DBGSTOPCR & ~(0x1010007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1010007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_SWDIS </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RPERMSK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RESMSK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN1 </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN0 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DBG  --------------------------------------
// SVD Line: 12268

//  <view> DBG
//    <name> DBG </name>
//    <item> SFDITEM_REG__DBG_DBGSTR </item>
//    <item> SFDITEM_REG__DBG_DBGSTOPCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: BGR_VBG85  --------------------------------
// SVD Line: 12402

unsigned short BGR_VBG85 __AT (0x08500C60);



// --------------------------------  Register Item: BGR_VBG85  ------------------------------------
// SVD Line: 12402

//  <item> SFDITEM_REG__BGR_VBG85
//    <name> VBG85 </name>
//    <i> [Bits 15..0] RO (@ 0x08500C60) The A/D conversion value of VBGR at 85 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((BGR_VBG85 >> 0) & 0xFFFFFFFF), ((BGR_VBG85 = (BGR_VBG85 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: BGR_VBG25  --------------------------------
// SVD Line: 12409

unsigned short BGR_VBG25 __AT (0x08500C64);



// --------------------------------  Register Item: BGR_VBG25  ------------------------------------
// SVD Line: 12409

//  <item> SFDITEM_REG__BGR_VBG25
//    <name> VBG25 </name>
//    <i> [Bits 15..0] RO (@ 0x08500C64) The A/D conversion value of VBGR at 25 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((BGR_VBG25 >> 0) & 0xFFFFFFFF), ((BGR_VBG25 = (BGR_VBG25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: BGR  --------------------------------------
// SVD Line: 12386

//  <view> BGR
//    <name> BGR </name>
//    <item> SFDITEM_REG__BGR_VBG85 </item>
//    <item> SFDITEM_REG__BGR_VBG25 </item>
//  </view>
//  


// ----------------------------  Register Item Address: TSN_TSN85  --------------------------------
// SVD Line: 12436

unsigned short TSN_TSN85 __AT (0x08500C68);



// --------------------------------  Register Item: TSN_TSN85  ------------------------------------
// SVD Line: 12436

//  <item> SFDITEM_REG__TSN_TSN85
//    <name> TSN85 </name>
//    <i> [Bits 15..0] RO (@ 0x08500C68) The A/D conversion value of Temperature Sensor at 85 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((TSN_TSN85 >> 0) & 0xFFFFFFFF), ((TSN_TSN85 = (TSN_TSN85 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TSN_TSN25  --------------------------------
// SVD Line: 12444

unsigned short TSN_TSN25 __AT (0x08500C6C);



// --------------------------------  Register Item: TSN_TSN25  ------------------------------------
// SVD Line: 12444

//  <item> SFDITEM_REG__TSN_TSN25
//    <name> TSN25 </name>
//    <i> [Bits 15..0] RO (@ 0x08500C6C) The A/D conversion value of Temperature Sensor at 25 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((TSN_TSN25 >> 0) & 0xFFFFFFFF), ((TSN_TSN25 = (TSN_TSN25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TSN  --------------------------------------
// SVD Line: 12420

//  <view> TSN
//    <name> TSN </name>
//    <item> SFDITEM_REG__TSN_TSN85 </item>
//    <item> SFDITEM_REG__TSN_TSN25 </item>
//  </view>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID0  ----------------------------
// SVD Line: 12472

unsigned int UID_UID_UID_UID0 __AT (0x08500E4C);



// -----------------------------  Register Item: UID_UID_UID_UID0  --------------------------------
// SVD Line: 12472

//  <item> SFDITEM_REG__UID_UID_UID_UID0
//    <name> UID0 </name>
//    <i> [Bits 31..0] RO (@ 0x08500E4C) UID word 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID0 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID0 = (UID_UID_UID_UID0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID1  ----------------------------
// SVD Line: 12472

unsigned int UID_UID_UID_UID1 __AT (0x08500E50);



// -----------------------------  Register Item: UID_UID_UID_UID1  --------------------------------
// SVD Line: 12472

//  <item> SFDITEM_REG__UID_UID_UID_UID1
//    <name> UID1 </name>
//    <i> [Bits 31..0] RO (@ 0x08500E50) UID word 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID1 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID1 = (UID_UID_UID_UID1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID2  ----------------------------
// SVD Line: 12472

unsigned int UID_UID_UID_UID2 __AT (0x08500E54);



// -----------------------------  Register Item: UID_UID_UID_UID2  --------------------------------
// SVD Line: 12472

//  <item> SFDITEM_REG__UID_UID_UID_UID2
//    <name> UID2 </name>
//    <i> [Bits 31..0] RO (@ 0x08500E54) UID word 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID2 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID2 = (UID_UID_UID_UID2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID3  ----------------------------
// SVD Line: 12472

unsigned int UID_UID_UID_UID3 __AT (0x08500E58);



// -----------------------------  Register Item: UID_UID_UID_UID3  --------------------------------
// SVD Line: 12472

//  <item> SFDITEM_REG__UID_UID_UID_UID3
//    <name> UID3 </name>
//    <i> [Bits 31..0] RO (@ 0x08500E58) UID word 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID3 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID3 = (UID_UID_UID_UID3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: UID  --------------------------------------
// SVD Line: 12456

//  <view> UID
//    <name> UID </name>
//    <item> SFDITEM_REG__UID_UID_UID_UID0 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID1 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID2 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID3 </item>
//  </view>
//  


// -----------------------------   IRQ Num definition: BAT32G157  ---------------------------------
// SVD Line: 36



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M0+ Specific Interrupt Numbers  ---------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// --------------------------  BAT32G157 Specific Interrupt Numbers  ------------------------------

//  <qitem> LVI_IRQ
//    <name> LVI </name>
//    <i> Low Voltage detection interrupt </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> INTP0_IRQ
//    <name> INTP0 </name>
//    <i> INTP0 External interrupt request </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> INTP1_IRQ
//    <name> INTP1 </name>
//    <i> INTP1 External interrupt request </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> INTP2_IRQ
//    <name> INTP2 </name>
//    <i> INTP2 External interrupt request </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> INTP3_IRQ
//    <name> INTP3 </name>
//    <i> INTP3 External interrupt request </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> USBI_IRQ
//    <name> USBI </name>
//    <i> INTUSBI interrupt request </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> USBR_IRQ
//    <name> USBR </name>
//    <i> INTUSBR interrupt request </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> ST0_IRQ
//    <name> ST0 </name>
//    <i> UART0 transmission transfer end or buffer empty </i>
//    <loc> 23 </loc>
//  </qitem>
//  
//  <qitem> SR0_IRQ
//    <name> SR0 </name>
//    <i> UART0 rerception transfer </i>
//    <loc> 24 </loc>
//  </qitem>
//  
//  <qitem> SRE0_IRQ
//    <name> SRE0 </name>
//    <i> UART0 rerception communication error occurrence </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> ST1_IRQ
//    <name> ST1 </name>
//    <i> UART1 transmission transfer end or buffer empty </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> SR1_IRQ
//    <name> SR1 </name>
//    <i> UART1 rerception transfer </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> SRE1_IRQ
//    <name> SRE1 </name>
//    <i> UART1 rerception communication error occurrence </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> ST2_IRQ
//    <name> ST2 </name>
//    <i> UART2 transmission transfer end or buffer empty </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> SR2_IRQ
//    <name> SR2 </name>
//    <i> UART2 rerception transfer </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> SRE2_IRQ
//    <name> SRE2 </name>
//    <i> UART2 rerception communication error occurrence </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> IICA0_IRQ
//    <name> IICA0 </name>
//    <i> IICA0 interrupt request </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> IICA1_IRQ
//    <name> IICA1 </name>
//    <i> IICA1 interrupt request </i>
//    <loc> 33 </loc>
//  </qitem>
//  
//  <qitem> TM00_IRQ
//    <name> TM00 </name>
//    <i> TM40 channel 0 interrupt request </i>
//    <loc> 34 </loc>
//  </qitem>
//  
//  <qitem> TM01_IRQ
//    <name> TM01 </name>
//    <i> TM40 channel 1 interrupt request </i>
//    <loc> 35 </loc>
//  </qitem>
//  
//  <qitem> TM02_IRQ
//    <name> TM02 </name>
//    <i> TM40 channel 2 interrupt request </i>
//    <loc> 36 </loc>
//  </qitem>
//  
//  <qitem> TM03_IRQ
//    <name> TM03 </name>
//    <i> TM40 channel 3 interrupt request </i>
//    <loc> 37 </loc>
//  </qitem>
//  
//  <qitem> ADC_IRQ
//    <name> ADC </name>
//    <i> ADC interrupt request </i>
//    <loc> 38 </loc>
//  </qitem>
//  
//  <qitem> RTC_IRQ
//    <name> RTC </name>
//    <i> Real-Time Clock interrupt request </i>
//    <loc> 39 </loc>
//  </qitem>
//  
//  <qitem> KEY_IRQ
//    <name> KEY </name>
//    <i> KEY return interrupt request </i>
//    <loc> 40 </loc>
//  </qitem>
//  
//  <qitem> CMP0_IRQ
//    <name> CMP0 </name>
//    <i> CMP0 interrupt request </i>
//    <loc> 41 </loc>
//  </qitem>
//  
//  <qitem> CMP1_IRQ
//    <name> CMP1 </name>
//    <i> CMP1 interrupt request </i>
//    <loc> 42 </loc>
//  </qitem>
//  
//  <qitem> TM10_IRQ
//    <name> TM10 </name>
//    <i> TM81 channel 0 interrupt request </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> TM11_IRQ
//    <name> TM11 </name>
//    <i> TM81 channel 1 interrupt request </i>
//    <loc> 44 </loc>
//  </qitem>
//  
//  <qitem> TM12_IRQ
//    <name> TM12 </name>
//    <i> TM81 channel 2 interrupt request </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> TM13_IRQ
//    <name> TM13 </name>
//    <i> TM81 channel 3 interrupt request </i>
//    <loc> 46 </loc>
//  </qitem>
//  
//  <qitem> FMC_IRQ
//    <name> FMC </name>
//    <i> Flash erase or write finish </i>
//    <loc> 47 </loc>
//  </qitem>
//  
//  <irqtable> BAT32G157_IRQTable
//    <name> BAT32G157 Interrupt Table </name>
//    <nvicPrioBits> 2 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> LVI_IRQ </qitem>
//    <qitem> INTP0_IRQ </qitem>
//    <qitem> INTP1_IRQ </qitem>
//    <qitem> INTP2_IRQ </qitem>
//    <qitem> INTP3_IRQ </qitem>
//    <qitem> USBI_IRQ </qitem>
//    <qitem> USBR_IRQ </qitem>
//    <qitem> ST0_IRQ </qitem>
//    <qitem> SR0_IRQ </qitem>
//    <qitem> SRE0_IRQ </qitem>
//    <qitem> ST1_IRQ </qitem>
//    <qitem> SR1_IRQ </qitem>
//    <qitem> SRE1_IRQ </qitem>
//    <qitem> ST2_IRQ </qitem>
//    <qitem> SR2_IRQ </qitem>
//    <qitem> SRE2_IRQ </qitem>
//    <qitem> IICA0_IRQ </qitem>
//    <qitem> IICA1_IRQ </qitem>
//    <qitem> TM00_IRQ </qitem>
//    <qitem> TM01_IRQ </qitem>
//    <qitem> TM02_IRQ </qitem>
//    <qitem> TM03_IRQ </qitem>
//    <qitem> ADC_IRQ </qitem>
//    <qitem> RTC_IRQ </qitem>
//    <qitem> KEY_IRQ </qitem>
//    <qitem> CMP0_IRQ </qitem>
//    <qitem> CMP1_IRQ </qitem>
//    <qitem> TM10_IRQ </qitem>
//    <qitem> TM11_IRQ </qitem>
//    <qitem> TM12_IRQ </qitem>
//    <qitem> TM13_IRQ </qitem>
//    <qitem> FMC_IRQ </qitem>
//  </irqtable>


// ------------------------------------   Menu: BAT32G157  ----------------------------------------
// SVD Line: 36



// ------------------------------  Peripheral Menu: 'BAT32G157'  ----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ADC
//    <m> ADC </m>
//  </b>
//  
//  <b> BGR
//    <m> BGR </m>
//  </b>
//  
//  <b> CLK
//    <m> CGC </m>
//  </b>
//  
//  <b> CMP
//    <m> CMP </m>
//  </b>
//  
//  <b> DBG
//    <m> DBG </m>
//  </b>
//  
//  <b> DIV
//    <m> DIV </m>
//  </b>
//  
//  <b> DMA
//    <m> DMA </m>
//  </b>
//  
//  <b> DMAVEC
//    <m> DMAVEC </m>
//  </b>
//  
//  <b> ELC
//    <m> ELC </m>
//  </b>
//  
//  <b> EPWM
//    <m> EPWM </m>
//  </b>
//  
//  <b> FMC
//    <m> FMC </m>
//  </b>
//  
//  <b> IICA0
//    <m> IICA0 </m>
//  </b>
//  
//  <b> IICA1
//    <m> IICA1 </m>
//  </b>
//  
//  <b> INT
//    <m> INT </m>
//  </b>
//  
//  <b> INTM
//    <m> INTM </m>
//  </b>
//  
//  <b> KEY
//    <m> KEY </m>
//  </b>
//  
//  <b> LCDB
//    <m> LCDB </m>
//  </b>
//  
//  <b> LVD
//    <m> LVD </m>
//  </b>
//  
//  <b> MISC
//    <m> MISC </m>
//  </b>
//  
//  <b> PCBZ
//    <m> PCBZ </m>
//  </b>
//  
//  <b> PGA
//    <m> PGA </m>
//  </b>
//  
//  <b> PORT
//    <m> PORT </m>
//  </b>
//  
//  <b> QSPI
//    <m> QSPI </m>
//  </b>
//  
//  <b> RST
//    <m> RST </m>
//  </b>
//  
//  <b> RTC
//    <m> RTC </m>
//  </b>
//  
//  <b> SAF
//    <m> SAF </m>
//  </b>
//  
//  <b> SCI0
//    <m> SCI0 </m>
//  </b>
//  
//  <b> SCI1
//    <m> SCI1 </m>
//  </b>
//  
//  <b> SCI2
//    <m> SCI2 </m>
//  </b>
//  
//  <b> SPIHS0
//    <m> SPIHS0 </m>
//  </b>
//  
//  <b> SPIHS1
//    <m> SPIHS1 </m>
//  </b>
//  
//  <b> SSI
//    <m> SSI </m>
//  </b>
//  
//  <b> TM4
//    <m> TM40 </m>
//  </b>
//  
//  <b> TM8
//    <m> TM81 </m>
//  </b>
//  
//  <b> TSN
//    <m> TSN </m>
//  </b>
//  
//  <b> UID
//    <m> UID </m>
//  </b>
//  
//  <b> USBF
//    <m> USBF </m>
//  </b>
//  
//  <b> WDT
//    <m> WDT </m>
//  </b>
//  
